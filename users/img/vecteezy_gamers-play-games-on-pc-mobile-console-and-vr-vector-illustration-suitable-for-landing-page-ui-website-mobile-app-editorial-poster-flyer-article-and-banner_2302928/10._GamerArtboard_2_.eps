%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: 10. Gamer_Artboard 2 .eps
%%Creator: Adobe Illustrator(R) 22.0
%%For: Ansori 
%%CreationDate: 13/04/20
%%BoundingBox: 0 0 2000 2000
%%HiResBoundingBox: 0 0 2000 2000
%%CropBox: 0 0 2000 2000
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 22.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 22.0.0 x244 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                        
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c143 79.161210, 2017/08/11-10:28:36        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">gamers play games on PC, mobile, console and vr vector illustration, suitable for landing page, ui, website, mobile app, editorial, poster, flyer, article, and banner</rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:description>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">gamers play games on PC, mobile, console and vr vector illustration, suitable for landing page, ui, website, mobile app, editorial, poster, flyer, article, and banner</rdf:li>
            </rdf:Alt>
         </dc:description>
         <dc:subject>
            <rdf:Bag>
               <rdf:li>play</rdf:li>
               <rdf:li>game</rdf:li>
               <rdf:li>gamer</rdf:li>
               <rdf:li>gaming</rdf:li>
               <rdf:li>computer</rdf:li>
               <rdf:li>internet</rdf:li>
               <rdf:li>player</rdf:li>
               <rdf:li>pc</rdf:li>
               <rdf:li>online</rdf:li>
               <rdf:li>video</rdf:li>
               <rdf:li>entertainment</rdf:li>
               <rdf:li>fun</rdf:li>
               <rdf:li>headset</rdf:li>
               <rdf:li>cyber</rdf:li>
               <rdf:li>monitor</rdf:li>
               <rdf:li>display</rdf:li>
               <rdf:li>young</rdf:li>
               <rdf:li>teenager</rdf:li>
               <rdf:li>man</rdf:li>
               <rdf:li>keyboard</rdf:li>
               <rdf:li>joystick</rdf:li>
               <rdf:li>console</rdf:li>
               <rdf:li>controller</rdf:li>
               <rdf:li>multiplayer</rdf:li>
               <rdf:li>tournament</rdf:li>
               <rdf:li>competition</rdf:li>
               <rdf:li>boy</rdf:li>
               <rdf:li>girl</rdf:li>
               <rdf:li>esports</rdf:li>
               <rdf:li>vr</rdf:li>
               <rdf:li>activity</rdf:li>
               <rdf:li>banner</rdf:li>
               <rdf:li>business</rdf:li>
               <rdf:li>cartoon</rdf:li>
               <rdf:li>character</rdf:li>
               <rdf:li>concept</rdf:li>
               <rdf:li>creative</rdf:li>
               <rdf:li>design</rdf:li>
               <rdf:li>doodle</rdf:li>
               <rdf:li>flat</rdf:li>
               <rdf:li>graphic</rdf:li>
               <rdf:li>illustration</rdf:li>
               <rdf:li>people</rdf:li>
               <rdf:li>technology</rdf:li>
               <rdf:li>ui</rdf:li>
               <rdf:li>vector</rdf:li>
               <rdf:li>landing page</rdf:li>
               <rdf:li>mobile</rdf:li>
               <rdf:li>app</rdf:li>
               <rdf:li>website</rdf:li>
            </rdf:Bag>
         </dc:subject>
         <xmp:CreatorTool>Adobe Illustrator CC 22.0 (Macintosh)</xmp:CreatorTool>
         <xmp:CreateDate>2020-04-13T11:00:02-07:00</xmp:CreateDate>
         <xmp:ModifyDate>2020-04-13T11:00:03-07:00</xmp:ModifyDate>
         <xmp:MetadataDate>2020-04-13T11:00:03-07:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEAtAC0AAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAAtAAAAAEA&#xA;AQC0AAAAAQAB/+IMWElDQ19QUk9GSUxFAAEBAAAMSExpbm8CEAAAbW50clJHQiBYWVogB84AAgAJ&#xA;AAYAMQAAYWNzcE1TRlQAAAAASUVDIHNSR0IAAAAAAAAAAAAAAAAAAPbWAAEAAAAA0y1IUCAgAAAA&#xA;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARY3BydAAAAVAAAAAz&#xA;ZGVzYwAAAYQAAABsd3RwdAAAAfAAAAAUYmtwdAAAAgQAAAAUclhZWgAAAhgAAAAUZ1hZWgAAAiwA&#xA;AAAUYlhZWgAAAkAAAAAUZG1uZAAAAlQAAABwZG1kZAAAAsQAAACIdnVlZAAAA0wAAACGdmlldwAA&#xA;A9QAAAAkbHVtaQAAA/gAAAAUbWVhcwAABAwAAAAkdGVjaAAABDAAAAAMclRSQwAABDwAAAgMZ1RS&#xA;QwAABDwAAAgMYlRSQwAABDwAAAgMdGV4dAAAAABDb3B5cmlnaHQgKGMpIDE5OTggSGV3bGV0dC1Q&#xA;YWNrYXJkIENvbXBhbnkAAGRlc2MAAAAAAAAAEnNSR0IgSUVDNjE5NjYtMi4xAAAAAAAAAAAAAAAS&#xA;c1JHQiBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&#xA;AAAAAAAAAAAAAFhZWiAAAAAAAADzUQABAAAAARbMWFlaIAAAAAAAAAAAAAAAAAAAAABYWVogAAAA&#xA;AAAAb6IAADj1AAADkFhZWiAAAAAAAABimQAAt4UAABjaWFlaIAAAAAAAACSgAAAPhAAAts9kZXNj&#xA;AAAAAAAAABZJRUMgaHR0cDovL3d3dy5pZWMuY2gAAAAAAAAAAAAAABZJRUMgaHR0cDovL3d3dy5p&#xA;ZWMuY2gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZGVzYwAA&#xA;AAAAAAAuSUVDIDYxOTY2LTIuMSBEZWZhdWx0IFJHQiBjb2xvdXIgc3BhY2UgLSBzUkdCAAAAAAAA&#xA;AAAAAAAuSUVDIDYxOTY2LTIuMSBEZWZhdWx0IFJHQiBjb2xvdXIgc3BhY2UgLSBzUkdCAAAAAAAA&#xA;AAAAAAAAAAAAAAAAAAAAAGRlc2MAAAAAAAAALFJlZmVyZW5jZSBWaWV3aW5nIENvbmRpdGlvbiBp&#xA;biBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAACxSZWZlcmVuY2UgVmlld2luZyBDb25kaXRpb24gaW4g&#xA;SUVDNjE5NjYtMi4xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB2aWV3AAAAAAATpP4AFF8uABDP&#xA;FAAD7cwABBMLAANcngAAAAFYWVogAAAAAABMCVYAUAAAAFcf521lYXMAAAAAAAAAAQAAAAAAAAAA&#xA;AAAAAAAAAAAAAAKPAAAAAnNpZyAAAAAAQ1JUIGN1cnYAAAAAAAAEAAAAAAUACgAPABQAGQAeACMA&#xA;KAAtADIANwA7AEAARQBKAE8AVABZAF4AYwBoAG0AcgB3AHwAgQCGAIsAkACVAJoAnwCkAKkArgCy&#xA;ALcAvADBAMYAywDQANUA2wDgAOUA6wDwAPYA+wEBAQcBDQETARkBHwElASsBMgE4AT4BRQFMAVIB&#xA;WQFgAWcBbgF1AXwBgwGLAZIBmgGhAakBsQG5AcEByQHRAdkB4QHpAfIB+gIDAgwCFAIdAiYCLwI4&#xA;AkECSwJUAl0CZwJxAnoChAKOApgCogKsArYCwQLLAtUC4ALrAvUDAAMLAxYDIQMtAzgDQwNPA1oD&#xA;ZgNyA34DigOWA6IDrgO6A8cD0wPgA+wD+QQGBBMEIAQtBDsESARVBGMEcQR+BIwEmgSoBLYExATT&#xA;BOEE8AT+BQ0FHAUrBToFSQVYBWcFdwWGBZYFpgW1BcUF1QXlBfYGBgYWBicGNwZIBlkGagZ7BowG&#xA;nQavBsAG0QbjBvUHBwcZBysHPQdPB2EHdAeGB5kHrAe/B9IH5Qf4CAsIHwgyCEYIWghuCIIIlgiq&#xA;CL4I0gjnCPsJEAklCToJTwlkCXkJjwmkCboJzwnlCfsKEQonCj0KVApqCoEKmAquCsUK3ArzCwsL&#xA;Igs5C1ELaQuAC5gLsAvIC+EL+QwSDCoMQwxcDHUMjgynDMAM2QzzDQ0NJg1ADVoNdA2ODakNww3e&#xA;DfgOEw4uDkkOZA5/DpsOtg7SDu4PCQ8lD0EPXg96D5YPsw/PD+wQCRAmEEMQYRB+EJsQuRDXEPUR&#xA;ExExEU8RbRGMEaoRyRHoEgcSJhJFEmQShBKjEsMS4xMDEyMTQxNjE4MTpBPFE+UUBhQnFEkUahSL&#xA;FK0UzhTwFRIVNBVWFXgVmxW9FeAWAxYmFkkWbBaPFrIW1hb6Fx0XQRdlF4kXrhfSF/cYGxhAGGUY&#xA;ihivGNUY+hkgGUUZaxmRGbcZ3RoEGioaURp3Gp4axRrsGxQbOxtjG4obshvaHAIcKhxSHHscoxzM&#xA;HPUdHh1HHXAdmR3DHeweFh5AHmoelB6+HukfEx8+H2kflB+/H+ogFSBBIGwgmCDEIPAhHCFIIXUh&#xA;oSHOIfsiJyJVIoIiryLdIwojOCNmI5QjwiPwJB8kTSR8JKsk2iUJJTglaCWXJccl9yYnJlcmhya3&#xA;JugnGCdJJ3onqyfcKA0oPyhxKKIo1CkGKTgpaymdKdAqAio1KmgqmyrPKwIrNitpK50r0SwFLDks&#xA;biyiLNctDC1BLXYtqy3hLhYuTC6CLrcu7i8kL1ovkS/HL/4wNTBsMKQw2zESMUoxgjG6MfIyKjJj&#xA;Mpsy1DMNM0YzfzO4M/E0KzRlNJ402DUTNU01hzXCNf02NzZyNq426TckN2A3nDfXOBQ4UDiMOMg5&#xA;BTlCOX85vDn5OjY6dDqyOu87LTtrO6o76DwnPGU8pDzjPSI9YT2hPeA+ID5gPqA+4D8hP2E/oj/i&#xA;QCNAZECmQOdBKUFqQaxB7kIwQnJCtUL3QzpDfUPARANER0SKRM5FEkVVRZpF3kYiRmdGq0bwRzVH&#xA;e0fASAVIS0iRSNdJHUljSalJ8Eo3Sn1KxEsMS1NLmkviTCpMcky6TQJNSk2TTdxOJU5uTrdPAE9J&#xA;T5NP3VAnUHFQu1EGUVBRm1HmUjFSfFLHUxNTX1OqU/ZUQlSPVNtVKFV1VcJWD1ZcVqlW91dEV5JX&#xA;4FgvWH1Yy1kaWWlZuFoHWlZaplr1W0VblVvlXDVchlzWXSddeF3JXhpebF69Xw9fYV+zYAVgV2Cq&#xA;YPxhT2GiYfViSWKcYvBjQ2OXY+tkQGSUZOllPWWSZedmPWaSZuhnPWeTZ+loP2iWaOxpQ2maafFq&#xA;SGqfavdrT2una/9sV2yvbQhtYG25bhJua27Ebx5veG/RcCtwhnDgcTpxlXHwcktypnMBc11zuHQU&#xA;dHB0zHUodYV14XY+dpt2+HdWd7N4EXhueMx5KnmJeed6RnqlewR7Y3vCfCF8gXzhfUF9oX4BfmJ+&#xA;wn8jf4R/5YBHgKiBCoFrgc2CMIKSgvSDV4O6hB2EgITjhUeFq4YOhnKG14c7h5+IBIhpiM6JM4mZ&#xA;if6KZIrKizCLlov8jGOMyo0xjZiN/45mjs6PNo+ekAaQbpDWkT+RqJIRknqS45NNk7aUIJSKlPSV&#xA;X5XJljSWn5cKl3WX4JhMmLiZJJmQmfyaaJrVm0Kbr5wcnImc951kndKeQJ6unx2fi5/6oGmg2KFH&#xA;obaiJqKWowajdqPmpFakx6U4pammGqaLpv2nbqfgqFKoxKk3qamqHKqPqwKrdavprFys0K1Erbiu&#xA;La6hrxavi7AAsHWw6rFgsdayS7LCszizrrQltJy1E7WKtgG2ebbwt2i34LhZuNG5SrnCuju6tbsu&#xA;u6e8IbybvRW9j74KvoS+/796v/XAcMDswWfB48JfwtvDWMPUxFHEzsVLxcjGRsbDx0HHv8g9yLzJ&#xA;Osm5yjjKt8s2y7bMNcy1zTXNtc42zrbPN8+40DnQutE80b7SP9LB00TTxtRJ1MvVTtXR1lXW2Ndc&#xA;1+DYZNjo2WzZ8dp22vvbgNwF3IrdEN2W3hzeot8p36/gNuC94UThzOJT4tvjY+Pr5HPk/OWE5g3m&#xA;lucf56noMui86Ubp0Opb6uXrcOv77IbtEe2c7ijutO9A78zwWPDl8XLx//KM8xnzp/Q09ML1UPXe&#xA;9m32+/eK+Bn4qPk4+cf6V/rn+3f8B/yY/Sn9uv5L/tz/bf///+4ADkFkb2JlAGTAAAAAAf/bAIQA&#xA;BgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoKDBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8f&#xA;Hx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f&#xA;Hx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwERAAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQF&#xA;AwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAAAQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMB&#xA;AgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPBUtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdU&#xA;ZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eX&#xA;p7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZqbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUE&#xA;BQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEyobHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PS&#xA;NeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG&#xA;1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/a&#xA;AAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;qkFz5r9C5lh+q8vSdk5epSvE0rTjnPZu3uCco8F8JI+ru+Dnw0PFEG+fkpf4x/5c/wDkp/zblf8A&#xA;oi/of7L/AI6z/k/+l9n7Xf4x/wCXP/kp/wA24/6Iv6H+y/46v8n/ANL7P2u/xj/y5/8AJT/m3H/R&#xA;F/Q/2X/HV/k/+l9n7Xf4x/5c/wDkp/zbj/oi/of7L/jq/wAn/wBL7P2u/wAY/wDLn/yU/wCbcf8A&#xA;RF/Q/wBl/wAdX+T/AOl9n7Wj50Uf8en/ACU/5twH2jH8z/Zf8dX+Tv6X2ftRGm+aRfX0VqLb0/U5&#xA;fHzrTipbpxHhmRou3PHyjHwVd735X3NebRcETK09zfOC7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FWAan/x0rv8A4zSf8SOefa3+/n/Xl97v8P0R9wYAs3m61vb2ZoLy&#xA;5nAuPTXnH9U3Ki29NKcjSvxdD8825jpZwiLhEenoeP8Ap2fu5uADmjImpE791eVIeFvP9vb2ltwe&#xA;a8s7h2eSRwY54WiLqjvXc8qqK9DTLJnQSlKVgQnEdN4m6sD7fmxiNSABVkH5ikHIPPKz2qzteuFl&#xA;n+syQEhT+9HAgBl+ErXj7ZYM2i4ZcIhyjV+7f43zY8GosXxczde9NvODebTqA/RYuvQ+rgWZtGiC&#xA;i75mpuPU6x8KZruzMmm4P3nBfF6uK/or+GutuTq45eL03VbVXPz8ktvrTz6ZtQtlnnNvBFPdWk8b&#xA;nlLLNEqpbg1rxicsR9GX4s2iqEiBxExjIHoAd5f5wr7WuePPchZoAkeZI5fBL5rXz/8Aoq0+rNft&#xA;dIbp7jnKUavCH0vtF+YryovffMmGTQ+LLi8Ph9FbX1lfdXTf3NJjqOAVxXv191PW/KTyLqFi8xLS&#xA;8D6hpwJYxGp49t+2afsmvzka5XL7i7HVX4Jvy/QziS+Eal3Kog6sxoB9O2dzOcYi5Gh5ukAJNBDX&#xA;Wv2NokD3NxFElzIsNuzNQPI/2VU16mmGEhIXE2GccUiSAOSNW6/mX7sLWqpIj/ZNfbFV2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVIbryok9xLN9ZKmV2enCtORrTrmgz9hCc5S&#xA;464iTy7/AIufDXcIArkonyYh63jf8AP65QfZwf6ofl+1n/KJ/mtf4Ki/5a2/4Af1wf6G4/z/ALP2&#xA;r/KJ/mu/wVF/y1t/wA/rj/obj/P+z9q/yif5rv8ABUX/AC1t/wAAP64/6G4/z/s/av8AKJ/mtHyX&#xA;CASbs0H+QP64/wChuP8AP+z9q/yif5qgfKkddrk0/wBQf1x/0Nx/n/Z+1f5RP81XsfL6Wl0lwJy5&#xA;Svw8aVqCPH3zK0fYgwZRk4rry8q72vNrTOJjSPvrOO8tmgclQaEMOoIzZ6zSxz4zCWzjYcphLiCU&#xA;zapomm6jpnl+4V5bm65S2pMRdAyEtyLU2Na0p070y7R6LwsPDH6Y/pa82qvJvzknuWIbBINRscVR&#xA;EVx2f/gsVV8VdirsVdirsVdirsVdirsVdirsVdirsVdirHvOGqz2ENosVQJJeUlDSqxkHjX/ACq5&#xA;j6iZiA0Z5mNJlpuuabqKj6tMPUIqYW2cfR/TLIZYy5NkMglyR+WM3met/ndZabq97py6VJN9TmeB&#xA;pTKqcmjYqxC8W2qNt8mIu1xdlmURLi5hBf8AK/7T/qyyf8j1/wCaMeBs/kc/zvsd/wAr/tP+rLJ/&#xA;yPX/AJox4F/kc/zvsd/yv+0/6ssn/I9f+aMeBf5HP877Hf8AK/7T/qyyf8j1/wCaMeBf5HP877Ga&#xA;+RfOsHm3TZ72K1a0+rzGFo2YPX4VaoIC/wA3hkSKcDV6U4ZAXdhkmBxWFfm7qOtWnkLVptFZ0vYo&#xA;0Pqw19RIzIolZabjjHy37de2WYgDIW15SRE0+W081edbyNLUapqF3GjclgM00or2+ElszTCLi4s0&#xA;4mx+t6d+RfniePWpNG1G7nkh1LazjlZpFiuYwWdQzGqh16eJGY+aG3uc3YgTj9MundL9R6fse46n&#xA;plpqdobS7DGEsjkI7RmsbB1+JCD1GYwLZjyGBsN6jL6FnNcqoMsMbtGxFaGmRnKoktUzQJSbQPMV&#xA;obZLa7k9OdSf3j/ZfkSa8ux375j4c4qjzaMOYVRZECCKjcHocynJdiqIt5qHg3TscVRGKuxV2Kux&#xA;V2KuxV2KuxV2KuxV2KuxV2KpP5o0k6jpjCP+/gPqRe9Buv0jKc+Pii1ZocUXnVtNLBcRzQnjLGwZ&#xA;CPEHNcDR2deDRer/AFpPA5t3avl7zgQfNutkdDf3R/5LNlw5PXab+6j/AFR9yUYt7sVaJAFTiqkz&#xA;k/LCmnun5Af8o3qP/MZ/zKTK5vP9sf3g9z0qacKOK/a7nwyDqUI/Li3EgNQ8SelcVDH9Ihu4dNto&#xA;7yMRXixqLoAAAyqOLsKbEMRUHKJ83ZHhv0/S82TyNq1x+Yy3un8TYG9+utexg+mnFxLIpIFOdTSn&#xA;c/JqZMJ+lzZ6jHDBwkbkHbz73tWRdAtliSWJ4nFUkUqw8QRQ4CLFIIt5zqVjJY3kls+/A/C3ip3B&#xA;zVzhwmnWzhwmmZeVpZJNGi5mvEsqn/JB2GZ2nPoc3AfSt8yeZbXRLdWdfVuJa+jADStOpJ3oBlsp&#xA;U16rVDEO8lGaPdz3mmW93OqpJOgk4pWgDbqN/bCDYbcEzKAkeqcQyc036jY4W1UxV2KuxV2KuxV2&#xA;KuxV2KuxV2KuxV2KoHUZ5PQm9L7SoxUDuwG2CXJEuTyzNQ6pnWkaqP0D9dvGosCt6kh7hO/z/jmy&#xA;wzuNlz4ZahxS6PnLVZWl1S8lbdpJ5Gb5s5OZceQex7PN6fGf6EfuCFwuWyGbR4W0tFt1UzkK4c0q&#xA;xpuK9hi4wyHi35MamSSORo5BxdTQr4HC5QKnil7d+RLsPLmoKDQG83/5FJlc3nu2P7we56RkHUpV&#xA;5n8x2Pl7R5dSvKsiUWKJftSSN9lBX/OmEC27T4JZZ8IeYR/nZPd36R3thHb6a7UkeMtJOi9qE0U7&#xA;9fh6YZ47Duh2WIjaR4vsXXX50mxvfq+kWMU2lRcVQyBonYAb8aGijw+HBDHQ3U9l8YuRPE9B8l+c&#xA;7HzTp8lzbxtbzQOEuLZyGKkiqsCKVU70NB0OJFOp1WllhlR3tkOBxWB+ZzIdan5igovD/V4jNbqP&#xA;rLr8/wBZTDyXdS+vPa9YSnqj2YEL+IOW6WRshs00jZDF/Pl/Hd+YJBE/NLZFhqOnJSS33FqZdM7u&#xA;p7QyCWXbpsy7yBqZu9EFu/8AeWTenXxQ7p/T6MsxnZ2fZ2Xix1/NZXbvxkA7Ntk3PReKuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KrZG4oT4DFUDXf3xVjN75Xt5dYCpJ6UM6NKUUVIKMoYDwrzGY0tKCbvZxZac&#xA;GSTfmFdC0hs9Gtv3duE9aRR+18RC1+kMfnk5ChQcDtLJw1Acubxe/wD97rj/AIyv/wASOZUOQfQe&#xA;zv8AFsf9SP8AuQhXemw65NzqV4dX1CGH0o5SEHSoBI+ROBiccSbQjMzMWY1YmpJ6knCzaxV7Z+RX&#xA;/KPah/zF/wDMpMrm892x/eD3PSsg6l5H+ebapLLp8UcEjadAjSyTqpMfqueIDEdCqrtXxycCHedk&#xA;CIBP8ReS5Y7t2Ksk8jecrjytqkl0kP1mGeP0poC3CvxBgwNG3FPDvkoY+M06ntkVgM6+n+x715Y8&#xA;1aX5i00X1ixUK3CaGSgeN/A0J69j3yrLiMDReZxZRMWGvMmkw3cCTV4TI6J6lK/A7hTy9l5csxsm&#xA;Dj96M2MSQWrQxeXPLt1Lakm6kAjEx68nNKjw4ipGCOMQGzRqD4OIkc3l/XK3nXqXkPR2sNHE8h/e&#xA;3vGUr4JT4B9xrl8BQeg7Pw8ELPOTJcm56OVuSg+IxVvFXYq7FXYq7FXYq7FXYq7FXYqpXJpF8zir&#xA;BPLOu3N/5s1ON94WQ+mv8qwPxX7/AFCT75XGVl1ml1BnmkOn6mSz/Dqdo/Zkmi+luD/qjOXDkXYn&#xA;mGIee9E1DUNbsxZxGWSWBloCAAInJJJNAP7wZROJJdV2hglPIOEXt+PveS6/5T80WWoXSzaZc+mJ&#xA;WpOkTvE3I1HGRQVNR75kCQAFl7vQ6jHDBASlEERiOY5gJV+hdZ/5YLj/AJFP/THxYd4+bk/ncH8+&#xA;H+mChd2d3ZzehdwSW8+x9KVGR6Ech8LAHcb5dGBIsBTrsA5zh/pgmA8o+a2AZdFvyDuCLaahH/A5&#xA;Cwz/ADWL+dH5hQv9A13TrZrrUNOurO1QgPPPDJFGCxoKs6gbnCN0HV4h/HH5h6x+TEklp5euPUUK&#xA;Lm49WDkaF0MagMo7qex75RllRdT2hwZJgg3t0eh/X3/lGU+IXA/LjvSrzAbifSNQEKF7h7aVYo16&#xA;ljGQoHzOC7O7k4IiJHdbw0fl55zIr+jJP+Dj/wCasyvFj3u8/NY+9H6J+WXmObUrddSsHh08vS5k&#xA;EsQYLTqByJ/DBLKK2a8msgAeE7pt55/L7QdD0M39nJP64lRFWR1ZSGrXbiD2yzRzMslF0famvn4B&#xA;G3q2S38v7y6spxLE5MclzCXh7MYiSK/8jDlnaM/VEPGjKYyAHeHuur/8cq8I6rDIynwKqSD9BzHh&#xA;zD0M+RSzzxbPceXJ1QFpFaNkUbkkuFoPf4srmLDi66BliNMT078utWmKvfSJaQ9WFeclPkPh/HKx&#xA;jLrcXZkz9WwTi78z3MLLbacRHawARxsQGZgooDv8sx56k3tydgc5G0eQTny9qWp6hG8s/piFG4cg&#xA;CGJoCe9O+XYMkpblvwzlLmyW3NYh7bZkN6pirsVdirsVdirsVdirsVdirsVUbr7A+eKvJ7q/by35&#xA;zu5YVDxFv3sfSscwWQqPCldspJqToJ5PAzkjl+vdnz3MN1+i7mFuUU0vND7NbynMiJ2LuxMSAI5H&#xA;9SAudajtdVuWMRkYKkKEMKUWrMeh35OVP+rmm7Q7Zjp5CHCZHn3Odp9GcgMrrox27e8u5C9xOXJN&#xA;QprxHyFds0su3eLnH7US7Gkec/s/alGuaLqN9YG3sNQOnzMw5XCx824b1C/EtCTTfJ4e3IRlcoX8&#xA;f2Mf5EP877P2sP1D8rvMOoXJubzzLJczmgM0sbF/hFBv6h6DbNlH2uiBQxn/AE37Fl2ISbMvsZDp&#xA;ej/mHYBkHnGeSNgBSSESladOJld6ZD/RTj64v9l+xn/JOTpP7P2ofVPI+o6tC0WpasLr1HEkkslu&#xA;nqsw6cpQwcgdlrQZYPa3GOWI/wCm/Y1nsXIeeT/Y/tS61/Ka3tLqG6t74R3Fu6ywyCI1V0IZTvJ2&#xA;IyR9r8f+pf7L9iB2HP8A1T7P2suUedw6s/mMyhTXg9rGQfY0IP3HKj7UYT/kf9l+xuj2VmB2yfZ+&#xA;1O7TVtVjtJlunhnuz/vPIkbRou37a83LfQRmLL2hx9MZ/wBN/wAdc3HpJj6pA+4V+lbFrWtinqrb&#xA;P48FkX9bNkf9EEP5h+f7HIOmj3ldLr2rLGzRW8DyAVVC7KCfCvE0ww7fgTvEge9H5Ud7ybzV541X&#xA;zH6cNyiW9tA3JYI6mr0pyYkmpAJpnbaHGBInydX2/pxjwxr+d+gu8qSSKs5Vqem8bJ7Ma7/8Lke0&#xA;o/SXjcoqi9w8v64vmDRbhHQC7RDFcRjYHmpCsPANmHjnbu9LqPGge8c0c0puxpqV5LKBdSGlAyRq&#xA;CPp9R0OWVVuTd0x3zTqFxLfvCkh+rRUQBT8Jb9qtOpB2+jNbqZHiro4momeKuiB0jSJ9SnMaHhGg&#xA;rJKRUD29zleLEZlrx4zIs40zTotPtBbxsWAJZmPUk5sMcBEU58IcIpNLX7B+eTZq2KuxV2KuxV2K&#xA;uxV2KuxV2KuxVRuvsL88VYb5o8lRarI97bSeje8QCpHwSFRtXuD2rkJQt1+r0IyHiBqSM06GK00b&#xA;Rvj5RxFWZjt/eROD16UL5bGNWHIww4IRHcp2VjDftCZY/hiQy3XUFprmsvpV2ICepyPzX3GYur7P&#xA;wZjc42eXUbD3OVg1GSAqJofrUfMuj26WSQ2H+j3k7hYpas1PoYn2zn+1Oz8GIQEI+qUq5n9fudjp&#xA;tRkkSZHYBNhoGkgAehX3Lv8A1zZ/yLpf5n2y/W4353L3/c79AaT/AL4/4d/+asP8i6X+Z9sv1r+d&#xA;y9/2B36A0n/fH/Dv/wA1Y/yLpf5n2y/Wv53L3/YHfoDSf98f8O//ADVj/Iul/mfbL9a/ncvf9gSL&#xA;z02k+XvKWp6usIWa3hItiWY/vpPgi2J3+NhXJQ7D0pNcH2y/WwnrsoF39gfOH/K0PPP/AFc/+SFv&#xA;/wBU8zP9D2i/mf7KX63D/lPP/O+wfqVbT8z/ADmbqEXGpVgLr6o9GAfBUctxGD0yvN7PaTgPDD1U&#xA;a3lz+bKHaebiFy29w/Unvn3zf5w0LzC9laaiVtGijkgBhgY0K8W3ZCd3Vs13YvZel1GnE5w9VkHe&#xA;X6+6nL1+szYstRlt7h+pjNx+ZPnaeF4ZNTYI4KtwjhRqHwZEVh9BzcQ7B0cSCIcvOR+8uDLtLORX&#xA;F9ylod7JOjxynk8dCGPUg/0zc4Y1JjrNbLLpxGZuUZfZRepflNotprFzqlrcllUQxujoaMrBiAd/&#xA;nlXaEbiHXYMEctgvT/KGg/oabULd5fUmZoyCBQGKh4NT3YuPozWxhQczR6bwuIXdrrGaVooEtzxm&#xA;e3t7WJzv6f7v1pZOh6I607FqDL5Dvb4nuT6C3hggSCJaRIOIXr95PUnuTlRNtoFbKgAAoBQeAwJd&#xA;iqKtfst88VVsVdirsVdirsVdirsVdirsVdiqldD92PniqExVjurLxsLmzJoDeCONj1AugG5fIPKf&#xA;uy6HO/L7mmfKvP7020lT9RjlYUe4rO4PUGU8wv8AsQQv0ZXPm2Q5IS8/f69aQ9VhUyN7Hr/AZoNX&#xA;+812OHSA4vx8g7DF6cEj37Jvm9cFBQaxYz3Rto2JfcKafCaeBzXYe1cOTJ4cTv8AYXInpZxjxHko&#xA;Lr0beYn0T6rOHSAXH1sofQIJpx5eObKmPg/u+OxzquqaYGl4n/zkn5iMdrpfl6JqGZmvbpf8lKxx&#xA;fQWL/dmTp49XG1EujwQnbbqemZbiKsVpdSryiRnUGhIFRXCIkoMgGeef7S61HQ/LerrGzzPa/V7r&#xA;bcPGB1+bc85vsSJx58+HulxD3H8B2vaEhLHjyd4r8fawY2N6D/vPJ/wDf0zpOE9zqeId6b6HYTws&#xA;88qlOQ4qh2NK1JI+jLsUSN2rLIHYPbPyKspvX1W9IIhCxwq3YsSWIHyFPvzF10uQcrQR5l6hP+71&#xA;O1l7TLJbsB3anqoT/qiN/vzAHIueeYSjygDPALlhUxxiEMdviJqfoMSQ5Zm22/H45teHff8AH45M&#xA;jyludirsVRdsKR/M4qq4q7FXYq7FXYq7FXYq7FXYq7FVO4FYj7UxVKNXv/0dpN7qHp+r9TgluPSr&#xA;x5ekhfjyoaVp1pkoRsgd7GcuEE9zyDV/zWl1OOQDSfRWT0v+Pjl/cl2B/uh15j7s2MNLw9XWz1fF&#xA;0ei+RPOQ806fcXQs/qQtpvR9P1PVr8AateEdPtZhZ8PAau3NwZvEF1SO0399rF9cdkpEv0bH/iOc&#xA;5oP3mry5O70/j5O1z+nFCPx/HzTfN64KWW2h2drdG6DtRKlVNOK1Hj7ZqNN2LixZfEBPkO5y8msl&#xA;KHCVDQPOHl/X5riHS7n1pLbeRSrJVSaBl5AVGbzJhlDm6/HmjPkU6yptfI35qeYf07561S8RuVvF&#xA;J9VtiOnpwfACPZmBb6c2GKNRDr8srkWI9TXwyxrZ35D8p6/r1hOdItfrP1dx655xx0L14/3jJX7B&#xA;6ZYMsYDctcsMpnYMu0bSNR1/ySlpZwmW4iu2FrGxWMnju4+Mrxp6jdc5vNkjg7WEumWFH3/iIdpj&#xA;xyy6Ix6wl+PvKTy+SvM8WuQ6E9kRqlxCbiK3EkRBiBYFi4bgN0PVs6b8xCrvZ1H5ed1W6P8AL35e&#xA;6vqnmO70O6ZbC409Ukvef7whZAGXgUqjHiwP2sjk1MYxsb2zx6WUpUdqe76BoWn6FpcOnWK8YYty&#xA;x3Z3P2nY9yc1WTIZmy7XHjEBQYB5n/NS6sNfn0+PTEk/R1x8ExlI5fAVO3E0qrkZmYtKDG75uHl1&#xA;ZEqrkt/Ln8wZ7vUrPy69iqF0YvdCQkn0Yvh+Hj/KgHXBqcFAytdNqLPDT1HMFz3Yq7FUdEtI1Ht+&#xA;vFV2KuxV2KuxV2KuxV2KuxV2KuxVbIKxsPbFWN+bv+UU1r/mAuv+TLZZh+se8Neb6D7i+cJGCxEj&#xA;w2zdB0j1b8jZRH5Z1SVuiXTMfkIlOartLIIXI9I27Ts+NivNnfl2MiwMrfamdnJ/D+Gc52FjIwcR&#xA;5zkT+h2+ul667gmmbpw0s0O311LW4j1y4hupWmkMLQoUX0CfgVge/wDnU9cJbcxgSOAECuvehfLn&#xA;krQPL09xPpkLJJc0DF3L8VBrwWvQVyzJnlPm4mPBGHJZ+YHmD/D/AJO1TVFbjNFCUtjXf1pf3cdP&#xA;kzA5HHGyAzySqJL5W8k+Wp/M3mix0iPkEuJAbmReqQr8Ujf8CNvfM6cuEW4MI8RpT86W8Nt5x123&#xA;gQRwQ6jdxxRrsFVZ3CgfIDDD6Qif1F75/wA482npeSppz1mumA/1VVSPxY5j6o7geTkaUbE+a7yf&#xA;/oTavbjb9G6zLt/kPQDw2/c+GaL2k9Pg5v5pH6/0Ob2Rv4mNN7L/AEr83dQkO62GmxxA+DSFHH4O&#xA;c3p2wjzLhR3zHyDof9E/N+4B6ahpauPmjha/dEcTvh9xQNs3vizjMVy3zz54p/jDV/H6w1fuGbjB&#xA;9AdNn+sqn5Uvz/MOyP8AkT/8mWyOr+gstJ/eB9BZqXbuxVci8nC+JxVHYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FWM+chTylrg8LC6/5MtlmL6x72vL9B9xfLzXEjR+mTtm6t0lPWfyin9PyXq++7XgQfTG&#xA;lfwzmfabLwYD5ivmf1O87Ghcvi9XsYfRs4YuhVFB+dN/xwaPF4eGMe6Ib80uKZPmr5ktbsVQ+oah&#xA;aafaSXd2/p28QrI/FmoPkoJxZQgZGhzeW+cvzM8ja7YyaLdWNze6fKR6lwoWNlKmqvECQ1R70yYE&#xA;huObs49jzkPUQn/5a/lx5W8uxjWtKa5ml1K3QpJeFCyQvSTioREpy+HlWvTDPLKWxdSdOMcyB02f&#xA;Ov5hRel578wrWtdRumr0+3KzfxzNx/SHX5PqL6P/ACZtPq35daVXZplklYfORgPwUZi6g+tytMPR&#xA;80v02H0vOHnOw/34Le9QfJebEf8AI3fMHtzF4mi9w+7+xt7Plw6kjvRXkBJJvNPma+lHxFrWFT/q&#xA;xmv4Bct0ubxNJiP9H7tvvYyx8OfJ71TzL/ov5l+V7s/ZuI7i2PvRTTx7yjMzFvikGjLtlifezjMV&#xA;y3zV+YE8kfnbWQp2Nw36hm4wH0B02o+soz8oGP8AysCw8Sk9f+RLZDVfQWek+sPonNU7Z2Koi1Tc&#xA;ufkMVRGKuxV2KuxV2KuxV2KuxV2KuxV2KuxVjfnhSPK2ugCtbC6IA94GyzF9Q97Xl+g+58qmRAta&#xA;19s3Lpaer/k4Gm0KS3I+GbUSWP8AqxR1/Bs5D2k/eZcOL+dKz+Pm9B2P6cc59z2fNkxdirsVdiqQ&#xA;635G8q6zya90+P1m3NxEPSlr4lkoW/2VcIJcnFrMuPkU7hhjhhjhiXjHEoRFHZVFAMDjk2bL5r/M&#xA;v8u9SXzdrN/+kNP9KeWS7WE3AWcK9XCGEjny+WZmLKDUXHyaPJwnJXpe+eSLT6p5P0a37rZwk/N0&#xA;DH8TmPmNzPvZ4RUB7kgdFt/zcdG+xqelEEdiVentvSLLJxE9OQe9pB4c9+Sb+S47U2t1dwmrXbpI&#xA;x23X01Cb/IZz3YkyMRxS545Efj427TWRHHxj+MApV+ZX+j3vlfUu1tqcaMf8mQgsPujzo9NuJDyd&#xA;VqdjE+bOMxXLfMv5jnj551lX+E/WCaHbYqCD9Izb4D6A6fUD1lHfk5yk/MKyKglUjnJPgPSYV+85&#xA;DVH0FnpR6w+jM1btW1BJAHU4qjkUKoUdsVbxV2KuxV2KuxV2KuxV2KuxV2KuxV2KqNxaxzgq4BRh&#xA;xdCKgg9QQcVeUan/AM47aRcai09jqslnZu3I2hhEpUE7qkhdKDwqD9OZkdYa3Dhy0YJ2LOdA8iaT&#xA;oUNrBYMyw2qkANQs7tXlI7bVY1zU5tL4moGeR3iKrp1/W5+KfBi8MDYp79UH834ZlMHfVB/N+GKu&#xA;+qD+b8MVd9UH834Yq76oP5vwxVA6zpOoXlg9vp9/+j55NjdekJWVe/AFkAb3wiurKEqN1bzh/wDn&#xA;H9JJzNPr8kru3OVmt6s1TVviMp3PjlscoBunOy9oznjMKiBIEfPbveo22mx29vFAjHhEiou3ZRQZ&#xA;UTZdcBQSjUfJsN75hstbF08VxZQywLGqijCVWX4jUH4edRlkctRMe9rliuQl3KnlvymmiWSWqXT3&#xA;CoixhnUA0SoXofDbMDFpBDLPID/eG6/Hvck5CYRgf4dlvmryfb+YdNSyluHt/TmSdJUUMQyVA2P+&#xA;tmfiy8BtxsuLjFJz9UH834ZU2sJ87/lBonmm6W+Nw9jqHEJJPGodZFGw5oSKkDYEEfqy/FqDAV0c&#xA;fLpxM31RXkf8rdE8piWaCV7u/mXhJdyAAhOvFFH2QSKnc4Mucz9zLFgEPeyz6qv8xyluXxwKhrWp&#xA;xVUxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2&#xA;KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2K&#xA;uxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kux&#xA;V2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2&#xA;KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2K&#xA;uxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:49c26f15-37fd-4067-8a37-201cc56cf173</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:49c26f15-37fd-4067-8a37-201cc56cf173</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:6ea318f9-5c9c-de45-af0c-86978ed050f4</stRef:instanceID>
            <stRef:documentID>xmp.did:938e857e-6ec3-4a6b-9554-67932605be94</stRef:documentID>
            <stRef:originalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:9369f387-9734-9644-9e06-e65356103ce8</stEvt:instanceID>
                  <stEvt:when>2020-03-27T08:13:57+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 23.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:938e857e-6ec3-4a6b-9554-67932605be94</stEvt:instanceID>
                  <stEvt:when>2020-04-12T18:07:16-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:2ce69dd3-a2e3-4f61-b704-4ad98d751843</stEvt:instanceID>
                  <stEvt:when>2020-04-13T07:58:34-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Bridge CC 2018 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/metadata</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:7b48db9f-3f84-4399-a4be-b819fe62f5ed</stEvt:instanceID>
                  <stEvt:when>2020-04-13T08:06:03-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Bridge CC 2018 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/metadata</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:49c26f15-37fd-4067-8a37-201cc56cf173</stEvt:instanceID>
                  <stEvt:when>2020-04-13T11:00:03-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Mobile</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>2000.000000</stDim:w>
            <stDim:h>2000.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Mobile Color Group</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=136 G=168 B=13</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>136</xmpG:red>
                           <xmpG:green>168</xmpG:green>
                           <xmpG:blue>13</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=127 G=71 B=221</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>127</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>221</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=174 B=23</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>174</xmpG:green>
                           <xmpG:blue>23</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -2000 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 2000 li
2000 2000 li
2000 0 li
cp
clp
2000 2000 mo
0 2000 li
0 0 li
2000 0 li
2000 2000 li
false sop
/0 
[/DeviceRGB] /CSA add_res
1 1 1 rgb
f
401.921 1466.51 mo
302.82 1003.33 360.379 852.945 438.232 806.257 cv
461.129 792.526 486.655 787.243 514.057 787.243 cv
532.382 787.243 551.541 789.603 571.33 793.377 cv
571.33 812.129 li
569.997 814.948 568.9 817.88 568.07 820.903 cv
564.871 832.557 565.318 845.121 560.898 856.368 cv
556.597 867.315 548.105 875.98 541.442 885.671 cv
529.816 902.585 523.666 923.202 524.131 943.72 cv
524.521 960.942 528.058 978.91 532.927 995.467 cv
512.538 1057.23 497.293 1120.67 487.462 1184.96 cv
486.636 1190.37 485.849 1195.77 485.099 1201.18 cv
485.6 1170.53 485.444 1139.86 484.622 1109.22 cv
483.433 1064.84 480.856 1020.5 476.899 976.284 cv
474.664 951.3 471.981 926.358 468.87 901.468 cv
468.799 900.894 468.306 900.605 467.851 900.605 cv
467.398 900.605 466.983 900.891 467.054 901.468 cv
472.559 945.519 476.709 989.737 479.463 1034.05 cv
482.218 1078.35 483.588 1122.75 483.573 1167.14 cv
483.568 1183.93 483.361 1200.72 482.957 1217.5 cv
482.848 1218.38 482.739 1219.27 482.631 1220.15 cv
465.962 1220.15 li
463.668 1187.43 457.062 1155.03 446.26 1124.04 cv
442.801 1114.11 438.901 1104.35 434.622 1094.75 cv
434.473 1094.41 434.217 1094.27 433.95 1094.27 cv
433.366 1094.27 432.73 1094.94 433.055 1095.66 cv
450.585 1134.99 461.112 1177.24 464.143 1220.15 cv
430.77 1220.15 li
430.77 1421.15 li
430.77 1421.15 li
430.77 1421.15 li
430.77 1443.2 446.088 1461.66 466.66 1466.49 cv
444.662 1466.5 423.076 1466.51 401.921 1466.51 cv
488.083 1466.48 mo
508.622 1461.62 523.909 1443.17 523.909 1421.15 cv
523.909 1324.18 li
523.909 1324.18 li
523.909 1220.15 li
484.706 1220.15 li
484.728 1219.3 484.749 1218.44 484.769 1217.58 cv
492.126 1158.53 503.991 1100.06 520.27 1042.82 cv
524.933 1026.42 529.964 1010.13 535.338 993.952 cv
538.5 989.454 543.515 986.298 548.727 984.333 cv
555.04 981.953 561.791 981.029 568.342 979.414 cv
569.342 979.168 570.338 978.905 571.33 978.627 cv
571.33 980.81 li
571.33 986.431 575.881 990.983 581.497 990.983 cv
890.182 990.983 li
895.804 990.983 900.356 986.431 900.356 980.81 cv
900.356 833.305 li
916.545 827.507 932.392 819.459 947.796 808.678 cv
1010.52 764.775 1026.46 703.083 1078.14 654.186 cv
1171.11 654.186 li
1171.11 600.694 li
1206.58 589.153 1240.13 585.692 1267.8 585.692 cv
1295.32 585.692 1317.02 589.113 1329.06 591.417 cv
1329.06 591.417 1445.2 613.654 1534.22 720.321 cv
1652.15 861.632 1725.11 1165.19 1528.77 1464.7 cv
1481.95 1464.7 1432.92 1464.73 1382.31 1464.79 cv
1403.1 1460.13 1418.64 1441.55 1418.64 1419.35 cv
1418.64 1322.38 li
1418.64 1322.38 li
1418.64 1218.35 li
1379.44 1218.35 li
1379.46 1217.49 1379.48 1216.63 1379.5 1215.77 cv
1386.86 1156.73 1398.72 1098.25 1415 1041.01 cv
1420.16 1022.87 1425.77 1004.86 1431.8 986.989 cv
1432.02 986.319 1431.48 985.88 1430.92 985.88 cv
1430.56 985.88 1430.2 986.069 1430.05 986.506 cv
1408.46 1050.52 1392.41 1116.38 1382.19 1183.16 cv
1381.37 1188.56 1380.58 1193.97 1379.83 1199.38 cv
1380.33 1168.73 1380.18 1138.06 1379.36 1107.41 cv
1378.17 1063.04 1375.59 1018.7 1371.63 974.481 cv
1369.4 949.497 1366.71 924.555 1363.6 899.666 cv
1363.53 899.092 1363.04 898.802 1362.58 898.802 cv
1362.13 898.802 1361.72 899.088 1361.79 899.666 cv
1367.29 943.717 1371.44 987.934 1374.2 1032.24 cv
1376.95 1076.55 1378.32 1120.94 1378.31 1165.34 cv
1378.3 1182.13 1378.09 1198.92 1377.69 1215.7 cv
1377.58 1216.59 1377.47 1217.47 1377.36 1218.35 cv
1360.7 1218.35 li
1358.4 1185.62 1351.8 1153.23 1340.99 1122.23 cv
1337.53 1112.31 1333.63 1102.54 1329.36 1092.94 cv
1329.21 1092.61 1328.95 1092.47 1328.68 1092.47 cv
1328.1 1092.47 1327.46 1093.13 1327.79 1093.86 cv
1345.32 1133.18 1355.84 1175.44 1358.88 1218.35 cv
1325.5 1218.35 li
1325.5 1419.35 li
1325.5 1419.35 li
1325.5 1419.35 li
1325.5 1441.59 1341.1 1460.19 1361.95 1464.82 cv
1244.09 1464.97 1118.17 1465.25 991.739 1465.54 cv
991.696 1464.81 li
1000.67 1464.81 li
1027.66 1245.72 li
1030.71 1221.02 li
1018.88 1219.64 li
1023.07 1176.14 li
1023.07 1176.14 1046.84 1176.16 1076.31 1176.48 cv
1128.21 1413.91 li
1128.62 1415.79 li
1128.21 1419.12 li
1122.59 1464.7 li
1139.27 1464.7 li
1140.16 1464.7 li
1140.18 1464.54 li
1158.99 1464.54 li
1146.96 1409.51 li
1167.14 1245.72 li
1167.16 1245.72 li
1170.21 1221.02 li
1170.19 1221.01 li
1170.21 1220.9 li
1152.88 1218.89 li
1149.59 1245.6 li
1135.72 1358.1 li
1134.84 1354.06 li
1096.09 1176.74 li
1112.79 1176.99 1130.01 1177.35 1144.94 1177.87 cv
1156.9 1178.28 1167.38 1178.82 1174.94 1179.43 cv
1176.18 1179.54 1177.42 1179.59 1178.65 1179.59 cv
1182.05 1179.59 1185.42 1179.19 1188.71 1178.4 cv
1188.71 1178.4 1188.71 1178.4 1188.72 1178.4 cv
1190.36 1178.07 1192 1177.58 1193.61 1177.01 cv
1198.98 1175.11 1203.76 1172.3 1207.84 1168.8 cv
1217.74 1160.32 1223.49 1147.82 1223.49 1134.75 cv
1223.49 1130.9 1223 1127 1221.96 1123.15 cv
1222.36 1117.88 1223.38 1101.2 1223.48 1067.43 cv
1223.52 1044 1223.15 1012.35 1221.8 970.63 cv
1221.63 965.779 1221.43 960.641 1221.02 955.257 cv
1220.85 952.709 1220.69 950.119 1220.48 947.488 cv
1219.41 932.773 1217.73 916.988 1215.59 902.231 cv
1215.59 902.191 li
1214.23 892.983 1212.71 884.227 1211.03 876.294 cv
1208.4 863.84 1207.74 857.612 1204.37 851.487 cv
1185.28 842.375 1167.02 838.152 1159.21 838.152 cv
1158.77 838.152 1158.37 838.165 1158 838.191 cv
1155.74 838.314 1154.51 838.56 1154.51 838.56 cv
1154.21 838.618 1153.79 838.641 1153.28 838.641 cv
1152.2 838.641 1150.7 838.536 1149.15 838.431 cv
1147.6 838.325 1145.99 838.22 1144.68 838.22 cv
1144.43 838.22 1144.2 838.223 1143.98 838.231 cv
1143.04 804.369 li
1112.27 804.369 li
1111.39 821.75 li
1111.31 821.678 1111.22 821.605 1111.14 821.53 cv
1110.4 832.785 li
1110.4 832.785 1110.56 832.761 1110.84 832.712 cv
1110.55 838.379 li
1110.55 838.506 1110.54 838.633 1110.54 838.761 cv
1103.65 839.025 1093.7 839.169 1089.48 839.3 cv
1077.15 839.794 1065.76 844.973 1056.47 850.892 cv
1054.3 857.345 1054.58 871.074 1055.69 885.174 cv
1056.19 891.421 1056.84 897.752 1057.54 903.547 cv
1058.53 911.644 1059.52 918.756 1060.17 923.154 cv
1060.63 926.196 1060.91 927.964 1060.91 927.964 cv
1060.75 929.361 1060.58 930.758 1060.42 932.115 cv
1057.05 961.258 1055.2 986.496 1053.6 1032.08 cv
1053.58 1033.05 1053.57 1034 1053.55 1034.96 cv
540.412 1034.96 li
529.014 1034.96 519.775 1044.19 519.775 1055.59 cv
519.775 1066.99 529.014 1076.23 540.412 1076.23 cv
606.908 1076.23 li
606.399 1076.23 li
606.772 1076.85 li
522.042 1464.54 li
541.761 1464.54 li
621.225 1100.93 li
621.226 1100.93 li
626.625 1076.23 li
626.624 1076.23 li
937.32 1076.23 li
935.821 1078.73 934.575 1081.42 933.621 1084.27 cv
855.234 1317.83 li
858.522 1321.53 li
866.579 1330.57 877.842 1335.63 889.515 1336 cv
890.062 1336.02 890.609 1336.03 891.157 1336.03 cv
895.884 1336.03 900.654 1335.24 905.259 1333.61 cv
945.662 1246.02 li
945.859 1257.68 li
945.859 1257.68 li
948.376 1409.21 li
952.691 1411.55 li
959.238 1415.14 966.44 1416.91 973.606 1416.91 cv
978.975 1416.91 984.326 1415.92 989.359 1413.95 cv
987.609 1428.1 li
987.609 1428.12 li
987.208 1431.43 li
986.767 1434.97 li
983.091 1464.81 li
982.999 1465.56 li
812.517 1465.95 641.394 1466.36 488.083 1466.48 cv
1249.09 1464.81 mo
1249.09 1464.81 li
1221.54 1241.25 li
1218.7 1218.25 li
1201.38 1220.26 li
1204.43 1245.04 li
1204.43 1245.04 li
1231.52 1464.81 li
1249.09 1464.81 li
1109.59 1464.81 mo
1109.59 1464.81 li
1082.59 1245.72 li
1079.21 1218.25 li
1061.88 1220.26 li
1065.02 1245.72 li
1092.03 1464.81 li
1109.59 1464.81 li
.952941 .952941 .952941 rgb
f
931.042 1010.92 mo
931.042 1012.32 930.922 1013.69 930.689 1015.04 cv
854.154 1015.04 li
853.922 1013.69 853.802 1012.32 853.802 1010.92 cv
853.802 994.145 871.095 980.549 892.422 980.549 cv
913.749 980.549 931.042 994.145 931.042 1010.92 cv
cp
.176471 .301961 .4 rgb
f
1018.3 1035.02 mo
712.38 1035.02 li
712.38 1013.83 li
1018.3 1013.83 li
1024.15 1013.83 1028.89 1018.58 1028.89 1024.43 cv
1028.89 1030.27 1024.15 1035.02 1018.3 1035.02 cv
cp
.262745 .470588 .635294 rgb
f
491.496 1231 mo
496.291 1205.8 501.731 1180.63 508.492 1155.87 cv
511.88 1143.46 515.785 1131.16 520.958 1119.37 cv
525.807 1108.32 531.835 1097.84 538.479 1087.78 cv
546.019 1076.36 554.315 1065.47 562.605 1054.59 cv
563.313 1053.66 561.737 1052.75 561.038 1053.67 cv
546.267 1073.05 531.335 1092.65 521.011 1114.86 cv
510.426 1137.63 504.598 1162.35 498.964 1186.71 cv
495.601 1201.25 492.534 1215.86 489.746 1230.52 cv
489.528 1231.66 491.278 1232.15 491.496 1231 cv
cp
f
466.702 1234.85 mo
465.549 1197.14 458.677 1159.66 446.26 1124.04 cv
442.801 1114.11 438.901 1104.35 434.622 1094.75 cv
434.147 1093.68 432.582 1094.6 433.055 1095.66 cv
452.583 1139.47 463.42 1186.91 464.887 1234.85 cv
464.923 1236.01 466.738 1236.02 466.702 1234.85 cv
f
482.117 1240.75 mo
489.102 1173.83 501.864 1107.53 520.27 1042.82 cv
525.43 1024.67 531.038 1006.66 537.065 988.792 cv
537.439 987.682 535.687 987.206 535.316 988.309 cv
513.725 1052.32 497.673 1118.18 487.462 1184.96 cv
484.628 1203.5 482.248 1222.1 480.302 1240.75 cv
480.181 1241.91 481.997 1241.9 482.117 1240.75 cv
f
484.033 1242.37 mo
485.606 1198.01 485.812 1153.59 484.622 1109.22 cv
483.433 1064.84 480.856 1020.5 476.899 976.284 cv
474.664 951.3 471.981 926.358 468.87 901.468 cv
468.728 900.324 466.91 900.31 467.054 901.468 cv
472.559 945.519 476.709 989.737 479.463 1034.05 cv
482.218 1078.35 483.588 1122.75 483.573 1167.14 cv
483.565 1192.22 483.106 1217.3 482.218 1242.37 cv
482.177 1243.54 483.992 1243.54 484.033 1242.37 cv
f
523.909 1220.15 mo
523.909 1421.15 li
523.909 1446.87 503.059 1467.72 477.34 1467.72 cv
451.622 1467.72 430.77 1446.87 430.77 1421.15 cv
430.77 1220.15 li
523.909 1220.15 li
f
681.668 961.757 mo
666.419 958.421 649.885 955.205 635.705 961.729 cv
620.94 968.523 612.617 984.045 604.902 998.35 cv
603.732 1000.52 602.496 1002.75 600.53 1004.24 cv
596.587 1007.22 591.084 1006.37 586.185 1007.04 cv
576.578 1008.35 568.804 1016.04 564.703 1024.82 cv
560.603 1033.61 559.54 1043.46 558.533 1053.11 cv
558.418 1054.47 li
560.334 1058.42 565.206 1059.78 569.525 1060.6 cv
584.672 1063.47 600.08 1064.97 615.496 1065.05 cv
619.608 1065.08 623.817 1064.98 627.664 1063.53 cv
641.119 1058.46 644.621 1039.65 657.521 1033.3 cv
663.993 1030.11 671.949 1030.6 678.036 1026.73 cv
685.605 1021.92 687.91 1012.04 688.892 1003.13 cv
689.873 994.213 690.461 984.535 696.284 977.713 cv
701.643 971.436 710.55 969.037 718.761 969.871 cv
706.396 967.167 694.032 964.462 681.668 961.757 cv
cp
.603922 .8 .560784 rgb
f
405.748 937.629 mo
406.211 937.153 406.676 936.681 407.146 936.215 cv
406.604 936.637 406.142 937.112 405.748 937.629 cv
cp
.360784 .737255 .541176 rgb
f
447.428 1059.32 mo
444.771 1050.31 438.967 1042.54 432.447 1035.79 cv
425.047 1028.12 416.203 1020.86 413.469 1010.56 cv
410.672 1000.03 415.016 988.869 413.918 978.026 cv
412.975 968.705 408.105 960.306 405.18 951.405 cv
403.69 946.876 403.02 941.22 405.748 937.629 cv
389.852 953.966 378.152 975.822 379.857 998.488 cv
380.567 1007.93 383.552 1017.06 387.233 1025.79 cv
389.65 1031.52 392.424 1037.3 392.684 1043.51 cv
392.975 1050.5 390.03 1057.37 390.557 1064.35 cv
391.081 1071.3 395.088 1077.66 400.412 1082.16 cv
405.736 1086.65 412.29 1089.46 418.951 1091.5 cv
425.66 1093.55 433.527 1095.67 436.274 1102.13 cv
437.167 1101.61 li
449.297 1091.96 451.813 1074.18 447.428 1059.32 cv
cp
f
517.546 847.718 mo
512.99 833.024 499.086 821.88 497.411 806.588 cv
496.66 799.73 498.521 792.871 498.775 785.977 cv
499.318 771.272 491.985 756.506 479.941 748.053 cv
471.332 742.01 460.907 739.232 451.451 734.625 cv
441.996 730.017 432.82 722.51 431.047 712.142 cv
429.836 705.059 432.29 697.684 430.799 690.654 cv
422.52 698.767 414.909 707.977 411.066 718.913 cv
406.726 731.266 407.558 745.03 411.512 757.512 cv
415.467 769.994 422.379 781.342 430.078 791.934 cv
433.318 796.391 436.786 800.896 438.158 806.233 cv
439.22 810.363 438.943 814.724 438.258 818.933 cv
436.471 829.906 431.953 840.534 432.253 851.648 cv
432.682 867.505 442.715 881.285 452.465 893.797 cv
456.495 898.97 461.667 904.445 467.667 909.445 cv
468.742 910.435 li
483.029 906.527 496.992 899.874 506.877 888.842 cv
516.761 877.811 521.932 861.865 517.546 847.718 cv
cp
.603922 .8 .560784 rgb
f
626.874 851.323 mo
621.555 839.027 614.957 826.958 613.307 813.663 cv
611.776 801.347 614.779 788.519 621.615 778.162 cv
597.222 779.244 574.531 797.356 568.07 820.903 cv
564.871 832.557 565.318 845.121 560.898 856.368 cv
556.597 867.315 548.105 875.98 541.442 885.671 cv
529.816 902.585 523.666 923.202 524.131 943.72 cv
524.527 961.224 528.175 979.498 533.167 996.279 cv
533.599 996.982 li
536.391 990.84 542.414 986.713 548.727 984.333 cv
555.04 981.953 561.791 981.029 568.342 979.414 cv
576.486 977.407 584.33 974.327 592.003 970.935 cv
596.682 968.868 601.47 966.557 604.717 962.605 cv
611.638 954.181 609.287 941.755 611.83 931.154 cv
615.424 916.178 628.84 905.146 632.859 890.279 cv
636.357 877.346 632.192 863.619 626.874 851.323 cv
.360784 .737255 .541176 rgb
f
464.619 1432.51 mo
452.476 1432.51 441.198 1424.58 430.77 1413.3 cv
430.77 1421.15 li
430.77 1421.15 li
430.77 1316.77 li
441.133 1331.3 452.855 1344.11 465.976 1344.11 cv
466.854 1344.11 467.736 1344.05 468.627 1343.94 cv
500.372 1339.73 507.619 1262.68 518.802 1220.15 cv
523.909 1220.15 li
523.909 1324.18 li
512.925 1375.65 498.774 1428.23 468.291 1432.27 cv
467.058 1432.43 465.835 1432.51 464.619 1432.51 cv
.243137 .435294 .584314 rgb
f
477.34 1467.72 mo
473.665 1467.72 470.089 1467.3 466.66 1466.49 cv
446.088 1461.66 430.77 1443.2 430.77 1421.15 cv
430.77 1413.3 li
441.198 1424.58 452.476 1432.51 464.619 1432.51 cv
465.835 1432.51 467.058 1432.43 468.291 1432.27 cv
498.774 1428.23 512.925 1375.65 523.909 1324.18 cv
523.909 1421.15 li
523.909 1446.87 503.059 1467.72 477.34 1467.72 cv
.223529 .4 .537255 rgb
f
466.948 1327.88 mo
458.406 1327.88 448.569 1315.19 443.99 1305.48 cv
433.03 1282.24 437.963 1245.94 460.215 1235.17 cv
465.012 1232.85 470.77 1231.64 476.337 1231.64 cv
484.305 1231.64 491.878 1234.12 495.667 1239.38 cv
500.193 1245.66 496.657 1252.2 486.053 1286.25 cv
476.088 1318.25 474.872 1326.4 468.627 1327.71 cv
468.074 1327.83 467.514 1327.88 466.948 1327.88 cv
.321569 .513725 .662745 rgb
f
750.247 1037.23 mo
705.517 1037.23 li
705.517 974.305 li
750.247 974.305 li
750.247 1037.23 li
cp
.262745 .470588 .635294 rgb
f
790.428 1034.96 mo
664.578 1034.96 li
664.578 1021.14 675.779 1009.94 689.597 1009.94 cv
765.409 1009.94 li
779.227 1009.94 790.428 1021.14 790.428 1034.96 cv
cp
.176471 .301961 .4 rgb
f
1249.09 1464.81 mo
1231.52 1464.81 li
1204.43 1245.04 li
1201.38 1220.26 li
1218.7 1218.25 li
1221.54 1241.25 li
1249.09 1464.81 li
.262745 .470588 .635294 rgb
f
1030.71 1221.02 mo
1027.66 1245.72 li
1000.67 1464.81 li
991.696 1464.81 li
991.749 1465.72 li
982.992 1465.62 li
983.091 1464.81 li
986.767 1434.97 li
987.208 1431.43 li
987.609 1428.12 li
987.609 1428.1 li
989.36 1413.94 li
1010.1 1245.72 li
1013.39 1219.01 li
1018.87 1219.64 li
1030.71 1221.02 li
f
1109.59 1464.81 mo
1092.03 1464.81 li
1065.02 1245.72 li
1061.88 1220.26 li
1079.21 1218.25 li
1082.59 1245.72 li
1109.59 1464.81 li
f
1170.21 1220.9 mo
1167.16 1245.6 li
1146.5 1413.26 li
1140.16 1464.7 li
1139.27 1464.7 li
1122.59 1464.7 li
1128.21 1419.12 li
1134.84 1365.26 li
1149.59 1245.6 li
1152.88 1218.89 li
1170.21 1220.9 li
f
1027.66 1245.72 mo
1016.36 1245.72 li
1018.88 1219.64 li
1030.71 1221.02 li
1027.66 1245.72 li
.188235 .341176 .458824 rgb
f
1082.59 1245.72 mo
1065.02 1245.72 li
1061.88 1220.26 li
1079.21 1218.25 li
1082.59 1245.72 li
f
1167.16 1245.72 mo
1167.14 1245.72 li
1167.16 1245.6 li
1170.19 1221.01 li
1170.21 1221.02 li
1167.16 1245.72 li
.686274 .686274 .686274 rgb
f
1167.14 1245.72 mo
1149.59 1245.72 li
1152.88 1219.01 li
1170.19 1221.01 li
1167.16 1245.6 li
1167.14 1245.72 li
.188235 .341176 .458824 rgb
f
1204.43 1245.04 mo
1204.43 1245.04 li
1201.38 1220.26 li
1218.7 1218.25 li
1221.54 1241.25 li
1216.05 1243.05 1210.33 1244.33 1204.43 1245.04 cv
f
1283.97 963.705 mo
1283.97 1142.23 li
1283.97 1192.26 1243.41 1232.83 1193.37 1232.83 cv
1005.74 1232.83 li
1005.74 1171.42 li
1197.54 1171.42 li
1197.54 904.557 li
1224.82 904.557 li
1257.49 904.557 1283.97 931.038 1283.97 963.705 cv
cp
.262745 .470588 .635294 rgb
f
1026.96 921.994 mo
1026.96 921.994 1016.35 963.691 1014.83 963.691 cv
1013.32 963.691 913.244 967.481 913.244 967.481 cv
913.244 996.291 li
1030.28 1003.64 li
1045.93 1004.63 1059.69 993.359 1061.81 977.819 cv
1069.42 921.994 li
1026.96 921.994 li
cp
.976471 .854902 .823529 rgb
f
1107.33 777.949 mo
1107.33 790.51 1097.14 800.693 1084.58 800.693 cv
1072.02 800.693 1061.84 790.51 1061.84 777.949 cv
1061.84 765.388 1072.02 755.205 1084.58 755.205 cv
1097.14 755.205 1107.33 765.388 1107.33 777.949 cv
cp
.690196 .266667 .458824 rgb
f
1223.48 1067.43 mo
1223.36 1109.52 1221.8 1125.06 1221.8 1125.06 cv
1221.8 1125.06 1220.48 1125.35 1218.02 1125.8 cv
1213.91 1126.58 1206.67 1127.81 1196.93 1129.05 cv
1182.46 1130.9 1162.48 1132.66 1139.26 1132.66 cv
1097.46 1132.66 1058.53 1125.06 1058.53 1125.06 cv
1058.53 1125.06 1056.06 1111.62 1054.58 1085.85 cv
1053.76 1071.62 1053.23 1053.66 1053.6 1032.08 cv
1055.2 986.496 1057.05 961.258 1060.42 932.115 cv
1060.58 930.758 1060.75 929.361 1060.91 927.964 cv
1060.91 927.964 1060.63 926.196 1060.17 923.154 cv
1059.52 918.756 1058.53 911.644 1057.54 903.547 cv
1056.84 897.752 1056.19 891.421 1055.69 885.174 cv
1054.58 871.074 1054.3 857.345 1056.47 850.892 cv
1065.76 844.973 1077.15 839.794 1089.48 839.3 cv
1094.74 839.136 1108.92 838.952 1114.97 838.541 cv
1114.97 838.541 1114.23 845.631 1127.75 845.302 cv
1126.81 839.934 li
1128.54 839.91 1129.89 840.135 1131.15 840.361 cv
1134.16 840.901 1136.59 841.442 1142.13 838.541 cv
1143.1 838.033 1146.22 838.232 1149.15 838.431 cv
1151.43 838.585 1153.59 838.741 1154.51 838.56 cv
1154.51 838.56 1155.74 838.314 1158 838.191 cv
1164.99 837.698 1184.22 841.869 1204.37 851.487 cv
1207.74 857.612 1208.4 863.84 1211.03 876.294 cv
1212.71 884.227 1214.23 892.983 1215.59 902.191 cv
1215.59 902.231 li
1217.73 916.988 1219.41 932.773 1220.48 947.488 cv
1220.69 950.119 1220.85 952.709 1221.02 955.257 cv
1221.43 960.641 1221.63 965.779 1221.8 970.63 cv
1223.15 1012.35 1223.52 1044 1223.48 1067.43 cv
f
987.621 1402.02 mo
987.609 1434.9 li
961.004 1437.31 li
958.795 1399.74 li
987.621 1402.02 li
cp
.976471 .854902 .823529 rgb
f
991.749 1465.72 mo
982.992 1465.62 li
915.064 1464.81 li
959.574 1431.28 li
960.65 1431.29 li
987.208 1431.43 li
987.609 1431.43 li
989.808 1431.45 li
991.696 1464.81 li
991.749 1465.72 li
cp
.690196 .266667 .458824 rgb
f
1223.49 1134.75 mo
1223.49 1153.21 1212.02 1170.51 1193.61 1177.01 cv
1192 1177.58 1190.36 1178.07 1188.72 1178.4 cv
1184.24 1179.47 1179.59 1179.84 1174.94 1179.43 cv
1167.38 1178.82 1156.9 1178.28 1144.94 1177.87 cv
1096.19 1176.19 1023.07 1176.14 1023.07 1176.14 cv
1000.79 1407.36 li
998.117 1409.53 995.198 1411.34 992.15 1412.7 cv
992.15 1412.74 li
979.778 1418.62 965.062 1418.33 952.691 1411.55 cv
948.376 1409.21 li
945.859 1257.68 li
945.662 1246.02 li
944.305 1162.83 li
943.979 1144.28 956.184 1127.89 974.069 1122.87 cv
1023.95 1108.82 li
1159.12 1070.75 li
1164.06 1069.35 1169.07 1068.86 1173.92 1069.15 cv
1174.37 1069.19 li
1174.74 1069.19 li
1191.93 1070.54 1207.46 1081.81 1213.54 1098.95 cv
1220.9 1119.79 li
1222.67 1124.72 1223.49 1129.77 1223.49 1134.75 cv
.176471 .301961 .4 rgb
f
945.859 1257.68 mo
945.859 1257.68 li
945.662 1246.02 li
945.664 1246.02 li
995.688 1137.67 li
1001.44 1137.83 li
1024.7 1138.47 1047.86 1141.85 1070.17 1148.37 cv
1070.99 1152.15 li
1003.46 1146.4 li
1003.46 1146.4 967.489 1215.7 945.859 1257.68 cv
.160784 .278431 .368627 rgb
f
1089.03 903.876 mo
1064.37 939.842 li
1024 923.154 li
1026.3 912.795 1028.73 903.835 1031.15 896.189 cv
1039.79 869.225 1048.79 857.797 1053.35 853.358 cv
1055.32 851.509 1056.47 850.892 1056.47 850.892 cv
1090.18 846.206 1089.03 903.876 1089.03 903.876 cv
cp
.690196 .266667 .458824 rgb
f
892.627 1329.17 mo
878.934 1359.06 li
853.739 1350.18 li
867.365 1315.1 li
892.627 1329.17 li
cp
.976471 .854902 .823529 rgb
f
852.152 1346.87 mo
793.46 1367.11 li
874.415 1394.43 li
884.139 1357.43 li
852.152 1346.87 li
cp
.690196 .266667 .458824 rgb
f
1223.49 1134.75 mo
1223.49 1153.21 1212.02 1170.51 1193.61 1177.01 cv
1192 1177.58 1190.36 1178.07 1188.72 1178.4 cv
1168.94 1178.2 1148.8 1177.75 1145.47 1176.88 cv
1126.89 1168.5 1107.9 1160.98 1088.58 1154.36 cv
1088.54 1154.32 li
1084.56 1152.96 1080.57 1151.6 1076.54 1150.33 cv
1052.29 1142.52 1026.93 1138.53 1001.44 1137.83 cv
995.688 1137.67 li
945.664 1246.02 li
905.259 1333.61 li
900.12 1335.42 894.777 1336.2 889.515 1336 cv
877.842 1335.63 866.579 1330.57 858.522 1321.53 cv
855.234 1317.83 li
933.621 1084.27 li
939.499 1066.68 956.516 1055.29 975.013 1056.49 cv
1173.92 1069.15 li
1174.37 1069.19 li
1174.74 1069.19 li
1191.92 1070.54 1207.46 1081.81 1213.54 1098.95 cv
1220.9 1119.79 li
1222.67 1124.72 1223.49 1129.78 1223.49 1134.75 cv
.176471 .301961 .4 rgb
f
1110.55 838.379 mo
1112.27 804.369 li
1143.04 804.369 li
1143.99 838.757 li
1144.25 848.175 1136.69 855.951 1127.27 855.951 cv
1117.69 855.951 1110.07 847.937 1110.55 838.379 cv
.976471 .854902 .823529 rgb
f
1110.4 832.785 mo
1111.14 821.53 li
1111.22 821.605 1111.31 821.678 1111.39 821.75 cv
1110.84 832.712 li
1110.56 832.761 1110.4 832.785 1110.4 832.785 cv
.780392 .780392 .780392 rgb
f
1110.84 832.712 mo
1111.39 821.75 li
1113.99 823.948 1117.94 824.651 1121.92 824.651 cv
1129.02 824.651 1136.24 822.428 1136.24 822.428 cv
1128.69 829.353 1113.6 832.234 1110.84 832.712 cv
.8 .701961 .67451 rgb
f
1169.53 761.215 mo
1175.19 791.387 1157.74 819.981 1130.55 825.083 cv
1103.36 830.184 1076.73 809.86 1071.07 779.689 cv
1065.41 749.517 1082.86 720.923 1110.05 715.821 cv
1137.24 710.72 1163.87 731.043 1169.53 761.215 cv
cp
.976471 .854902 .823529 rgb
f
1074.93 750.817 mo
1088.47 749.371 1096.95 748.088 1102.25 747.025 cv
1108.44 745.785 1114.73 745.153 1121.05 745.208 cv
1125.6 745.247 li
1125.6 745.247 1118.34 744.36 1124.96 745.451 cv
1136.07 747.28 1144.4 781.547 1147.96 775.074 cv
1150.37 770.706 1153.23 767.339 1156.36 767.186 cv
1164.3 766.805 1160.27 791.401 1158.29 803.505 cv
1164.51 802.675 1174.98 790.065 1176.29 760.188 cv
1176.3 760.036 1176.31 759.89 1176.32 759.745 cv
1173.12 725.083 1158.94 727.376 1158.94 727.376 cv
1158.94 727.376 1164.92 691.577 1129.71 691.655 cv
1105.27 691.709 1103.2 702.533 1071.73 694.89 cv
1039.88 687.156 1035.41 755.04 1074.93 750.817 cv
cp
.176471 .301961 .4 rgb
f
1170.2 772.423 mo
1172.21 783.135 1166.87 793.127 1158.26 794.742 cv
1149.66 796.356 1141.06 788.981 1139.05 778.27 cv
1137.04 767.558 1142.38 757.565 1150.99 755.951 cv
1159.59 754.336 1168.19 761.711 1170.2 772.423 cv
cp
.988235 .772549 .764706 rgb
f
1181.62 771.884 mo
1181.62 784.445 1171.44 794.628 1158.88 794.628 cv
1146.32 794.628 1136.13 784.445 1136.13 771.884 cv
1136.13 759.323 1146.32 749.14 1158.88 749.14 cv
1171.44 749.14 1181.62 759.323 1181.62 771.884 cv
cp
.690196 .266667 .458824 rgb
f
1158.88 758.997 mo
1157.51 758.997 1156.27 758.068 1155.93 756.683 cv
1155.82 756.208 1143.9 709.12 1107.11 696.669 cv
1105.53 696.132 1104.67 694.411 1105.21 692.824 cv
1105.75 691.238 1107.47 690.389 1109.06 690.924 cv
1149.04 704.455 1161.32 753.178 1161.83 755.246 cv
1162.22 756.873 1161.22 758.513 1159.6 758.91 cv
1159.36 758.968 1159.11 758.997 1158.88 758.997 cv
cp
f
1127.21 814.321 mo
1126.87 812.841 li
1143.05 809.163 1154.33 791.373 1154.45 791.193 cv
1155.73 791.997 li
1155.26 792.751 1144 810.503 1127.21 814.321 cv
cp
f
1129.31 814.339 mo
1129.31 816.014 1127.95 817.372 1126.28 817.372 cv
1124.6 817.372 1123.25 816.014 1123.25 814.339 cv
1123.25 812.665 1124.6 811.307 1126.28 811.307 cv
1127.95 811.307 1129.31 812.665 1129.31 814.339 cv
cp
f
913.244 967.481 mo
913.244 967.481 912.984 967.383 912.492 967.218 cv
908.468 965.873 892.775 962.933 876.854 968.24 cv
854.944 975.543 862.45 983.402 869.273 985.676 cv
876.097 987.951 899.599 981.128 900.356 986.435 cv
901.114 991.742 882.161 989.467 882.919 994.016 cv
883.678 998.565 907.18 999.323 919.31 995.532 cv
931.439 991.742 930.682 983.402 930.682 983.402 cv
930.682 981.886 li
913.244 967.481 li
cp
.976471 .854902 .823529 rgb
f
1022.42 990.225 mo
1022.42 990.225 1022.16 990.126 1021.66 989.962 cv
1017.64 988.617 1001.95 985.676 986.025 990.983 cv
964.115 998.287 971.62 1006.15 978.443 1008.42 cv
985.267 1010.69 1008.77 1003.87 1009.53 1009.18 cv
1010.29 1014.49 991.332 1012.21 992.09 1016.76 cv
992.849 1021.31 1016.35 1022.07 1028.48 1018.28 cv
1040.61 1014.49 1039.85 1006.15 1039.85 1006.15 cv
1039.85 1004.63 li
1022.42 990.225 li
cp
f
1176.32 953.077 mo
1176.32 985.676 li
1017.11 989.467 li
1019.38 1019.79 li
1019.38 1019.79 1179.35 1037.99 1209.67 1022.07 cv
1240 1006.15 1227.87 945.496 1227.87 945.496 cv
1176.32 953.077 li
cp
f
1204.37 850.729 mo
1204.37 850.729 1235.45 891.668 1237.72 959.142 cv
1171.01 958.384 li
1171.01 901.524 li
1204.37 850.729 li
cp
.690196 .266667 .458824 rgb
f
991.749 1465.72 mo
982.992 1465.62 li
915.064 1464.81 li
991.696 1464.81 li
991.749 1465.72 li
cp
.262745 .470588 .635294 rgb
f
1167.05 1076.23 mo
540.412 1076.23 li
529.014 1076.23 519.775 1066.99 519.775 1055.59 cv
519.775 1044.19 529.014 1034.96 540.412 1034.96 cv
1167.05 1034.96 li
1178.45 1034.96 1187.69 1044.19 1187.69 1055.59 cv
1187.69 1066.99 1178.45 1076.23 1167.05 1076.23 cv
.956863 .768627 .203922 rgb
f
631.213 1053.97 mo
631.213 1054.8 631.122 1055.64 630.939 1056.48 cv
541.761 1464.54 li
522.042 1464.54 li
612.32 1051.46 li
613.564 1045.75 618.749 1042.25 623.89 1043.63 cv
628.272 1044.82 631.213 1049.17 631.213 1053.97 cv
f
1158.99 1464.54 mo
1140.16 1464.54 li
1139.27 1464.54 li
1128.21 1413.91 li
1069.24 1144.11 li
1063.18 1116.41 li
1061.88 1110.44 li
1057.18 1088.96 li
1052.85 1069.12 li
1052.67 1068.28 1052.57 1067.43 1052.57 1066.59 cv
1052.57 1063.8 1053.57 1061.17 1055.26 1059.21 cv
1055.36 1059.1 1055.45 1059 1055.55 1058.9 cv
1056.73 1057.66 1058.2 1056.72 1059.89 1056.27 cv
1061.48 1055.84 1063.07 1055.88 1064.55 1056.31 cv
1067.86 1057.26 1070.6 1060.15 1071.47 1064.1 cv
1077.21 1090.39 li
1079.87 1102.58 li
1083.14 1117.53 li
1083.32 1118.31 li
1089.01 1144.36 li
1134.84 1354.06 li
1146.5 1407.39 li
1158.99 1464.54 li
f
621.226 1100.93 mo
621.226 1100.93 li
626.624 1076.23 li
626.625 1076.23 li
621.226 1100.93 li
606.772 1076.85 mo
606.399 1076.23 li
606.908 1076.23 li
606.772 1076.85 li
.686274 .686274 .686274 rgb
f
621.226 1100.93 mo
606.772 1076.85 li
606.908 1076.23 li
626.624 1076.23 li
621.225 1100.93 li
.690196 .552941 .14902 rgb
f
1058.98 1097.39 mo
1058.31 1097.39 1054.45 1076.52 1054.4 1076.23 cv
1057.18 1088.96 li
1059.02 1097.36 li
1059.01 1097.38 1059 1097.39 1058.98 1097.39 cv
1074.12 1076.23 mo
1074.12 1076.23 li
1074.12 1076.23 li
1074.12 1076.23 1074.12 1076.23 1074.12 1076.23 cv
.12549 .219608 .290196 rgb
f
1059.02 1097.36 mo
1057.18 1088.96 li
1054.4 1076.23 li
1054.4 1076.23 1054.4 1076.23 1054.4 1076.23 cv
1074.12 1076.23 li
1074.12 1076.23 li
1074.01 1076.38 1059.56 1096.45 1059.02 1097.36 cv
1059.02 1097.36 1059.02 1097.36 1059.02 1097.36 cv
.690196 .552941 .14902 rgb
f
900.356 731.263 mo
900.356 980.81 li
900.356 986.431 895.804 990.983 890.182 990.983 cv
581.497 990.983 li
575.881 990.983 571.33 986.431 571.33 980.81 cv
571.33 731.263 li
571.33 725.641 575.881 721.089 581.497 721.089 cv
890.182 721.089 li
892.379 721.089 894.419 721.785 896.077 722.972 cv
898.667 724.812 900.356 727.837 900.356 731.263 cv
.690196 .266667 .458824 rgb
f
727.386 891.835 mo
715.969 891.835 705.809 886.468 699.288 878.119 cv
734.833 850.095 li
741.191 858.301 751.053 863.654 762.175 863.911 cv
758.659 879.886 744.418 891.835 727.386 891.835 cv
.784314 .494118 .627451 rgb
f
1386.23 1229.2 mo
1391.02 1203.99 1396.46 1178.83 1403.23 1154.07 cv
1406.61 1141.66 1410.52 1129.35 1415.69 1117.57 cv
1420.54 1106.52 1426.57 1096.04 1433.21 1085.98 cv
1440.75 1074.56 1449.05 1063.66 1457.34 1052.79 cv
1458.05 1051.86 1456.47 1050.95 1455.77 1051.87 cv
1441 1071.25 1426.07 1090.85 1415.74 1113.06 cv
1405.16 1135.83 1399.33 1160.55 1393.7 1184.91 cv
1390.33 1199.45 1387.27 1214.06 1384.48 1228.72 cv
1384.26 1229.86 1386.01 1230.35 1386.23 1229.2 cv
cp
.262745 .470588 .635294 rgb
f
1361.44 1233.04 mo
1360.28 1195.34 1353.41 1157.86 1340.99 1122.23 cv
1337.53 1112.31 1333.63 1102.54 1329.36 1092.94 cv
1328.88 1091.88 1327.32 1092.8 1327.79 1093.86 cv
1347.32 1137.67 1358.15 1185.11 1359.62 1233.04 cv
1359.66 1234.21 1361.47 1234.22 1361.44 1233.04 cv
f
1376.85 1238.94 mo
1383.83 1172.03 1396.6 1105.73 1415 1041.01 cv
1420.16 1022.87 1425.77 1004.86 1431.8 986.989 cv
1432.17 985.879 1430.42 985.404 1430.05 986.506 cv
1408.46 1050.52 1392.41 1116.38 1382.19 1183.16 cv
1379.36 1201.7 1376.98 1220.3 1375.03 1238.94 cv
1374.91 1240.11 1376.73 1240.1 1376.85 1238.94 cv
f
1378.77 1240.57 mo
1380.34 1196.2 1380.55 1151.79 1379.36 1107.41 cv
1378.17 1063.04 1375.59 1018.7 1371.63 974.481 cv
1369.4 949.497 1366.71 924.555 1363.6 899.666 cv
1363.46 898.522 1361.64 898.507 1361.79 899.666 cv
1367.29 943.717 1371.44 987.934 1374.2 1032.24 cv
1376.95 1076.55 1378.32 1120.94 1378.31 1165.34 cv
1378.3 1190.42 1377.84 1215.5 1376.95 1240.57 cv
1376.91 1241.74 1378.73 1241.74 1378.77 1240.57 cv
f
1418.64 1218.35 mo
1418.64 1419.35 li
1418.64 1445.07 1397.79 1465.92 1372.07 1465.92 cv
1346.35 1465.92 1325.5 1445.07 1325.5 1419.35 cv
1325.5 1218.35 li
1418.64 1218.35 li
f
1576.4 959.954 mo
1561.15 956.619 1544.62 953.402 1530.44 959.927 cv
1515.67 966.721 1507.35 982.243 1499.64 996.547 cv
1498.46 998.717 1497.23 1000.95 1495.26 1002.44 cv
1491.32 1005.42 1485.82 1004.56 1480.92 1005.24 cv
1471.31 1006.55 1463.54 1014.23 1459.44 1023.02 cv
1455.34 1031.81 1454.27 1041.66 1453.27 1051.3 cv
1453.15 1052.66 li
1455.07 1056.62 1459.94 1057.98 1464.26 1058.8 cv
1479.4 1061.67 1494.81 1063.16 1510.23 1063.25 cv
1514.34 1063.27 1518.55 1063.18 1522.4 1061.73 cv
1535.85 1056.66 1539.35 1037.85 1552.25 1031.5 cv
1558.73 1028.31 1566.68 1028.8 1572.77 1024.93 cv
1580.34 1020.12 1582.64 1010.24 1583.63 1001.33 cv
1584.61 992.411 1585.19 982.732 1591.02 975.911 cv
1596.38 969.634 1605.28 967.234 1613.49 968.068 cv
1601.13 965.364 1588.77 962.659 1576.4 959.954 cv
cp
.603922 .8 .560784 rgb
f
1328.96 1099.3 mo
1341.09 1089.65 1346.54 1072.38 1342.16 1057.51 cv
1339.5 1048.51 1333.7 1040.74 1327.18 1033.99 cv
1319.78 1026.32 1310.94 1019.06 1308.2 1008.76 cv
1305.41 998.224 1309.75 987.066 1308.65 976.224 cv
1307.71 966.902 1302.84 958.503 1299.91 949.603 cv
1298.21 944.421 1297.58 937.764 1301.88 934.412 cv
1285.28 950.89 1272.84 973.36 1274.59 996.685 cv
1275.3 1006.13 1278.29 1015.26 1281.97 1023.98 cv
1284.38 1029.71 1287.16 1035.5 1287.42 1041.71 cv
1287.71 1048.7 1284.76 1055.56 1285.29 1062.55 cv
1285.81 1069.49 1289.82 1075.86 1295.15 1080.36 cv
1300.47 1084.85 1307.02 1087.65 1313.68 1089.69 cv
1320.39 1091.75 1328.26 1093.87 1331.01 1100.33 cv
.360784 .737255 .541176 rgb
f
1412.28 845.915 mo
1407.72 831.221 1393.82 820.078 1392.14 804.785 cv
1391.39 797.927 1393.25 791.068 1393.51 784.174 cv
1394.05 769.469 1386.72 754.704 1374.67 746.25 cv
1366.06 740.208 1355.64 737.43 1346.18 732.822 cv
1336.73 728.214 1327.55 720.707 1325.78 710.339 cv
1324.57 703.256 1327.02 695.881 1325.53 688.852 cv
1317.25 696.964 1309.64 706.174 1305.8 717.11 cv
1301.46 729.463 1302.29 743.227 1306.25 755.709 cv
1310.2 768.191 1317.11 779.54 1324.81 790.131 cv
1328.05 794.588 1331.52 799.094 1332.89 804.43 cv
1333.95 808.561 1333.68 812.921 1332.99 817.13 cv
1331.2 828.104 1326.69 838.731 1326.99 849.846 cv
1327.41 865.703 1337.45 879.482 1347.2 891.995 cv
1351.23 897.167 1355.92 904.772 1361.75 907.779 cv
1363.47 908.632 li
1377.76 904.725 1391.73 898.071 1401.61 887.04 cv
1411.49 876.008 1416.67 860.063 1412.28 845.915 cv
cp
.603922 .8 .560784 rgb
f
1521.61 849.521 mo
1516.29 837.225 1509.69 825.155 1508.04 811.86 cv
1506.51 799.544 1509.51 786.717 1516.35 776.36 cv
1491.96 777.442 1469.26 795.553 1462.8 819.1 cv
1459.6 830.754 1460.05 843.318 1455.63 854.566 cv
1451.33 865.512 1442.84 874.177 1436.18 883.869 cv
1424.55 900.782 1418.4 921.399 1418.86 941.918 cv
1419.26 959.421 1422.51 975.498 1427.5 992.279 cv
1428.33 995.18 li
1431.12 989.038 1437.15 984.91 1443.46 982.53 cv
1449.77 980.15 1456.52 979.227 1463.07 977.612 cv
1471.22 975.604 1479.06 972.524 1486.74 969.133 cv
1491.41 967.065 1496.2 964.755 1499.45 960.802 cv
1506.37 952.378 1504.02 939.953 1506.56 929.351 cv
1510.16 914.375 1523.57 903.343 1527.59 888.477 cv
1531.09 875.544 1526.93 861.816 1521.61 849.521 cv
cp
.360784 .737255 .541176 rgb
f
1359.35 1430.71 mo
1347.21 1430.71 1335.93 1422.78 1325.5 1411.5 cv
1325.5 1419.35 li
1325.5 1419.35 li
1325.5 1314.97 li
1335.87 1329.5 1347.59 1342.31 1360.71 1342.31 cv
1361.59 1342.31 1362.47 1342.25 1363.36 1342.13 cv
1395.11 1337.93 1402.35 1260.88 1413.54 1218.35 cv
1418.64 1218.35 li
1418.64 1322.38 li
1407.66 1373.84 1393.51 1426.43 1363.02 1430.47 cv
1361.79 1430.63 1360.57 1430.71 1359.35 1430.71 cv
.243137 .435294 .584314 rgb
f
1372.07 1465.92 mo
1368.6 1465.92 1365.21 1465.54 1361.95 1464.82 cv
1341.1 1460.19 1325.5 1441.59 1325.5 1419.35 cv
1325.5 1411.5 li
1335.93 1422.78 1347.21 1430.71 1359.35 1430.71 cv
1360.57 1430.71 1361.79 1430.63 1363.02 1430.47 cv
1393.51 1426.43 1407.66 1373.84 1418.64 1322.38 cv
1418.64 1419.35 li
1418.64 1445.07 1397.79 1465.92 1372.07 1465.92 cv
.223529 .4 .537255 rgb
f
1361.68 1326.08 mo
1353.14 1326.08 1343.3 1313.39 1338.72 1303.68 cv
1327.76 1280.44 1332.69 1244.14 1354.95 1233.37 cv
1359.74 1231.05 1365.5 1229.84 1371.07 1229.84 cv
1379.04 1229.84 1386.61 1232.32 1390.4 1237.58 cv
1394.93 1243.86 1391.39 1250.4 1380.79 1284.45 cv
1370.82 1316.45 1369.6 1324.6 1363.36 1325.91 cv
1362.81 1326.03 1362.25 1326.08 1361.68 1326.08 cv
.321569 .513725 .662745 rgb
f
854.479 1005.74 mo
846.572 1003.74 837.675 1001.69 829.898 1005.26 cv
825.931 1007.08 823.021 1010.39 819.67 1013.07 cv
815.907 1016.09 811.632 1018.44 807.139 1020.17 cv
788.3 1027.43 767.568 1023.07 749.781 1014.94 cv
740.744 1010.81 726.388 1003.88 729.871 991.492 cv
730.188 990.365 728.438 989.884 728.121 991.009 cv
725.747 999.452 731.55 1006.72 738.312 1011.02 cv
746.843 1016.44 756.897 1020.42 766.642 1023 cv
784.729 1027.79 805.405 1026.62 820.573 1014.66 cv
825.408 1010.84 829.271 1006.4 835.687 1005.4 cv
841.815 1004.44 848.085 1006 853.997 1007.49 cv
855.13 1007.78 855.613 1006.03 854.479 1005.74 cv
cp
.176471 .301961 .4 rgb
f
1171.11 532.279 mo
1171.11 654.186 li
697.25 654.186 li
697.25 532.279 li
1171.11 532.279 li
.956863 .768627 .203922 rgb
f
782.922 592.094 mo
792.571 592.094 li
792.571 608.084 li
790.366 609.664 787.829 610.878 784.962 611.723 cv
782.095 612.568 779.227 612.991 776.36 612.991 cv
772.316 612.991 768.677 612.137 765.443 610.427 cv
762.208 608.718 759.672 606.338 757.834 603.287 cv
755.995 600.236 755.077 596.78 755.077 592.92 cv
755.077 589.061 755.995 585.606 757.834 582.555 cv
759.672 579.504 762.226 577.124 765.498 575.414 cv
768.77 573.705 772.464 572.85 776.581 572.85 cv
780.184 572.85 783.418 573.457 786.285 574.669 cv
789.152 575.883 791.542 577.629 793.453 579.908 cv
786.506 586.194 li
783.896 583.327 780.771 581.893 777.133 581.893 cv
773.824 581.893 771.158 582.895 769.138 584.898 cv
767.115 586.902 766.105 589.576 766.105 592.92 cv
766.105 595.053 766.564 596.955 767.483 598.627 cv
768.401 600.301 769.688 601.605 771.343 602.542 cv
772.997 603.479 774.889 603.948 777.022 603.948 cv
779.117 603.948 781.083 603.527 782.922 602.68 cv
782.922 592.094 li
.176471 .301961 .4 rgb
f
824.936 596.67 mo
819.975 584.319 li
815.012 596.67 li
824.936 596.67 li
828.135 604.72 mo
811.814 604.72 li
808.781 612.219 li
797.643 612.219 li
814.68 573.622 li
825.432 573.622 li
842.526 612.219 li
831.168 612.219 li
828.135 604.72 li
f
883.218 612.219 mo
883.108 591.763 li
873.183 608.415 li
868.331 608.415 li
858.461 592.314 li
858.461 612.219 li
848.37 612.219 li
848.37 573.622 li
857.358 573.622 li
870.922 595.898 li
884.155 573.622 li
893.143 573.622 li
893.254 612.219 li
883.218 612.219 li
f
934.718 603.783 mo
934.718 612.219 li
903.729 612.219 li
903.729 573.622 li
934.001 573.622 li
934.001 582.058 li
914.537 582.058 li
914.537 588.564 li
931.686 588.564 li
931.686 596.725 li
914.537 596.725 li
914.537 603.783 li
934.718 603.783 li
f
987.1 602.57 mo
988.679 601.651 989.93 600.356 990.848 598.682 cv
991.768 597.01 992.228 595.09 992.228 592.92 cv
992.228 590.752 991.768 588.832 990.848 587.159 cv
989.93 585.486 988.679 584.19 987.1 583.272 cv
985.519 582.353 983.754 581.893 981.807 581.893 cv
979.857 581.893 978.093 582.353 976.512 583.272 cv
974.932 584.19 973.682 585.486 972.764 587.159 cv
971.844 588.832 971.385 590.752 971.385 592.92 cv
971.385 595.09 971.844 597.01 972.764 598.682 cv
973.682 600.356 974.932 601.651 976.512 602.57 cv
978.093 603.489 979.857 603.948 981.807 603.948 cv
983.754 603.948 985.519 603.489 987.1 602.57 cv
970.806 610.399 mo
967.553 608.673 964.997 606.283 963.142 603.232 cv
961.285 600.18 960.358 596.744 960.358 592.92 cv
960.358 589.098 961.285 585.661 963.142 582.61 cv
964.997 579.559 967.553 577.17 970.806 575.441 cv
974.06 573.714 977.726 572.85 981.807 572.85 cv
985.887 572.85 989.553 573.714 992.807 575.441 cv
996.059 577.17 998.614 579.559 1000.47 582.61 cv
1002.33 585.661 1003.25 589.098 1003.25 592.92 cv
1003.25 596.744 1002.33 600.18 1000.47 603.232 cv
998.614 606.283 996.059 608.673 992.807 610.399 cv
989.553 612.128 985.887 612.991 981.807 612.991 cv
977.726 612.991 974.06 612.128 970.806 610.399 cv
f
1049.57 573.622 mo
1033.03 612.219 li
1022.28 612.219 li
1005.79 573.622 li
1017.59 573.622 li
1028.07 598.765 li
1038.77 573.622 li
1049.57 573.622 li
f
1085.58 603.783 mo
1085.58 612.219 li
1054.59 612.219 li
1054.59 573.622 li
1084.86 573.622 li
1084.86 582.058 li
1065.4 582.058 li
1065.4 588.564 li
1082.55 588.564 li
1082.55 596.725 li
1065.4 596.725 li
1065.4 603.783 li
1085.58 603.783 li
cp
f
1116.46 583.712 mo
1115.32 582.72 1113.62 582.224 1111.38 582.224 cv
1105.32 582.224 li
1105.32 593.527 li
1111.38 593.527 li
1113.62 593.527 1115.32 593.041 1116.46 592.066 cv
1117.59 591.092 1118.17 589.705 1118.17 587.903 cv
1118.17 586.103 1117.59 584.705 1116.46 583.712 cv
cp
1111.27 601.963 mo
1105.32 601.963 li
1105.32 612.219 li
1094.4 612.219 li
1094.4 573.622 li
1112.04 573.622 li
1115.54 573.622 1118.57 574.201 1121.14 575.359 cv
1123.71 576.517 1125.7 578.171 1127.1 580.321 cv
1128.49 582.472 1129.19 585 1129.19 587.903 cv
1129.19 590.697 1128.54 593.132 1127.24 595.209 cv
1125.93 597.286 1124.06 598.913 1121.64 600.089 cv
1129.96 612.219 li
1118.28 612.219 li
1111.27 601.963 li
cp
f
698.673 654.186 mo
697.25 654.186 li
697.25 532.279 li
1164.35 532.279 li
1006.42 573.622 li
1005.79 573.622 li
1005.86 573.77 li
994.823 576.658 li
994.184 576.222 993.512 575.816 992.807 575.441 cv
989.553 573.714 985.887 572.85 981.807 572.85 cv
977.726 572.85 974.06 573.714 970.806 575.441 cv
967.553 577.17 964.997 579.559 963.142 582.61 cv
962.614 583.478 962.161 584.377 961.783 585.308 cv
931.686 593.187 li
931.686 588.564 li
914.537 588.564 li
914.537 582.058 li
934.001 582.058 li
934.001 573.622 li
903.729 573.622 li
903.729 600.505 li
893.228 603.254 li
893.143 573.622 li
884.155 573.622 li
870.922 595.898 li
857.358 573.622 li
848.37 573.622 li
848.37 612.219 li
858.461 612.219 li
858.461 592.314 li
868.331 608.415 li
873.183 608.415 li
883.108 591.763 li
883.184 605.884 li
698.673 654.186 li
776.581 572.85 mo
772.464 572.85 768.77 573.705 765.498 575.414 cv
762.226 577.124 759.672 579.504 757.834 582.555 cv
755.995 585.606 755.077 589.061 755.077 592.92 cv
755.077 596.78 755.995 600.236 757.834 603.287 cv
759.672 606.338 762.208 608.718 765.443 610.427 cv
768.677 612.137 772.316 612.991 776.36 612.991 cv
779.227 612.991 782.095 612.568 784.962 611.723 cv
787.829 610.878 790.366 609.664 792.571 608.084 cv
792.571 592.094 li
782.922 592.094 li
782.922 602.68 li
781.083 603.527 779.117 603.948 777.022 603.948 cv
774.889 603.948 772.997 603.479 771.343 602.542 cv
769.688 601.605 768.401 600.301 767.483 598.627 cv
766.564 596.955 766.105 595.053 766.105 592.92 cv
766.105 589.576 767.115 586.902 769.138 584.898 cv
771.158 582.895 773.824 581.893 777.133 581.893 cv
780.771 581.893 783.896 583.327 786.506 586.194 cv
793.453 579.908 li
791.542 577.629 789.152 575.883 786.285 574.669 cv
783.418 573.457 780.184 572.85 776.581 572.85 cv
842.526 612.219 mo
842.526 612.219 li
825.432 573.622 li
814.68 573.622 li
797.643 612.219 li
808.781 612.219 li
811.814 604.72 li
828.135 604.72 li
831.168 612.219 li
842.526 612.219 li
.960784 .792157 .286274 rgb
f
776.36 612.991 mo
772.316 612.991 768.677 612.137 765.443 610.427 cv
762.208 608.718 759.672 606.338 757.834 603.287 cv
755.995 600.236 755.077 596.78 755.077 592.92 cv
755.077 589.061 755.995 585.606 757.834 582.555 cv
759.672 579.504 762.226 577.124 765.498 575.414 cv
768.77 573.705 772.464 572.85 776.581 572.85 cv
780.184 572.85 783.418 573.457 786.285 574.669 cv
789.152 575.883 791.542 577.629 793.453 579.908 cv
786.506 586.194 li
783.896 583.327 780.771 581.893 777.133 581.893 cv
773.824 581.893 771.158 582.895 769.138 584.898 cv
767.115 586.902 766.105 589.576 766.105 592.92 cv
766.105 595.053 766.564 596.955 767.483 598.627 cv
768.401 600.301 769.688 601.605 771.343 602.542 cv
772.997 603.479 774.889 603.948 777.022 603.948 cv
779.117 603.948 781.083 603.527 782.922 602.68 cv
782.922 592.094 li
792.571 592.094 li
792.571 608.084 li
790.366 609.664 787.829 610.878 784.962 611.723 cv
782.095 612.568 779.227 612.991 776.36 612.991 cv
.258824 .372549 .462745 rgb
f
914.537 597.676 mo
914.537 596.725 li
918.171 596.725 li
914.537 597.676 li
824.936 596.67 mo
815.012 596.67 li
819.975 584.319 li
824.936 596.67 li
.960784 .792157 .286274 rgb
f
842.526 612.219 mo
831.168 612.219 li
828.135 604.72 li
811.814 604.72 li
808.781 612.219 li
797.643 612.219 li
814.68 573.622 li
825.432 573.622 li
842.526 612.219 li
819.975 584.319 mo
815.012 596.67 li
824.936 596.67 li
819.975 584.319 li
.258824 .372549 .462745 rgb
f
858.461 612.219 mo
848.37 612.219 li
848.37 573.622 li
857.358 573.622 li
870.922 595.898 li
884.155 573.622 li
893.143 573.622 li
893.228 603.254 li
883.184 605.884 li
883.108 591.763 li
873.183 608.415 li
868.331 608.415 li
858.461 592.314 li
858.461 612.219 li
f
903.729 600.505 mo
903.729 573.622 li
934.001 573.622 li
934.001 582.058 li
914.537 582.058 li
914.537 588.564 li
931.686 588.564 li
931.686 593.187 li
918.171 596.725 li
914.537 596.725 li
914.537 597.676 li
903.729 600.505 li
f
961.783 585.308 mo
962.161 584.377 962.614 583.478 963.142 582.61 cv
964.997 579.559 967.553 577.17 970.806 575.441 cv
974.06 573.714 977.726 572.85 981.807 572.85 cv
985.887 572.85 989.553 573.714 992.807 575.441 cv
993.512 575.816 994.184 576.222 994.823 576.658 cv
961.783 585.308 li
f
1005.86 573.77 mo
1005.79 573.622 li
1006.42 573.622 li
1005.86 573.77 li
f
571.33 979 mo
571.33 731.263 li
571.33 725.641 575.881 721.089 581.497 721.089 cv
890.182 721.089 li
892.379 721.089 894.419 721.785 896.077 722.972 cv
734.833 850.095 li
730.164 844.07 727.386 836.505 727.386 828.29 cv
727.386 825.642 727.677 823.064 728.23 820.582 cv
727.95 820.576 727.665 820.57 727.386 820.57 cv
707.705 820.57 691.754 836.522 691.754 856.203 cv
691.754 864.467 694.567 872.075 699.288 878.119 cv
571.33 979 li
.701961 .294118 .478431 rgb
f
699.288 878.119 mo
694.567 872.075 691.754 864.467 691.754 856.203 cv
691.754 836.522 707.705 820.57 727.386 820.57 cv
727.665 820.57 727.95 820.576 728.23 820.582 cv
727.677 823.064 727.386 825.642 727.386 828.29 cv
727.386 836.505 730.164 844.07 734.833 850.095 cv
699.288 878.119 li
.792157 .513725 .643137 rgb
f
735.982 1190.55 mo
735.982 1203.58 725.415 1214.15 712.38 1214.15 cv
699.345 1214.15 688.777 1203.58 688.777 1190.55 cv
688.777 1177.51 699.345 1166.95 712.38 1166.95 cv
725.415 1166.95 735.982 1177.51 735.982 1190.55 cv
cp
.956863 .768627 .203922 rgb
f
793.475 1173 mo
793.475 1180.35 787.514 1186.31 780.16 1186.31 cv
772.808 1186.31 766.847 1180.35 766.847 1173 cv
766.847 1165.64 772.808 1159.68 780.16 1159.68 cv
787.514 1159.68 793.475 1165.64 793.475 1173 cv
cp
.690196 .266667 .458824 rgb
f
712.38 1278 mo
712.38 1284.51 707.097 1289.8 700.579 1289.8 cv
694.062 1289.8 688.777 1284.51 688.777 1278 cv
688.777 1271.48 694.062 1266.2 700.579 1266.2 cv
707.097 1266.2 712.38 1271.48 712.38 1278 cv
cp
f
785.606 1251.07 mo
785.606 1261.43 777.207 1269.83 766.847 1269.83 cv
756.485 1269.83 748.086 1261.43 748.086 1251.07 cv
748.086 1240.7 756.485 1232.31 766.847 1232.31 cv
777.207 1232.31 785.606 1240.7 785.606 1251.07 cv
cp
.262745 .470588 .635294 rgb
f
1265.66 634.244 mo
1265.66 643.642 1258.04 651.26 1248.64 651.26 cv
1239.24 651.26 1231.63 643.642 1231.63 634.244 cv
1231.63 624.847 1239.24 617.229 1248.64 617.229 cv
1258.04 617.229 1265.66 624.847 1265.66 634.244 cv
cp
.956863 .768627 .203922 rgb
f
1307.11 621.592 mo
1307.11 626.893 1302.81 631.19 1297.51 631.19 cv
1292.21 631.19 1287.91 626.893 1287.91 621.592 cv
1287.91 616.291 1292.21 611.993 1297.51 611.993 cv
1302.81 611.993 1307.11 616.291 1307.11 621.592 cv
cp
.690196 .266667 .458824 rgb
f
1248.64 697.289 mo
1248.64 701.987 1244.83 705.796 1240.13 705.796 cv
1235.44 705.796 1231.63 701.987 1231.63 697.289 cv
1231.63 692.59 1235.44 688.781 1240.13 688.781 cv
1244.83 688.781 1248.64 692.59 1248.64 697.289 cv
cp
f
1301.43 677.874 mo
1301.43 685.343 1295.38 691.399 1287.91 691.399 cv
1280.44 691.399 1274.38 685.343 1274.38 677.874 cv
1274.38 670.404 1280.44 664.349 1287.91 664.349 cv
1295.38 664.349 1301.43 670.404 1301.43 677.874 cv
cp
.262745 .470588 .635294 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 10.0%%AI8_CreatorVersion: 22.0.0%%For: (Ansori ) ()%%Title: (10. Gamer_Artboard 2 .eps)%%CreationDate: 13/04/20 11.00%%Canvassize: 16383%AI9_DataStream%Gb"-6CQfd\E@(Afnitn_1a?YP;T:eM418a$pYO>;9GD2WC.<'GYr2js;&H!X2Di"Qgg@gFNdF/`hR\EM1mA+g_+&_31EIV*a5'Ph%lt:OGIXLtYo9Xs>HhIF<l4DP)&&34g`^@U-?!`!RZiBaspWn;5pM$O,:Oi<1ful=hHi<6oZQFWU^3]>7oaeeu*<5Zljl&-or[>O,%EqoLaM\iSrj`'tRajY`GIWkVSoZd@+(XMMV^&IHARmXnm+Ud2sd_G`HY*$otDhuRq^]$tR?Tic-7UAH"/1:JapO@<E5>HkoIfB)V%J+gqG5J2:?jN[9t0E9WWjNQ@cB>*b8cb=n'Ek0`(%Si%Vb:aC(BE.bf`tr[dJVWVDq<+5S*97V0fAX3r6gt12b46CiA$n[REchZa%nOnZ;D5TPp(]Ne4i=PgPhu2tr7sOu\?4Sd4DnV_1*kD<snWIS!5<Si2q\N&b4C_/Ul(4Adpn`(tr+GbfSLs64I9M#aqh-HF$_\Vj%R;18N[Z5e0e+75PnuKZXHhQOTB<S`CDI:0SlM:H-*Tbmqjo;=XpHQB:pA/]75(=g%Pp'nrr4dOMmB[W"H/n2e(Ji\Qe&V"Yon5Ol%H2YcrDe/dZHLW3us&Y!0TC=d(IeVGirq$V/bio4Yqu*jfIsCWNpl=2YBsW%dDdki=[amerq;=%N+>)QM5-l3fEa7Dg>,4*+-U[=2%YFkjbq9*-Uk%)hc[mhBuJ+`[6\(bRIr_W:fq"?XhqV1jRI80Os2fG;$[+BL#S)\Fa;8(iajst`Hq;o*+=5T_)Iup;jA2q>gOoF@j%+8'j<hu&I=ro<bL&cDHo^Nh,<5C\N:/q:dre8Kg1i^`gp?bLp]j7g<;q2__FTAP+pl5uT<rl;@CDdL,C0)YG4gOK"Uo#!*j5Nb^%%r8I=4VfDn8H(8sIjSAPbGjFbXj'Fr3kV)$irn.8Jm]0n3MD!O6=6]PB:X<@[qL6#XT(h[MrU.XgQVUp0-m,qqlfULSDk9MkCcB:h%ceeTUHe_JQ`qRn$]E_6C\GKK*R""_r#Q=>eQOdt!fot$+roM\rIi]-uonsVN;UrI,IIlOsGMMklIt%+Rks&J1f;,$\kMJFJo1u+5%T=t0rLN*FpEGK-m]ZT+0rPp9=?9J8JlR1Tie+9Jm]@T:Hn5"g(]R'6[h##7_a)gD#nQ36k4o,rco(C2`^=7(Hpe3d.no:DCoU8"n%B8p]04\'tsn)YEorTUqDGkL(l&)W?cc][2-n9t<.`NucIoY[/2n"C]7HHI#;p:gE2NH[;NLV3/l_)(pQ3Igp2-L)gJl)j,roe0*O%qZ$6[IsC:d6tcJYo9ZcR+27UAq3u$O9RQNhpTP,<?iAH;n"6j4qO(]M)l@OaeXG*d?iKUJ$^Q^+]9h"8s6B9@DkG3Vpa]K=`:f:Y%4<3J'B2J!AT"Y'@Ea:4HEB)a%]DVW5hBZHt&+U6t>:G#@o$>jsMZ9Q(5Osjd7ZWW*9j1b,io+P-gqE]oMmm=@qW0CCo^YAar6R)]%f]?T2-*^7aVNSQI61E,HhW=0\:O/#n3F3qYl<AXrQf's\S]6cX,O>26qq[=:^OPe?0+PaFrT*&^T?/e!&Bk5m(#ul:q+"!/\Kq2g%/Vk:UXS?Ff_-q0@l9iF%=ki6&F;lP+Fh,c+8WJ$7DZ-]$@r5j=:@54?2Z0O+\("jpbr;mr`M>ZK;n]7&McskuZ23b.I6#Ht8mP%A%Z%V--]c8C[m]tUkf8MpC`uMCO_rWbZl!BBk3luA8GB1cg;GBT?PbK.,9eXW-HTBCA.#5HKCf-c81O^Eu*'UOb@GHXE*2db?6Tuj(%:us)kSqiN*CV9Rf@9pb8ms1Gb3;K<hGB2Jbq*JG:OTVeS]\M15;p$10a,7dj]<`J)3UW]Nm\E;:,5km0a=bRHSNI&<41F(iEF)F]%*9HYFH7MMG;<>k]dMhKYqLmu1O`$;JEoZZ<J,-[fTDMc,5ORt0f8_ZeSn791Iua+"7lbJUmc<j(?+Z;\]IS#u]8ZHu$Z_mtn?Ve/%SE2`QJ^\0qgf>:G(bp"r)p=?%TP=.@S7L7ljhQ-Y*ASNmE%lBUnDLqIjZ(?n3m)H_@<>`DV^rf^\L)EfN%#WE(ftjFZ#qZHq0SA+%^Q\]4Q(uIY.fWl:rsQgSL4fssO,bW(=nDS9j6nOSNkqLg]u.ICd9'p9Af6XHOaTo4<&tt`pGOYo=%4RLAc9i&hL7i^q.,"4l&2lP%APcqUD0PD!UEmqECsl,BYf`V6dUL79Otl$a)!-ZZ]Sks[VBAg5b*4r`Z[>r<%kc91a*]OW'P*q=BuQ8E745E$9./LefA'"h"mNN@%)W9-5([9m$*F<:W*,eW^pG+S<%$Vrgk>m>c=[npF3>\NSMKESp*fhZdna7*eq=7,FcbK-pHb);0:A9[jT5[Ofo!sR^\NM%\-TUhF%]hB=t'-=hP*?l`*h;:rIl2Ef*PB=tt*J8p[&&H&t!/`OnP'iLA,KCV?fr^2lN4T`n+RZj>V.&?gNmr`uJW[Rc!61X8Bn\VYlP&sN%4f0q+Uuql:e=ILY"o"@gO$@j>==9M"pM@-X\T=9CiD06(;_<(M<SX41nW$N]e+AS:b]^u'%bA5U-p>U/7P!@K1+dL"1q+Ifj8JKh%MFJLjFIG%8PTs<ITEF6Wn3YP0\DW#E5G9N-kVLV>@?GF>/^&#ta%-m&Mktdi8m<+*K@YB>'e3C2FHt)!HT(.P^R=[^-Dg>;>*bTr%h[V5uQc$.KXXHH59rN@UY8FP>,=@a>5iqcXBOnL'_RYKk3cg&4;hmEZ?Hcm&k/;P)q-BXh38`+NGLQ[al@Un4("C/gI0#ll9*KGD%*fFeAFUN:bUW0k)$?r3k3qHQu^s,5A#2R-nQcH&jj),o`II,4R06$QCnOF&2!P%L9TT-fC%fI6"o184XE?:)t*n`-nrC7_2[rO^W%c7BDCA]T*64KAmdZ](!@%'<`ZAsKRFdcaOt+kE*IlNrl>4'Otm?!a=B,$,8pFlP#K_O>Jf'r0uM@2?j4D\)a)BGLdfMV5k^&oh6R%SZk<58i'F!$qV?rE)Gg,_GRlI$NV#nbQU8^s%9tSU;jsEXtMdg_t7n)43hGYgmZ'ABlF1mK2*1m=;rV*Vg#L+W`^:'[Y@^bA"flA%B8-W7N+>D4UOAi%Kj#4V(.Buo_O2-YP3EDpU1'UVDOCoW[HS1WVE8mhNY%i:FGFb_*P+sh`H;-uqp90YKR4slne==3qt,7*SRdG<%@3]E@Jrh.O..3'#f)WV8(Yf?G..t@X/,nQ]rt#;3DdU5+o%gWj%t?DJRT%H*X'u.J2!3&sn?VC.d7m?4pe`lMPGLL$R_n'6'YTFd%5K\Lk1:U)s"NW>,mpnt\`=-]@<g/KrgI6kdM5Gg$@YHkVP;PXKAu(`/1^U)o73b,:7]O6j`HOhKGOB8416tsH=SngR0;s:Z9r?:K%18@11-9DZ2G$[k13EoH_SZ+qSQ)7/JeQNj5D,YBOc^c,8BtLP<[c;2EI6Xqg:PZQ2/6o[Y8%<l`7ujr@Q:o&9j@>:%pousXX86hV%nc:,IpGnQ6473!-0/pOa_XLBlk`A'mTkfdsk`JkmdNGEQC6CY]J=oOtSV][MEg1/$?5Baf93J,]\Qr`RT1l3e3Z!L)*6gDufjLs_%)JOE&cHaomWaQN_9Vn&KrO!(*bL,V?b%@ufmY7:/<gMHA_nqkd/"6-hNC:1W9G*\@eLdk1(=o@IAim%8D6p`ic0E/c*62dE>hp%A%KD*qY]E:)A1r&7(lj.Miil.$$*7T\#WPiRBH1.MGa"m\a?:TA>Z+TCU%mAeDL@>(RH2ghCe(jGp)J%8<<JEEE;a:q4Z:=8\5K(VV%rK5#HXto>2()S@W-9<lQ'?u\4Ws$_?UVdo4lqR=Dr&SI3?2*G%eKA.QbZa(nX5D<P[I](f#t'V!4A_>p&BpU(gc`'=92qCZJ[8bh%RoUF+gHsFg-Df.f0m[-'>\]RqL05QGRD#'":cMO:$VdsTJ.d2+Qk\"i79@2$G[,s9;oa=9n`>N*"ulH=7nK6l$I8quOUb?fnl#.'%/+u+Kpj8V!(2C-g\uZLb5DhV"qTOj]K1/b=d>l*oo&aRreS?js\m_sBZXqO#Ql!e7]*2q.fLHeNMI#&e3XQ)4()eF%nUXBi'9EQZ%BJo"\68ttXH_N,;l3&-YIBZ&mKr?++4&o6pn>Jr/$>A]H<B:KRW?1:BU/1(2QX*sd?SsiAFIj7o:n+(64$p8DZZeqmNRm@?_Z)i+%3R66;/`LdCn;@HChWK^`F"Hd()KFL*3gTM)ofp\1WBot@mn`\%ZJq/HF<Br,q>Pc)*cEe7P"[o\\j)`rA,s?fVg.cc/PjDK!g]6^%V'AeCR'OOqc3,Nr:BI$h1^RPf@7^VK:Q/R.+K9=UJWW#>dW!9=!0Q^P6V]llEQB#S1b<\+Cf*0t"-O!_.O_:#U]Q_e:#9#,ZkB#7%7&_?WW'Sgb=J`@VBTJ1F/4+YQkjhd)KLJLk78*GM`_9mh59@iX(thk'4%2tsFR%7d;hmrUC?Yq$*=(u?AV=6n"^JM]:.NqWQ[de6%/6eWfJ%5AGNq6J9e&"B=q]3`O3L9D$m1CW/b-AVZWW,P-G^o`^K7)&h?Soirlhp\P^Yot<njS1Yd3*qQoCL<.L=@>/Mq8HZj+E%V%#:MA'.\c#[F#>_DPKOCm5"0'4-#Q0&l'6`\bR4,-\%DNG6-55s#gKQIZ2+PTUip'f2bs>l6G1EXb6b]P/%_Os%?f$B^YT+Nb'_1i%YO%-,b!1@S`3?qe*k$8k%dngPmKQ5!Q"0`f8PiX478l9*\OI).-u(UqIC-ZYa-!a@Hd[.nhYlkedOU5K=9#NE=J`sUO\fWBi(+-m%Tt=n7=c;$t0HU5Rg;*P)[pt._n]:RcX^o]:5Hq.14f#6p71A'rjG@.>6Uke**U58.r:AamhXFH.p9V3_V[debY7>XdcNAT^T2Gur%Ser9$1/'3<<()ulUI%Nf=c4cQEp\[S(0Tm_$n*>?'UOB>&i4)KTH^7ud@`K8P_bPJ!d)TJZ<H1aN.B4\@@kH44IZ-"(sZP\\?-u+%V-#X5j`FZI>p/cB/;I0q2p\u-$PPla]-E;o:!M9hD"<$cC20p65#8LfP%IM=4>4`2o/&=+ZY+%XbLT(qk+&^0%!,Do<<&KU\C^Z'%jh/`EB$`Qj&]^#'ZE<83mZ75&BT&^8cGpE=]m?3O*;4#*?i+pEf^Y?&ZlR<lOalge;cYQ3je:neN\<?hJ.&9BO[blR]W%c8OLq6l%B8tSTk-&GNgki#RX(`O'2iTP]e&&h*krSHEFJZTh@c6BtUrd2s5^1^DkFmSd'tNt\(8N"DR;gpp>LH'7e'qi$T_$C0O3Ac%C4^)A%Zs4Bk'oj2Xeu82B"`AXNfoLA5_DW;jmU9QmJ=T,F!jhGTMJDr(h<mPjgW4H24fZ4mS5R[QbkYJP;[WB+LL$4.M;GSdHTlc-FfOoY%aA1?^NamugX21S23R3+d-$$abL7Xq.V&NT:No^tX*:_E$^#R0Ap$_bujiUFRO6*)!/Ot0^Z+SCS+*.8a^*/D%f$B99h!VBd-G(@D%=H7#We5eo6l0UXErG7nh>@'Ctg6Z)KqthYHDb*Wjb3@3H>j3_uj#+Z$Upsc!EAe4q'Aa28=Y;Cu9*D0Q2gO=?HgKkqE3i6JboX:'%L=d2%/qKGtU04YW1E/+@(_h#l\'2m5'iMU)nNW1qj4aK7/d8DlpJJ(6bB<?%*;TH94SF\o4oW@UE(5\FZI%2"XLdMB($#!Ym8Cp]%NmKHB<QsD895[RFUZFB^[aA!B>LPA73<iYudq`d$_M4nT>C"Hu'\=lHWb_$X'"Zm6f^ofG?=_OXOeU$V08j.?B\I8+QWA.K>.n6\%H!+ueRHL:Z_!//eEj7r5`M(Vd(*BY(ps/HLR]/(p%k^PU;8oE/_U3o!J<F>ZGdUIeB,XR,mML)A?q];-;YIR>2k"67jn[Hk.+=;3%Nc]8'pp7nXjm\<PmMuP>oD9TYipT!qpH-W[o=L(FI89X#j$2l>2pK2H=4&Y!HG*koBU*;"WG+&P!uFkU138t5VUp6lp43UuW.X$j%bIh)9!^nL`/A50S:n8(5iCrod@VMcEs0o'>CpZeBCBQHZ"HuP!YlGQG_Qd'TOh9?7B54gf2;>BGSQ:oKc9QRaW*IP\OQjL+O6G%I%$r:B6GfMP=gdd'F5IQM*HfdX0])B11N]@Ja?dZ1*=PHj7/64)^+4hukY1EnAX<[:>>kI`'_YQGdYA%1Kntu.BcL3f[GG"HWj)fPt%%n3+6I(A55*q,%\+XeJVCgC3C-q6Sn<ZSa%ljFqV+2s0d6EOg^&&SAhH\3oE'[oK)8Hf'>0ckhX1fM?R7l9H,CA$>$W]D'K!]7.L%0.I4hq>h-YKOki.ljF*mV$+J*BjXN[VFlG%)LJ2XQX)nnK*%lH4lCVi_>HCKNFuSN+e/KFN#2L$2ft>uhD)umJLO'7=$RE.8`XMg%CL$$YJQpir9X_Tm9JRSDTP6T^kfPhARUNRH>+@At8T&5ZK7_#\km4BIgHg?7Q>BOW)]5;Llq07u:<]gRWbUI8(GQl"fDtE6DrneA%0!?hm8+Ab$1.IGRJ9n)pKiBio)WZ3+.Zq_Nh!FQ9kN`kd;i/S9BhMeQotaKH*'<2,\S>P;['AM*>at8b`g3>"Wu`%531E3V148Z<%bc5P_%F[q0c*j?h[Ck&&JhGo=X4a]a7`4/=4f-`ZEA9iGFr4&pQl2&i955bqbNM(TTM):,[9s\k^S5(]NHSs(\E'+*\t@8'd71L%%nZp-VWh%[2`uWLJb].YfnXDq@a+N'`857A0J/:S"2*R<X/uC0HVhr4mJZiaG1=\ogNf66Z)d/"1Q/m>n*!<)frBPO#]N"kd+KUG(%X@4mhaa"V0?n>;HIN.:,'C=cJTk"@CoiM]0J<$nbd`XdTL4=RL7E\Pulmp9H7pc4PCZb;/Z/:=p8!L8K*rB3iR5/Btk)EccfVH'e%.,ns13m3mPFdbC;baf7!?-Jk1(XcpQA!pq+)EpZYI#cJ#\F_MeQa&Od/CL,<M!d3,Eu-`Y@-62.Hs=XNcJY!ZO-4G3O\=-'FHY%\%7:JO:@E_u"9^DX4(AiG7&Pgf\Y82gUDu6l+8=/Qpqa:I^lc1lJheTL73!Rm5f$SMH1p)Bim!^^op;^C4.a.J%nL_e.EunRF#!_))%%5iX5QoD)rI8@=Naj`3rOWGBbaI5H<"O]C*=&LiNhCh@L<u>WOY]hk7Ulq_'P:Z)Pcb),F7*Q=ZE#>e/9T_RY5+/\am?).aE52fQ%Mr[:_4cKLk&WYlKSH]=BOcnW6Q'^$%1DXmFg+'=-!7rAdTYu,R*G&P3q^'[\F,sHYmpcrYn=M?mr,]R1^P7[+()^NF/Mn6&T#l2R%[I;1#3-+)ONB8@?%#%=$e#7`ar#&4@KM:E[gjG,O-TEpiCZ',&MIo7iAE_^fcSXtGDQ8KLGg9bnMj;9Ur.A2u3';=e1EOgYc*TOG%=-Hh8kht/;YM$3+2g\)6jp0"2(r`EKii%Km6]P`P5'ouZcMDmch'ZYghuC;^X$i=)n#nh!S*O<$4-lr,:S=XgVB7k)GV(?BYf-R(%@sS)Q5N%:Yk>C@+HE/rUJrPYmWYqWFd@OaBYu?XYp-0I4jg\W5,,>gEeTbpQ4MC>C[bGYk%e'+=Nh481nF4,fnEAitf[B9dT?YJN%j2g7/rE-Me]9s^%k(=,C4\j%f>&jZ4mt)[o.*H1PB(("/%/j:-B`%DJ_+bHW9UT]Zf+.DKQRhLs<L_3mG7m(jO&9.f4l2r5H?kR8%hNH4Vn@/s9I)7$c["&Qh]<[joD*:h!lg;@HMG78YF'#R7+Q_'-;6G$_Uc]s1%Mg<7?e^r@b!]?Pgt:3oUL3>'P'KR3VGQ6C`cU[t%?]pctQV/+C]1ufRVG+9g)Ul<\6Zu%4l5*qdNB9VY/QYu$T/gETe.]_P;J%e#2Cqd1f:8*`Vc,&<XZkLefMC[(gA@I5MdnJ.<$auH%Sl;+2Ebb>o[8SD(Nl@7Oj8$%m1MS#VUqP!LI5H`1=BaVJGaM5&M$Ips;eG2J+")hh+-4$m_``sm:"4G!@r,@3m7PalO]^3L83'Gc%*$UpQbR=ACK=,@A\mS(^oA/ajkp>T>-"#!fh3Yeg59C[ArW_Ci*]jI7)?2f_HG#5Lm]D5i*]J>uT19?sa%Wi1n],Z=Qp9\754.pA%2k5MAXQ)<Y0^)>\]hUgM?"\7;2Wk<9W0RSRi7\XA]q<gM^:(kB2q>>q7[#TJ.3I!o^74Wc+lt<5lp9Xj<e":(]k>JkguU(^q22g"%F0+d9(Ht0&r'&'=T8F+cDOp<[2]sa.`%oE4:+ERKf,d@td:'5f)dd'k4\E(U-E`UrIJb\(`(@$9a/Yr&Esj!lQFC4@IHZ?t[F[rT%'K(<gje%3!H[cKj(?lg\[3>[KI_%=jkMFu5-%F&NrR4@:&L2g`F=A-AKqhZ]-j\4&X`-c\jfGB]W2<&?68.EC43f:W@CVpl.sq2;%dp&PS\Fk.&o^^#n:%('`Aid!>JI;#I#fJ)`"FAh8Gu$bGSUd/NU^9Qe/J!)rFaWp#]rC-N*A;<%*o-\ar@`'G^Z'iW]<oM5\;'"*%W$),]X7"@_F/K7<&50ihjeS+^N:KcT$"oZe[<Pa)-7=Zcs+jOMMbHj'if(FRL?>ZSomY=p5&&;rX6C:K`7D3>3D9#pQRQ9?r:4-u%QdZXa0f%OqKepsrlpfoFqE8HJFfWfh\E+p+1=ID$$`gC6BKb+YkM+j^=]9E2f;`'"b^GS>Rgl*aq&Oc2DR:,5o+%bOj8nchmflap%GloF3S5Zt#H<DT"87Hj4^&ZgN4#2kFE'.3:?);*Xb(+WXPV8-.Fj2C^jsW7q>L^;3A)Jr[m!juDOb\F4H!2E$TVdp[_(Kt=epC?#%]5i_<(h-PR1$q:ammGU*+*uaqo^ahq*OZ:[2_;"H;kgB^TpHkng&W`;a`](i/hDF7,-E8nD,k[!gD(`O#$LR%?`L'1DHX>8@e^/;%61=Is=NBY5d'8?dArpMT3!aIS*T%^l7NAN#XkaI`j*jttVJC=e,:OcgQBSOa,]*8^qeUqD>_L-1&XJV]gg;<q5@3lIhK%]E=QU]A%K9bamIEO@UL<G:Spip!+h-5o=6>r"dm<t;4M_*b+1`p8S;;55e]2(.j-dKjl@:YdeON'#kSn]:9#LLk6J>M5f2nI'8fOk=,NIenq%.B9rJq\;A<pNXm'<qF=W>cbqNCJJk.6N@>q32(l@!Hk>Sp3*[/jH4c<duH'YOIFap^;DF\OY:<=g\qo>3b.b'>.p%e5#4qpa'>b?%Itb'+"$VsHIa$)fDr-VWTI#ZjG_>A%eo>-h!^>Qik(VkaK-lMrWjWH2N@R#P(*UbY$F`+JrV,pgmKT/5c+_9>hh5nkasg;%X_(F;%\_k3=T#2#]`"H:Yk(g+d7pZ'b<a!.KP\&KX_[eN:gs23i`bK\P\M'HDZD5Ru9a&o+/f*:uQYGV:e\0.:iR"_)H32VgS4c\,0kPBa%Km)n>^:-Acr[%/.1Tr[jC,;tNb>i)dn)/;u]0I_H5OLFHg2.\89RAZl3sZ7PmlBBO^Y:m;g.j#K%l\D*:1iC!])-q'o?JY1/!=b=%OhP%UeTNSZ/ALB"4f^W99sm`lg]tfI=:@"+L;l>8dc=<`Jfe^qg4m_MDO\K_9&Is0s4U:P(aDZi+dga26d/8uQoQ"iKk'7qN!u<&%:>(]#j1IJ+A?fr/bI/GDBdT0R*o3fi=J>c'%G4?*^Y]*/g,3Nr-"Us=C*$%FEO:!B)nYsTblbFOki6@r;q&hI:b\@(cBus\id5;X%r]RXQ/S(8##2+/upb]t0gbK&S-9?j_<ri8[,r/W4BU?pIj=h_n<ZN[/6J^=WIBOhR-FJ$6[LZd+h`e$#F4b<;/nYQ5l[WKWS$HLM%(_)[S%]+H4lh?^;,AKAAp?m+\P3pm2<4](Sco)'_*&\>os7FcX7=LEFE]<T1n*E*c+%He,h7`4NpYs!!7g\+KeU;TZG]hRq/Tt-T%/WZuRS,R.5(:Z1,iVOVb[f'7WJGG<HE4N5NNY3:^eju.3RW"0K`7^gOF@NhpVt([qQ,*_V:*h:/RI`Y+rr]%\biKsFq)<'bqgm[8%DpIdqFFV<CRH;;V3DGV=`Y#Xg6nLj?*G(&K8e<!P<s@m_0\rK8j754=*Lq<o>X$3:K6'2rni=-!SG=%gc`ulq]^+MHl.Z\gjc4uq%S<N35gD(gpq)A0Jfr@M(I=)NY:E9KQ3:l_:#(_ecjdh%^",6hG_=BUA!CjorGm=CkRm(p:I$UI64ZE,kgj=,Bbrn&\iS9?2R6#A[%c?!>f]t'W^F+92k?#7^THV4t.\olk0FRIhmDs,ubr`o`U61<gDPHV<t4;QEl3PdI3Hg^=(_riYE4+5t.FRFA$Wq<Hd49)R!loY:1%+lEV5ar"4h%ICu?*XI0Bbaaj$'i0=o8CMWEca$#X\(OduPJId]kT`=a9&#uFXB"(joK4<=N3/+B#HCK?HK6/kfr)C?=)2AfgcOQm%a$"s?+*q6L'3[-A`Oc`#Zl%eC#u3YQ[0eM`>K^tJRnFg697CRUmVT$bH&1-s$#9VO^DlWgSq<9BDnH`Ca?$?*+UadqFaO`7NG=%3%hoaW!KurnTXhJO$EjsVSqGu@?h.)C*^DKI;Yd`m:!u4Ik^#^NMj*R=VEV/):1A!aIkl9=p,[2:U:Gn8HdqsH8mEN(`gYQgp^T5c5%o=A10aL?E^K93,K?VN&f-+h.q^#h9.^YAR9gS3!^[ob5MZ\I8Mj8>5?pN4)JCp1g*>pEjXU6-@Plbn3n)GMMmLjsO=:pcsqNGCi5%:Upk?RqY"*j$JH*qqWXaWH(^-Q1rg,4Ua4NLL!R?o,W.W76oH!k#FPqU"Jk-4W6.E6$qHX^C73;DA9BT)Xd:6e6>7<b7pH2dA[RN%Gh;Z0qot0.+"S?R3.ZY4p2GM;!o?X"i44ID)`Y'!4jNp:cW^e'])ln"I@Ju0)fa+ROS]Ks*^GI.@CY*:m;h/HpV#0*4hJm@=XJoN%#+"/\N((q[^B,<+L/Q8@ARB:q/T6!]gqLkc?D^nq)('`lI;CR@_)*ruc7niJNqSmr1WDPDC!VLeB@_64Kp_UECE?c0,M1]+.,/.&%*CtEd>O@Ih$J4mD-69AXP+oC9Y[PRU.<5kZIM=q?%gKlbBt0VI^JEhW"6#e<iS>H9?5X5Ghi%-S\ANV1H^OM.0+VjmQU`51f*96D%TCm&Om'[7-0"1_l]c8j.?6I/+rjW2@@Q,dScIa`G+h`ghrRPr@eX\"iJV^48m'aUj7\?*rNrqZ6XQ[6:A71NA[Ym7hRn.?-foSL>%k+7ZkPeo4ufXS3H4Xn\*!"P.flS\'R:4cj\`./7LL_pC8L+eYI(Wc(QAGB^aHl38uL;K:N0F`a9F-,@qX]'Xj"/4_Om-+Ed9E0sI%J&]o$_moP(Fl.s\@"ij3q_jr64UZ-EEsh@$P.iO3eqMj`I[Au&]D+Z!gIGPOa^ZE5jhol]O1G*3T)0X7m:3<-kJh$KjIU@WFX*S`%;IY[@l:"LU/,sij_"/F]p*#X_J,[pg2p_K_E;/A6dsmZdZhs8#$M=RVqLV%^6(u#c:g[%t0.><d'^?&5ou5hd!^1oK$=AP)Q_Eo@%*eb6C2h1GajmQM?J,/7&b<Q!sQ]ln^s'kenn*um?^\Q]L2fG;$IOU<Oh2d&5ndhp1M9k#XF`9P#'QI@fd],5\YON0&]4j#_%O&HR%**:0>^#f:oh7q$\IcN_q[dNX/J)ZOh?2jZ77JJP,iJ6;1rr.DLLMujKhdZnHrfhlX_fm;Qn>*s/cdM>QIm)]J\o`.OQh'l(DdU7>%4b*=jq5]iX?N99Z.rHU%QZoW>]f>rfp=Ik@hjhH0roVbsDsj2ZrF]iQDuT8(`NsK3s6T!>?QB&30)33CYC5khq2mTqnWSFV[o[JX%ID;p:47"-XUY'B`o2ecMkdS3s^O*g:lrkuqH5"km%k`O)P\\fM$0;BXT-=FMj7>QK')"UEdTPs,`gI+fN=/HVEFOnLT(9`u=sd6A%@uug&dnfDD-BZB'@_<^JX#DHQ3OkGp8djm&PUdo"X5$fp/u-'+3Nq5Z'_NZ,2t@,Y,l+<lgdDcm`,5"V;J,`a:\*X"hT3q8#FY<F%EL#FiE"g2;4oE7)dS7O,C&TH84)oeDL2^g6KrLY.,>YYSRfIL#Vfkq;c5gZ9oP2$]'pWs@=hZ'=Wc/'#Q:&WZ-/)r0-Ae0Oe9I0?%=t`KXM<>?L]PM;qG*>@E5i?G'ep%qEFV'FB_--?BX8H"9mT_:eOEZ^8+7J=eG*tIhalgf>At10N,OZh/2^6@#f>H3V?S@D%<9hH0%Qdb#lef*3t)6Y"?gL\`F?\tUbXCk@/.\A%8ho&Xe!/r?h@?hXn-%RXA.@S,U8KNT_2&)WSgIfNCXCCqq$*38hOa).1Vp-4.]P3)L%i?.Un['.LQ'M1\eZ'b5DE.1e"ID7PoLcTE'eLRJO<fB[DV"#TWX5,pN+72ZJ_b=YGUd\VZ&5'PH:$VM^54I`7!j4$jiHgmtV3(j!%UWDH3gZuXDUWLPjF'&1O@SN7E:[l.H.g@<EAa+^PZBeVG,uIobD=1s26jEN<bLf+NTH!F)1<-d>ha\VI"W>ShUKOIlgabD?67.82%bmHaQ6Qk^"I<:\pbRcY1Y7P9"Gs'7,pkD:I7XE,0eg)J;09Ya>Nmju/BMb*")<4\&W)`g6Yc#1I0H47MP#d^BQ9!a5N&pkfZUq#u%e$4nE_QV!("kG$49"H$n3eiE5H`:-=Ul".g]P%g6Xp>&jLt(=<rIDW"F)n*&JW'er'MG2hoO-.fc/g:.AKdUp/#=?,K"+rPgGgS*%c.7'dq&%(G'ZS].<E`8Vb=T#f)%1]f5ZK'BYsm"JnuLuThFX"=]?oLh\5M1oY[a1uIBac&*0eCM&Q]m^22Gf!>-O`fU`$"i788Z]%,!(um\VN#\F=K%H`)`V\oQWZNUe#QK.ZI/O%>h.o<L)kg<$DZ7cY6],_^g/Al/Y:"J5IilMKZ"a3,iMMoZ7WDk'\#a#c00R."P_O%.`"b6"BcN[b3URVU6k[U+TBg\j;Z$4Pk38.X#.=K.^eUlO_(D0&Lgk3V,tOb$!"U?@chqMgXjTU9>=*%'TJ1AV7%dqV-G/3.)YHW%W5AWh&]3hcOOCPHQ08M#-:(O@TsG-5B`tN#]Wt(0+TgY6HBfhp7)u(pS"+j;;\\p!3):;<W6BqJLVCYT)8eUG3&Z+>81On69P56i%73<*18<G1Tm#bD&+H^TKJLo\&2R#:eMseCZ!g\CpQcQ6[0Kg#@h=03YAnHB_+4l#n,MlTf?CG"J??nlW1+/Xke?5$U/b^ddKMqUG%0kP!s'QcUWL"RMMTXRAEl%RQlC*Whl45f9E,Cu#8<<X#c]crU/CJtD[&A,V`$9F3p<Qo:TEf@]Y)`u^Y8l\hF4%3I#A(8qCUI9E*%`W3c":%BQH1DqP'*A7a_+=13mIi/M`"L9S\U98g+aikN9fJ0"em3<sk(P+D7_f1`:<gY4?B)c&HG(iKj^$&nr<-`IS.cOW<PXu8X%-@#iA;A0A&:9ub'[*l9?:L6.np;d6"7qIfJf4AeUGuUQWYH*X*)4:e8TL$/H6ZkXMb+g`\,o."jm>=C[51B7k;q.PFakP!>?2nSC%\1EOF<3e,elODK'6n3-C][p_QX0kL8g)QG;[F@U-MS-['TnpgEd3/mmX<6HHagYoi5:.Sg#m!Kb-.sMY*sW[i?65/6Oce@BTr8WA%DRg^(Q!ill;nEtEQ'E"'Xf\o@4h4$g-US:!k[E+gp8okcVJ8Pg=.^mH*C_rQq#D@65##!8m#%H/,GkpbqIoRmL@G8C:0/9a5-"h[%1ea<><kV?/CZ_di``I4UL9iFnFs3`LXI0ruoTPhIWi/2IEG6.GIt^de:LBqc;Xu[*;CR]P25p=JZ9%.OJe=-f@Spf&2fYkZ$.@9X%=XXkX*RBE8/iN<*<jTTXU6][r6a!MMhr&"QTcqbT-o+&sb>OAtl$S(*<o7SJL)'*3OS)f-U6O1FESehZp9=4b`tW#Z@:mV8VTg`N%>LY][=ZT+OH9"cm,YH7+<0g.]EF_m+$>9Ff,f[-S)MKr3EE9mo<-6""fFs*TO31$;VFEFs%'N-dg8O$6$5o"aKb?aPh\?W^4@(5L%]_`qS/tHZnZ'JqS8^FE%P+A%c?X)P+"KeApiCLf0WNq7VT;@5*,d*4=^*Mm-c-)5@M8kk1Ec,u$Uq%Bi2<EfZPV-cKgJMc:04RU#%U,a[-Te)A2H?38c0Dqiuiae3@QpS<HBW<=PN1Wbk#p@r%YCcR<6QI0UgP'9#hs@]6c%?%q3W8%(SR'A4^$9U?LuMXod*rVXQpVE!%=M0b(5aB&*:0I*1;l[9tN+XV5/@SKB->R<dU!N3KCW^fA9Jh%'X@O\3NM#.WZp"MZc/D(e+OBXi2!DNC93"Q&=I^QT@cqQ<B=pL)%ccX35hAJ29H=Mte@J,OA;f1I7(C#!u1;%=GLd8F_[D7fNkc*URJ%Udtr;;o6"]HH]IrY8,YMQp@rpl,*TASJ\5(3:fGJAY#jpB>h%!=UJu"Us'RK1DA(<kLgW!(0dO?H/b!Nl64g1_')UfRZk[dML#*?#a)Xfu+72O%[M[K(=Ma?82#Img@ZkoV&0cPbVqFOZ=mkpa=R1%'e:+p#akj*V)N-^1&V0uq[D6;WG*X*Yj*'M0u>pWeP:^egK'U+^[ZBRj+$mZcZPuhmGYXGWtK81-.7s10mTfF[0"cV&KWcTPpT@8%#]@M'[Z77ZHj/4Eb+B0C:(LVMV+kaCC65+7D/GO!X#eN0n_c1PJuH[799HCN\.aV($j'OK:^p]?aZ'I>+ten,-R'+/'a?sT7g\;B%5uX4c+ulfl*mNYc%@TT,j1)8][c#]H9u*T&k"jp)NRMEq84-t&LGYB$W6&@4N#N]_n.#d@0"d!5M70OadXor_!mMYs!!U*KF-OQ3%&TaUrk"G.Hj]:?Do1D+Y&-2g"QA;02moJOK)a?sOT8l]OeO\6:m"2gZhsq91UqiLreOmh,Oq,[p3E"\,Fk6b=LW@EYk0DXA5#H,;%eO<r>iW1ac65dk6."A=tYT04nC]uoaH>eV]:So+4N$.T:COgWQ1\'Hf2&IH<mV*ScG`+.tFW,?-M<ub:%3N(\'SO:k-R7k#<uI,E%O[10S3\1lj%"ZiW"TT0rDhg_sR7IXG&-u1uXUT[fU,.kUJ0Q"EYtcEJK1+K:=iY)>7jN^g%_"NW8V6^-Ul1udQ8Zjlar3ql[^Go"%ScDl.C9@R-'>lc.D,o[l!>To+Y/,,lc.Eg<g]l<c@[dG15<pE6;P%%LK8K^)P:\$\P?@I[bg'\\d9rr(G!.1HXOqJ84D&sp9a4NG%LjpsRC%d3un8MUMT($3kb5*LSL)u!XKS277?C@Hon,uUWdQ]RX!c/N@0F+=jrT6@#;qe<"(tB?gYW7_?ko9GAR67!qSGTNC4D27k%LaQ$\#cWA\=Rt/%U:n)[BQK)?+D)mQip<=X)\iDX6uQY5-I)ZaP>3s0$"fe\:YnGT&bVDqnSg*k/^%SY8Leu-47WcYkUN3u:!FMh%1@o&ebG9c]6_nE0W)82m`,#"O1(kF^h53mJ50YWr'de8VDF.(=1%E4=D';ckdd)T/=Iaqr0r5h8VJ%Q3lOXV?UVpThMkmLkV'Lbj%(m.pT@V;o03l3Nj;d^u12(-DX-uk9b]%RBTV.)lI"K`sG_5oJ<J$>4]WQd\BkXUC[[gToKROM9F7_F4Nj%C^I4O;#%:=,/*2Hg0=%@mZ\uRCWA^iTnVa`Jg,.(/73<'sB)6YWWU,]BEHo/I+gA-/q19=NCrK0<PF%NW,oN,Nr*;dUo_"iAa;oY2*"h(J"EEd=geP3bZ`<%d$[/eWbMd01#eQ]/iY\VqQ#H0')dAJ"!p,V"jn4aIhh?#DmZOr,pt)3',/k-]L#C:7liPbLIAA'3Y>j?rKJ9u&a5LA'Z3N!ct0Je%fe&pg(!":qesc9^OuJ-s._FV;+TXh/OA$@gr9P.tPPM9Q[U/.!%m55,q-m2YE-N&J&[AAD,p"-7M0P7G[6thRYDKF_DN^t;l+k*c%77\VXhV?B"&b1*[3Qk6!'N:=O/1h#k/mP.PNE=(>&e&d^XKq7[4j*V1==jY=+Hul,'4'nOPe+,M,oXdM_BbtY;/)om#Se]rfO*b:%gTiY^Jf1(e;aTXKD-'<'ocV8):3.-S7k6qH7Xs'.,u[(c1"mia3$>Z!S37LgL?OUj6eD*JrUj_3Lj,KY1Z<\&aj])bQqf,"&.-V&%pfg1G/suG7P`O`XhQ:6"LkI8)'f`);rmE"u@U`1Ah9M5;UOZTPD29B`88MWsLAEsYH"lR)7KCI)DSH!X)&_B'%1)XCnpjT[2*'(D%#=KJgl:/H"NZLG_T^Hbo'*(n`@9B"-5`"MPDZT`**[</d`]MbOM?jp5L0U/cB9qO`1h/3\&ILp9b?O58Jl(Ji:ccrn0c.d=!Wc.%%'f'T@%-4]D&ufs)/,k8>M>X;0.]C/(%g!dlO_a>-eY7L.,t.<T6<#f/\.\R*0N:2TZ,@;<@=<M;lj)1+PYh%0>'D[TH"Ae8+#D3!%8\dkMX<MA3#cdu60V*?WMpC=*nqA,-(..*(&MAUF8ssI\FJ]+F<'a#Y5\/dg%@E!did)cVQY2gbe9S9P"s-ul%/glVAV0NXN@[Cc%N2pHB6?Y2;8u\Qk=C)!*!4.h!Od!)pAl7pAX&u8D@NR?u+V7kT?NrqDF%+)$p9*#=!tYI]Q^?fErq?cl^lUl2r"1.^.n3<l2R9S'%!!-VW!Jm[Nk2IVjRpa,Z\m$AXLa=_T*UQJO?l_L7A^t9H:o,=cXqp5Yn@g\l%&bc)GsE,>>R8n-GAC2Ee*(0MMgL#o.eWO[i#NSM%+H7No:[X5K/hB'rLasj=`u5XgQ:@/M17K,u9=,RGoO>MV8VeP56Q/oOJm[`:KEY:\>6\1L<qr-BTcp.&s$4du0r,XG#4W/kKJX\Y%/s"V;WPU?I]W[9J9_>+"AEZuIO/I0jeJ8FFBeZh\;)(JWO?+bN80[QD%^mXo8d21-.knYgc3ol8"U9AfJ.*S>!CQ6fc/,[s"eh$X%+J1/ed2YS%BWYt'(XB9D"Lc*sZA)tEmXVLC0e),V#S19gm;I\)4MmJgI2KU![m`[20_$j+^G@*;/@<2107K>uSV.7qk3S2Nr"g`]%D--"=a?>Q9'`tL,$.(;-0P)(8]+XW9g3"0#f-e@fPp++S.GplJ)]fX)/TgpY9(Yd;@c!_B$)YpkM[//83SX+EM!%-D1daBFPl[&9%b-S7^AQ'gq`Z:Udo-WMb_7Ik--fR8qd1M-J'SJ*8"hui4,siIOdr@&uTVXMa"a5i`0XXHje<.Rc7Y\mZJG.0Tb;C"eO/&Hf@7!SU%-]E6J-E8^B`]rHn$<?rV?p[="7[7sq7P/"qQAFcN&je4`1,+2P[9X*u*$iNJZ&Bpa+m,#lN/58Hf<'j9iQ$b(1dni]D:'peRPW?t%E0@;DSk09JYM_"=WI-E]K>&W)YA%FgOMH4kZU_;gKN/2V2E5:b+YSq#29i4J4\='g/"An-rCtuZ7P6Kq0U`*FC(W.u/K_f?:bMnj%>',mhH)%9OZ43pZ<HL3[Fu4k]/]u+i\^(NgRSu&C1b]#?YW1SAFS>gE);RD'>\:O^%*17-AG,$kp6.LBFN*#B":+?;TN'WW#W!Wk%))5*P<e\g;fcb>#'TEoC7\hRJ#]"Tp`km]`=l\cY\,M4P,IeR-Q2lbTHcs3]F>fo5Nj7Ge)lTtLlF)XZeV?j2nF^[!gD:?5,gqX-%cY?boTBQC338?LB_J72uEeo<rD3ihsY^gD0Gt6pa,#\J7#1>H)oOC4GdMi>]1DYe"04\CF-mNgriusAE8MAM3f/QL2*"@[r>d[rE%ZO7AS[0/?h[^]6fh)f6:%9s1K<74^`036esE6gWK6NOBh)($e::]o,\eh+1$`+"]gcgb>/$(B_j]Xl=WNG&SO+6i;>*htSS^6og_%6'D>3'S;ZI.kH.3aFrt7$h's+,"L)KhNI_kJE+Ur%+a4UbiU=BA7adJ)f(C46%NFR3qEGar^F.G@1AmWODb9J0d7C43?-=]X/AC%%W^jG7JB8EjO'\YZ\6+o)g!Nco9]I9B%8&ZJYd)6N&caq^#7(K^!*hE/O"`g7+r<C:-Xh8$@nMQM@rjb'M1OXY6OOgBno4<lR9m3=%6oA"DYRj_",&W\-\!1E]Gkk`!X5P4aTH)![StZfrfII)S?k0B>B_4t\5_F?>67`['\Lu%IR>>Z%oZ$*%JJZkdW=+He_FN+/ToAB\%P'WIFGb):S$4+hj;/iW^?:^clb[8J\eIiaQYA2==U6@kH?^Cj*p0Dk\nGsMX02/s9`>p&"Z#h)m1fjZ31&ETXb4X7h&XqGhDLU[U%QB&sD-=+l<0GZ2Yq!JlJ!;rqV7"Sj1*Hd+^Y@KB=Vku7b7^=7.(:''Qh5JAM`>FUn,`#GdOQ#,3*rutm,9'ZNbU27VbX"VEVDF$`%N_I:p1tmtH^5btef$r!]LN>WZlskoGf9\*%'L\Be;b``8$6UL`!3KPc0]L4U^dG^q+=mMtR@1$.?;QJFN`Z=P!Sno$&.bh\b*Xa.%I1[#a#dd)D3Ae7?kh7BK.sao6?k*[?XI<-5,=8bgBLMO\1XiAJGbD'\qSk%N3>-M><o^7!?T7!GBd=-@S9118Bo-O-E./eB"6WW&%HRSmEqP*BmksV]U5a,8\k0Btu.!SV#RZMJ;m;"bHU*,ErDr7cE3R)3Q0STmrM*f',D?E`LWtdZ+R0FOP(GN;QfI)K-XGXts]iS1:%],N=P1.77OYgV6/D>%R7]`$P*i+]>]7i#bW4Hak+)qJYM,gD,b2!iaE4C+=iYW9L4;^fj=U>gl[TFW<MVqHqc<;.4`+nM'$%b7(4%_apf=JCsL5;pS5@&u=Hi7gr`#1*LVY9TQ92F[CC!ZKI>!iEJ8<O;<s8B-_IZ"o1YSe-j`uj?SAs-C^#`k,f(K2UQmDR`,DNf<&3%%;i;Jc+>?b![,F"d3uUOU"%bg]!.\lcC1H?#!/13j?>X7CK'7Ue8r1d?)T,0tOe$/<A;_gY3#u\)U+u]c1"7<p!(2:g&O6R"Vob!Y%T6jL0LiW+Q$SZ7A4jqh\9/p>ic.@].Ba-/p.UZA_h)'UJHG?b<h+C,WV8e5oO;,q?N2GYINoaXL?E\<:@S/*c3X0o+X-..r2$_)\%;'1m]I^[,XK\CVj,-::SOnHg=0.$ih9#]3iRGJI2h&NYIZ4CSE/Eq0V4c\CnR[8`1%ci1[DX$n9j;PPO<*:d."N"\Kik%'V&ig<?%2>Z#2[e<6YHK9tWJcp@=OdK+t.ocZ'Il03IWu4q=j<I90b+#JuE.qHVXi7*nkg^m2$T/'DB%[>u<PSqiIJO.4q)rCUBL,a+i[<ab%aGG+(M&3ZXQ?V'[5&)6n?ATtW<>/6-3M*553A%C)^jnEI0Nka$`UQZ;a?[-V\t'B4bA*:dBg#ntpM,nPFK:'W0cFiS"end'$I<<Y%QOuHcNkq\K%V"Q+j3o6+0bRRT?20DdcOmBUAhC'Y(f_I^2'ZQ3!4?8/"Zgl.1;-"/)-5G<TP4NEck*SaRF*@^,$[m=\3\Kgs%&hV%j*P<*^_-n@0uNBJSt^k$>oL`XV5sSr>U#r:f9ec.j+2s5^_.8i0]p*U#1S\JlZkoQ=rT/0>&d"Y4S59>23#C8N=b8%7!52n='bOL%>">;6%35[p=,fo)&Nhp48m<2oco$1(9sN*H9%<H7@!*e]JTgMn$`IZ<"\XNeqI\dC;I:Mpjl^I%`t=mR^!SHhB9fnKXs<opF*NS_%&jaSD4qZds<j<rG;!2m8G;(Po"63./QYH\7L$t[3C!ClJdipm]<Jd$^Gq;R>D9W4kR2WX.W$LrDiW"2)LBpd4T#jZ(@+1^pj/,Hq%imh;Ke]UAqLXKXF1KKKeN+aP]j[t$&0U4C.NC8gXRCrqIa9*97`$^OCb/5fl0c?469T4_BLaOm7&E-9:(Ecl>b^6@FZ9aBY3NYJQ%j)=&a,_a5]O]dHu6jtIhTL+gN<(:"E)MJY)(NeJIdK$2n.(ln+%TWY0=0;lK0l<`L-WK:s#&/W$5pFe&o.s=SE^gZeR\R`+a/d1p%>_&P/Y@$%rZ$HdU0V\&2Ll=$M!"^+;'er?(&a.1sAE5,SC[e8g90FM^*MWp?<Zd*ERXg>!!8#.gn1ekokTIc1K5QDg9hEZ,@QNk5%(CA$q!g?$V.l@I^XGaWtj,"1ZBY$c8ka_)Rd;"cY)PRB"*>0(7;SmMt]eXBidmo<S5U*cY"#l\?NdCeJo#Q<_CO`4o)WGUC#HL8u%j?ftiP]$U=d>X9*0ktB<-ne,I0R6On\,ukmoKt;>N0$6!=[2+)\0+<ui_ZE!mqm<eTW_$Mknu'D-Dp6`0J8</6t085juF\Jjpm0k%Wt<Qu"EMWfEA7_T'1Dr?_4UA(drP34=+!Q;bVA@[WI`=iM1G]rE92dE0t,^<UdQIk,CZ(Q<AIK_<ir'YOU:Km;8NGh]s&&gL9NA=%'FhGAfokm4WKY1l8BF]k1g7hX8Mj+PUBHR?;)QiSLBYC\9mRk]`K2=0@BebuHkF<G$EQZg`e8KA<AUHX<anIO3T+%&JSAYV0N$S;%X4PfN4U](oF/b.S>H&`[2Eot`>ee;>PW$)^jV\Z<-`@G?MBq&MTb=6'"L%2kl-L'NW0ZEFC%a%,K^NB^"TSglN1u^\OK`/=+`"SA%!uM&-iZR$dL_3Xmf'I.;4_dnL((5jVk7/K4XQQiPLT+^4O--HK`IGBMo2D\)DBiGdiD&U;"_mO2U>D%+6dW9>N<=/g(*B;X:jY`#%6%fY,A;j:DAQeAX<3r0k%egA-)D\1;E^D.`^-IRT7%htrQ,rm4gquTV.t).dD+V5P3XN;0oV)i8U)>9@-Coj"bj.qkGB-4t)\$[G%*1lT]6HJMt&hWJXSfJdeVY(N,MbRt1+K;2[rTlCqa>]tcHW@BP%t/4s'_[`ifbFhE!Vf?!8<bDO:*fU2X9ih\n8m;![1G3Z.6upd%LKLm:*:=OnmPV6hl8l#41oo52jpRu#:6pA>Cm^9A:l1!6b"n74A2WV:(q^FR6>HRa)**<Q\H=jO'i!heUD0MR\gTZ$Ca+P9VEqN\%TGU5&-3VeX,G3nAe)`]%$,VTSGMji1%uM01TGa.((ie])2ikKW_dMRTG__k'OXr+,TYQ/66Q%_9TJD3*:`ohoOK^RT6commfT[Rk%!-ruD-4L(mR:i`R4<7N+<=GPdG]=i=c@DrsNsBULQQTt=D*>*M>_cl'@tL"%9d4iZS@L$TdC-Je=LL(g%:Y_skIaiZ^^M_ne*^`]%ZaN=P=MeIL<HGa=Q%c6@!#U[K#=3HDs123-bms4uTf55HY%F!*6m0"4AY"Kp!B,pYSf238^Kd9/)e_Vsg"aA=&W>X/76A;m<6(7l%/D-SSR:TP"*mmFA+eo.j>VoY>pE>gR54+OLKVE$L.Y,VJ`Y$2^S'Lla=8Uu7CBVngH8KH3qT>%Q.V1lS%%hmB4>M\]n-@H=ZR%E5%j:#go>fd:,TN`o9MF"2o1Ma:,?<r,>"[A\S)3>\l0jJ%H^CL/Mi<NXh;$>LW`aSBNa+L;9"@`O6@"/r7g`[dA_f]ol_WDQV76WB*%h@WkceVETYp8,bDUT+SjePSSf(4G83B*S=`MP_M)'k&_]-70HXJ4*Hpdfp.7p,+6RV$UgPf(<B3'7+3n9VY7dSQF$76Nnr92S9jB%HI!5?DBlQ^6!HnE-0+$Br?-`7KqY0!QBXC\"q%\`ZE7d7NTLm_JO7d1OO^`laf#ARmO$+_(`J*g_6cSH)a_/$)=1+;cdMu)n?m#`%#*KZp68obpT>l+ib#mW]JT1/[Hq6*#Mj:YLAn"2t`\-rhY6[s;\pgaK<U?=o_IMQWb8M.MKN&(;VV4iT%]O\SKsB5JbSh;d#$78H%KVEY&eHk1J#ptbW]N]:h[!C2Ls.4GH;LLj%HHeonCc#7enGXS.,8J[31ttif7#[7>M3%oEQtm7H/IN2p4l+\dDlW*<fEBQ3KZ,f/%RTZpj"+$&B[P>qU7m%3dPI]$o[=Dp5ki>g26j1\!Ic/5\'tYlMJ]S2oYY6-<68QG"D25k&c5Ml@*YP#"iiLK5`.B_S=3]YhkTK+0%&502'`k=fKc+l04T8F%9W(c?e_>h_?NtLR^4mWS>TW7ep[p2;>0Q1X"UN,5q,7so/bF!R!a#!!e4G.4T&eRdJ4p\&@n9XnqT<fgc%7tEkn7ZZ?f$5_'mJ,&.b:S,?!k4n6=5CN.g+3=ua=0H!0pq>PQqA$bppAM<FDk;CSNBC\EgiiJg0+NL+5F7/t5p'-(L2q$DOBC!;%s,Or]mk-?bJp#]\g5'b2VKM4$,/d?f)36n!kq;5/!;fheQ^.c1Eog#W:l>TKBc>=6A;#sp.%EU5T[V,5#Eo:uKh,C?2]7i<BC5@$%a9?&p7\Q-tkQdUtqtVV2KBe$T%&_KbKO[m<M:aPk<lTbpQ\-q670:n0.SJ2I7?0)HP4g#c49Tq&crHce1<_-lJ*MGM)miU4ch=^M%l4k(to<S?j85ifb-FA'F3OG`QkPAITc%M_o]<#`b,_]+O@A]+'quF1s2&d<;UJ,Vh&PG>lQAOS%c3ihDA#:HLW@'J(pemOo+4[!9%8gO+^U_+4LTQ*h(^t^YD?GiLh7[-*]9G*s'$qZGLd:9TG"B)+87)^*b,I,%T(;aZk?mrEp7P(i,]nJVJR5JA]i>5$%p*P1m=?%GN%fTA]o'S<8(TFkdb&-*#*=)UWsQk'$C1Lu;0<,Z^gn0\ZlJE$_!,'70\/JODERO-S7&n,Yad]4S*_PA:`&t>8\7]V8T$cm`^E<)II%[F5j.E\Q"*-jg:F29bl/A#"4:#pL*&[+JMl%B5Y(:&Luq/Ag`RIR+<A6k5slN\PJu7TE:h_#Ps(,csnHkW,]O"\;#`+)))k/96$=%#Z)[q;!4kIGAiok_CK]7Op(8<@2UC#_mHM6Fn0O<P@o`Yg@Zu\#C;[g0ZjKf_:gtd,pD"^&O?PhR.]Uk1tLpr8?dOT#[jMZOoUZq%DmQm4eH*Ca-cp6LLD>c)\F(V./LA+LV+pRDR1@5<,P=j;N#YgEBsMfHn4M2Q6MGB\+ah4:b'Ti%Cm,!">Nge1UDW)ORuk+Z7]#/@%%]*h8AL35^YO%sNe\"-A**PG0AjrW^Ks[cu?]53J9"8Dbq4W!L,DYTN*K)&?H<@6`--ZM+WG00^,T3ZikW6:I!?dn"$kEfTRM-^3%ELn?%9oKE95:hM!bq4HqnFt!PL`GinLPeAW,YO3IMHs$k'eO(:rE5g.(qm,#ePUr)L*NrrP(oibFJu!K@56S982OV_=IuBr$&t6N%GI,O^EJD9Qa/Fjc*/k?LQRlf9@7h%S%d17N6)P2T).k`ND^UqN$>JFV+N"A(PKXSoB-R-UAZ_&uWW9RgJ.pR.X>>^51,I(Q8LEOR%%\Oe'63:2g**/&n1'oImA&pXgfI*tthLMn9o1GKLeHM`YXCsFiHK%R@OUfgV'Wo%Qr+n5>EKC:!W*S>FqGUo`6fW]J$,L?^*5<*,%@Beu"=tZ+*,#Si_(76hG)1Nt$%4NA)L<C,n8oJbXNA47`K',O`$fhUrSJsTFfN]0j7HC18<^A"oHdnNOd$$E(E$.cr%3`7JR#-iV%@Mk^_e8qq"2*V\H+aG*Iltt8s,dR"bU]H0R=[E\,PQSJL3VJ=2#W!>#RI*!%K/sl(YjcA$f;g3WnLD89W/&76Zbq$#J,u<ed4^]O%dfiPEpLE2Z8/*Oe76$H3@cq"un0EmVDhJB1"Oq\;["U(EQks$&MDUjU\3Qa!H/j4+Obip#e@Hj=#c\af4^Ks-"H5h?Q&6a3fuiIZ%bFk\%;qC%HB/J\iZOGH.jp5K:d0#Xg#\9*c3IK\bQ3)kp(`e96;U+qC=HEl!N)`q$d")d*bXG5@!c4oN%%nWVPkf#Dc"8dOP@3pe%7mT/_8iTHh]?C!CC>h/!"X'"g;($_qW3AP)'U)S\l+A8J%PVk^8>?/rnl[2aj"_=^a3sd],)`0-pI%OY9OE`I;*ZuCXrNN;KrpFM%hn#seHV##Mkc953)cX4&o>.]_1dl&9e#HbN5"Sm!b,SF'=F4T?PV-_b9c:SH&uc(9CdR:i'I+h+%s8/h=BKsZ!,D]h'GBd?MOIA=%!u`=cA/n<Ad0Qn![W>V3&"4Bg`'=Pns,M\fReTIu3*6bi%kHsmGTe5IH2'%\]GgV:!!H[pn^:+ElChNtL6Sj%XW5%u,7R`]C/?m5%WtHPSnIZN&"&Vi>/n__t/6rT$/n%4iAeMVA*mo"/&R_S46^0EE&=c7D5V9[DBh-C3LTM,o1*T$E&KO63&db"X$)%"S8F/f.PH:uB%-j$>2=*T0(bBtQg6:<he-O#eReJqHlJ-68q+pADLKF5p3GI%Dn8]J/BG6lNiM&cI[SDs]-mM2JFZ=PS0@EVKdF'+puP%Jt?I:*C5%n5NpIWu::]bIj3gLHt"4%+V:j3X"k);2S@oX(f"WfF(NY1U*W__1iOh]."\%-KARtk`@kk5)P"ObZBI!"kYkNp*<3^i4"<mdZW^C%nds(=WY7qHQ<@XNOf7&G4(nDlOMs_TGqm$dbS"#gR)%UIA]md(i\dp'!&\d`L4K2rdMi'>*V(bqbc9`48OELCT*BK@jlO-+OQr&%%<P48L:Ke:M=H5Qe:=bNr2.P<HLn;C9*k-n)GmWL70#-gq2W2>FD:^.Jr]o!O6YK>g2H'CEFp4R>38U&-/qZbj9/Xde&6K\JL$P4K%&ul.0)DuZRWYT<3P,/XV=FnIC!_uq8l@Tg;HVhG]Z5ZVLZg`Z\&-L<L=9</$eMHD\o]m>VA-*i$jX=R2AO)oaBY8lia+PcM-W%mm%>+0623WV@9@?5b+7M^lZK8D5l8Rpq*EgU]uU+&paHD\3U>$Ejd:Z.HTl#BTR(F\cXe`&G>.Tf&j6*qK\#GeGr@8U\31<$1G^/0@Z%N,Q%#.9Hn,?Ki=Z+9NH:biR(N5q',"RVX#'QY=iK0Ffl!@gT2`10u,Spm]sjX'oAND-B83:K1(n#acs6M0DAt=uat^7Y(@+:/N44%#[2C2rH'/aP]UldB<)Z@'R%/;*"Q\49Y`,s*!;-G(p3s(MIIj/$/0^ZMAdU.Jm/u`f4lkBF^%Hjn_QY@[A(W^RYnu9X/;j*]N8sm%Ajq$Br_,(kZ4=oPl`H`>%X<l?V?X\/miiRm?t<@iXBI3]&fiJs.;G)bchCGo)etS<((j)7lE$gtYjaf>UC-=$3[B8#A;%4-Sk!NH%<a\f>Z,3Beh*K3EIZc-&T+/>?b(P[b86(l<L`@N`dru]l86NJ3Hm$50@FAHSI<%*L/aM[kb/VjQM."kc9U>CbZ=k?t<BMBZ'1pa0%&4hW,WM'>6*j="^Tcm6t>HHJG33'E371Um3iKDU*crMA";PH`b,D8l][?*3LZ^**dFQX2N8uq+6isCS\U:Q@qM3*Z&gJbf,BT"?7%"J46SRS2L:_GYSgU"A\4&n@WZXNt3i1D6#U8n\>Re(X%0lGcg0.5Q#f/Zn5AA:BGK_@u\HhdTQr$,9YD&>cJ,-`7kMQ#IS"h2Eom%#r<?&ViK10>.*8m\-KRg0O<m1Z2t(FlouA<7n-lW=[U=O:R65+5=5^F+<TqGWh54O3+7Zb9$l^SKJWg^)d26UXKpcXIOb[W4/.;u%7Efk*OApWn'!d\5cmN8+/h#sWkGDbsR51q,F\u-K1[AiBaopcGk]-`mV4/-kEN4>3;jj[5NM%r@"TGeH8&W6j9fa(&aA[u+WoJVs%@V<#!^97Q4FTHdJ'K>UjD\8X2?4eFm1ne*PdCPL\WoUO!VcK_^6S]&oCO7&rg/L^Lri=TM0qU'H$Se];Z3ES4fi8sND-[7o3P[%@%W]KFd7]6KE8^%s$@8+Y"$gIFM2(P.M#4Bf`:R]rOo4><q#mkboU]eVrHD/q'A>Mo;6@b^7C]?r#C\7"i(Mbqu&r;@R1:-ZVm7HmL%na;Z*mPMIGJP2ci,[[dQ=[6W*5cncBr_I^/-A\hLcunE!0FcU8b*>HnTMs.5?>+uSdPXDf:l&@u>Giu<NI')"%c5<Cik4!e?H]/o%"`#qWAf"--[*]PP_JF40j8OZ/SD!;2(G#-ml,0anN3@ak:<?\2``f<iTd]TXOc^R1)djTGW/\e(ZEF^ENm[+X(Yd(rJCV's9UY>Y%CTMd":'6;<NeUdcDYaC0RG](,=b&oWB.p;XBK/>AM?RpL%4R8UMk35`V_GE&6mTL!q.eF0G)gnAX4#%_b_os?`imV2`Y]r$_Y"o0%*BFCb`e>=mG"u0Pl-un>kmeZ6@It0G(9&4A&K(=UQlr1G4(k4#aZG;-MiA&mab2T-rL9qgYbMpkBL[igG1I5uFl+&=h+%5O:jXW$%ZBCm52-W.nE2YY0br]raN+c6$G&b;o!2.bL;oQeR#Zie=PT3]*;qD*k+[[csOKe[GW<p)KJqKj(!QbYm5[r:O)1W\P?iXZV4@die%'O?R8<!7"O\G!]dAIgSXP[U,]l,.#3!"WS9.Ld9"oL<R8!f95=kD;Ga->*gO:+Xg!`PALnTI3N`:t/j]5@=rDWoKIQKjH0[RMudQ%@dE2+]$@CeW3HB"cpUXgi;I3j@+FHFG(JY^K<5[X6#3.rqTqrKW"@m$>h.=(@:cJt@VeN2gp^?m,q+_S6irgMZ&PDu18MtA-<lI'%#IYgZCr,5!S=UN1-0-n+`lW#Lak5i#1<,4:5Y`BMF/IKFf+Rgh5]!MMrG<IB.q"?e4i:M5!/l;+Zi_X5Z\!h1=u8ObA#%HY+KS@L%k!^jYOBTk4DmhY4Y$Eee.5lUR5.!st>165/R<fBSO>%[m_#;uo>bguoEZ6tZ_+JU2W)r@WD;b8Rg9i/L,p<f2B.kFYc&,sfrr?fY%d6M;3EhL"T*sFE!_>(hXQNfOEeWT#N-BlBQRfhe""'WNuY8IOs?9h=T,=rD.q9P]2""gG@>(fPrFl/TB(R%V[jpgJ'rAhAFL"#0\%dY2-EWBEACm/ce^jsduD,m.lhHbp:>i(=p"e<eT`',kSUk+p9=]35YdYI7</<V%BD[nq:j'5<uQWa?0><[S0$(]!oo+8I5Wk?fD,%#8';&O-rX%B%te3;b=kG;IsB<deGJRJgVmZ<mRK_[hD=LUUV=,dL9TN[&9#jhFJ98:*U2`+;uPs7ClJt3&?CJ(>-3qN?#MbH56,n%d`@9s0XV3i/t^>,+H9>YSJ)Zf2#-DN\a)>.oXZbIYC"E*L&]$0(laGfcO@g,:]&B'$)>P1FM;G$CU*45dR>Bk:M=[DMoKrS]]s=\%TO0rTE(:]"i&I#\\>!C\FfU+p"M:DEAXo`oiCsKCs.(SW0ETFsAtnL*Gn6Gn3]5*gm535_nA&$bZU?%]Dm^Q*-:BWnPYhYFLuo1*%amU[QM*8+[bo!1C/;hC5:(Y[?dcgB-d=f)%QYQHF+M5RD4m8SB+W^=<d"T(_\W%XK\N8MDAk*C!\=3ea3MV?6],e4-#<ao"MAUHl%d6iONJFjkQ*?+d:Kh=-]1`XYKM9oM]\Ch_1Ti4<gZSZF^M&7/12-@g%0=:@72X&q0Tc&uIUH#SH_cNKWhasL\l%.%9KI.RT8pa1o%<]$U7.&"ID#h4#O6DJ89a#t)&UNIc$i&`#;fUH^'SrF7!jA!a]]^\:/ZS#T46>5j<d/`#86?BUg7!](]2#@:]nfWUW,SM?.8pt>m%/kR[k"^K(?bUpP2Yr"1%,@?#'R,]agO@?WU6>r$T'3_66`\UM+hMQ2Y-\Wo/'>3BH.5[i(.GJ"!=f[Ufs'UO-2&%J9GHB/EJltFo%=eWsd`'&HZ<bU;GXHnh\RS*Yh@ll8!H((rBdnC-D'9LnoSJIYU?SO^WdmCsHAI@29$;KAZB$PU$BJL'[0tu+'6_[embd>^s5F&G+%=J70O[i$VO2p>`Nm7[irE-3F!1R8<1bp..U`sU'r/+.f4=eV8AaA$S6.l>*o%*n9CTcFNSgdVV[JYp8+;J>X8]'_S%<]@*KjE_`?%crc'f]R(uZ-GBOfM*VJC0TLGF7LDlfXB5r)+GGQu#KPNUKQc-Q".HF"63C%/"4`DH)XE6'6"bn+7#TGS.l8MT[QUr`478mIS@u6q%,>,jORN3n8Jhh(E(b7F7#8r[[<bT_kh/bo0P,Qqg32&M"pu7kXRN+3?Z)UI%KJ=H,.&!o%XlR0d.A9U)T1Jk1.A<jD@%r<TM.%rf%'3_65h`.==HZ`(sI3t*6M%a(MNS(OV6>u>M)5-XY-c+9Z(df2nY/R3nR1br?bC+t',r@u,Uljl*cm3j0DU/UUEi1#EN6km&"Pq''%%?Qd]4$,oF!*kCHG=H8=@N+OrN6jP^EY$3Y&_aQ&XSRng)Sg)QH-'HI-FKdm6r/cgR&.eVD2ch`cW:L<csh!g1DA&ud.%%!N4DkR%6__dkSJ'Y=&tn>L,r@X'Wf[OL&t6bFjOonLU$8&/Q)@PIX/)&@&ph01VM(g6`JiDD#u)$Wh0@?rTugY2rf*<Y)GRE)m2.-+1\u\8%`"#CQDX47n3CX>B8/u!j7L9P#'Vj6N.&!nH.$nD@KLS`u9fAOjTcqqlDPr0MH0"HO8n]bDb.G2]6=UU3iuj"UH:FM2+Z+oUe%KAq%:F.jBD@f.@hm2*/0,kiOc\0[+fO<'H-\TM)Wrm\qKEeEN6@bU<RLGFW[Z(jP!OrP]ALE/6gd#nTK<D6mS22*@r+`#^FY[X'Q8P#F%"jO,+d%a>Ub9^rFZSOl`YA=<3#Wamji0\b^3M\t_1sjm[+M'i?SU5PObQ48c)8b\q$>?.n9NX.VBT+"n>4)Zh&\DH!C$0thUdori%gA%;njQ'<"rb&+aEW_lXs3,k;jWpJnT-4YcIldTcZh8Go+le',7!Ig^q4B0]#n)Cb)3t@2nN6V(N=o`n*;%Q+)t;A1T2Q8AGP:2)%DYE8>$?@[iG(*6d9QjBEhjs&#9M]a\2b?k=a-fX>o0_303pX(D#hU%OZX-c-"O=Nlmb6BOT(O+cjuao"^k4E"?-.up38L3Y0YP>U%DuB3&%f1G0B-a9eV9q^/%-rI+<#P3^3VD=,FQR4<>o82-nM=sg2VMe],K\AicMQs1gDek<pR,G)h2g35T)h"*2S-p*bT[Z6!:P0)%Ba1KHd69p*FUAfL1O#Yu@::O4L;:Deqs=/C0Ji)PhN^N\SbSTuR\ne1"O+>CP0lu$bR,*[m%*p>L9"7eBG*P92FX^Eh6MU)#$emf%qoj'qGQXN2RBV`&45+>q"HkgUdlu7WeP3t@g1QR#dN.PYc]$IQhfRRb6El.Y8/(AH2[*eo<i:?m"Y#f7RJ*&*-MZ0;qTQ@>p/bmT%#2,Va`p>olT=I$<Xl.M$9U7?/F`u>K'&t]Q1UB7Ym]Wd2XO#[4OYo(gobeD(ZCY3kc.qVX#FG-ngTu"QB?*=e.$p@pREouj@uU)K%LpRe0:TVknpL&GPB76Wq;6F89I>2%*hVQKQN/>F=Sic2C,@`0Q`L6?9-j?qk#3dpNe"`=joGKQ;f:Bo/en6Uf#Vun?B89`)-;ns:%B1PRF30QNfP1%@UOZl.Lh)5N&1G6o@lt=aZ5*;(qSb/?$$1#Vml*DW%VV?/Uiu9ihUiS_`Q''Td1ZpR#GA%e:c=^_jEMRa&B1c42%oEXQc)`ur!c=aikNNg_(9W).GcG]P&U(_"@`qdh1f[E7am'qgJ8UJTmEYe4s`qYM$>IeOG&O)tTqDOXln!Q%D]RAsi`iD2LZ$3op%Vb@2<a7i7NeSXJrVM'<iFM;B[aIYTe4k$\+(/Q9X_pTT<+O5A\Zr]Sb#bTdH">)[n1\hU,60n42d.CnW6o,VNWS[/_,CJW6nUg4t%VGA@LT]L/K8!;UgFhVKd2fd-eI*^jX,_ommH\S/iq[IY]B8hM,HR2_UHfd:c^0>)pAt#'(5<:M_CN-aVSBn@EGRVl1AN.kJchS!K%DTgNiT,AlO9@u7siNk%moh>4@2qA\%:ATpQdS4@edUtTkOZ&Gd5!r4.EB<>?mUb'('Bq<e?:ghOkqgj4L;G']etB7*HdZPE;4fei%B8,R)`qW6p^D_8Y(nWOmR4piBT:&EmeCp>\R5l"r9oRE:WCXMU)5!=!Q7X\.0Kp^6WOs1@nX2Zd9aI1)T*^]\&j.,p1Tk7Hg7Wh*%jG"6.9_h@T;Q6@To9n-d"MQq_ZW7mrB&SB!a&OX$n#Xi/KHkhJB75O5TH&D:lSBb>,^ARTcN(Cq^U;A`%#HaUc)f6Q123bp52u[P%g%NA\9Xq3CcHa(/k2+KXl`AE[,culjobdj/(Zs$>N1M?=l<o$PKS+Xs1[?j:KbC_6en=W9mRH&9T:*RH@n3(#O_n:m7f&&P+7:jI%=J%Hr.`X^<ZgJc=-e`4RilRea=L-Y/]%b4uqb/Lu`j!iS4,0'S)HN3Mr$Uq,3R^/Bj:oL$qoik9.cm)lR42df0N/0CLqqCVla5!0%#(raF%bbPR6a5Jl8T5)TXbT4>m%"0^45+=(=68%Xg1T'`g]Dmoq[Dtp\Bm.fB=8c:<b\2Zk;;U>g1Q)\>&NFUBV1FGXJ9@%I0Sl1%XN0EVBV/F`PZF?c9'hq(AU:5%AeC56gL8Gm,NDi!/a0Rf/;;NA:UJFrUXI#*j*bNj'Xn\>`6W[`XL-gtnMB$e[TVdA`mE;*l^@Jb%6X.0uo002X(es1Ak*7EaGb5#I)hih45,/^Ll#uP[C]#o'[*Qh+-I)L^I>5\QXGQWgmB9_KFP:A>U+:Mqd6?S1gA<\l1D75SH-\S<%1ETcj7f&)=JWBbuoGJaHek@H>7U/n9DI\)!EN1qr9`%L%#23j`p6ccafPm\95%DY`HIHT#kn/)bBGWP!U:YEh][,jj]!h,m1SUUd%,f]]i#ts6#]['glqCX4#;F\rf(^KXg">!9:R@b@R_,AmQTD@S&.Q[=q")n.?d)8Fo5;RN1pJ'$spTn?^)@J3WqcR-c]9jK11K7\b%9gQcu;L/P*R$%65H$6dPSP_U-McpS3M>J0s[e(h$E^)@PU0=Z(?$U6ObLnRj5BEZ8#*go5foa"klpYqZ5Q&[Mfogi^gs7O[U%'gX%5LUCD=jspR0tb%eio#848I@D=R(8j:^:$tLEBc6oaULKrpTr=rNO7ktL/do@mbH-U.]brTgs;A>U^5jt5N>@CKAX22.:KONbl,a5%!6-&7cZfLI+p[kKdK"e^DruMG5DO:J_>VS[32#cWr<sLR,U7I"1n!jAag'R!TBX-IPI"1P_e7T0SuJ>*-#(;jIYIs+4"GO?B?.]2%).T59T-7dokb*AOgnm/1:Xm^82+L9h:AsOh'6m7koeYGk.77b5B4,F2Z5gl_T-5A=`6A.<?oIeF#4XM-r>[0DB-q]$FjKrD\3\;P%UO>U8-M-:[m;oUnWHPAh5j*0D)sK-]CT&381JkW<r0!K=)>XZ%c,'2!o(2-*_WPOC2!k"/Rr*O,kam?.W*)=54Zb"XB>;hW6R$s;%#2QWG[`]p%T'2c^IE!P(cLqZf"f5rq[cbM)kr5n\e0!(Rl!2Pn:1.e.WLi&PP7Q3BSl&9Yk/u!A%,*6dFmb'W@J1Dl8pR!a+hg,T%")l(dWZB8=I-Yq8GifdX9Qi.JBB1;B8o&$`/jYn=#K&>9.<`S-_=1,IGu$K=1F,R^h&2e55r<Dun;Qn;gCJF]BD@0ticbUW"DJH\%HKSVp2qXZu8EQSN3k7'%]XVTt`d1&QU,+l4gT5ZS4!VqKeNL)lR1<0MBV"\9#uuJ-esX=AZ:.NqcBL*)_J#Jh!'W2PSKX\$Z(lG2%P&:_G@s*Nm(0oUX3]ErJg>I'B@4eLd#Gj6)HBmZ7@W]V!)sbN,N$&/,,s%MOp+^\DTk?.DB"#JtF!fQI->Vdb7MNmu1fHDE)a_o>%$moU\<AJ',,%i<kbWN4g`u38qEgq7oB15Wgh)b'c6cooV4O0%M\8C^p1Q)Zo@7TAe.3\N'j:"WO<dChR(C;V5-TWtBUBk7%INrlf%g4TJedl?B_!h"q*`L28Z,kQ9nB?_XSZT'bn)m"pOE'B)1J>j"oB>Eq7^H3?H6LV_S#E:NJpJUoYj%POTFd+s+B>b*W<9FZ2B0t*=%HJe6P@sMOO`o(jV1+&T$fQ`pk#h.VcnMoRAi-a7'S12:CZK#qZPWEpu3CCXbkJ?4QJ"r,.A7BR+RYu]BB6&aW^nCF0Ee\/Aq"0Tg%R?gXn@:O<^2GR`-_;l"260B8PEsI:%OYcNKpb88[R=ofrFaGHJQ34q-)-"ngE0AU\%k;5G=s7`VcMW4CQ]9+T7TD?akJ?3f0UbDf%K?9OL<$@Ndak<X>')##EXLq'[m9jX/:`U68S]R9h492/tPI'S8p0_oAW05DB9[7rZ9RA+!-Lm>K2C<(Wh:u5jR%/`iZO1heEb5_)%D`l<Y=0_l;*bY0X&\XUSR:nDl7V?b=lU]1IRE6<g8d<sDjQm.cpp:Vn_o'mPI3rt]*)$1ILn#WedF)qJ2M`-og^uP&SHWHp60&GI%?!#@/aI20PTfF?<"q4nXp$.GsDMGO,4cqP$cah,=,%mcdd?'icSDiuebB.B;L0$oJCG7b!.>66!%jkq^/@nPCB6#np0l9V06mD;f%-73@@HN:>i9[6&oPQTX,SFKp=i-.l?^tKZ\*DFcRHJ8^7@WI41+p]ojS6]dX+&pP>O>ZF)S,itBAmBL/B>W^njZSkbZ#ThfK?>&E%7Uu^g1QZ[(]fR]Vibco/mo7So,j:=Ujigho-]Br\3OA"f"h/J3/#:KANQ[`]3=#K+j\5@YDL0^@S.SWK]a?if1S\>7N+OhX7V<%s%Fu!]F^.9lsM9MCQ0;QGG9Z?2lDB`uKl_kD=>g?$W,nSkRS2&P3GoCME9UU&Vm+Im8[lJ4]KtHl4D'F%UJ6:RMjie%R"Qn"kbd?QU%jA+`UId!*4'oVjcE\?Q9:!90>S=-Yfe8B4cZc7s1V/nY\OEEEbFDs6U;I4#UQSTXXDSFN/SDd<0mQr^r1MeHTWHKn,N<&j_EB2LK%Xk^$hic:oYJ?"jMjigtQF`*/^q;Gt8cDLN#>gOeG#8SR39*5TT`'?TS.oV6ra-El]Jh27PejY0/n,mZ;G0s<klU$[KhAD,7a^Kbf%6We0$V5n"TlY2GQbLqf=YdON]AF1j_8F27%RR==+0oJ%7/;P-d5jY0,2aYYU&'T:"\IHXA7)0.WG0H<_c*i4TABgFhNQnJGM[!.m%kf24O$Q/,QLdQ)bD'uH&a0NhsMu[h%>TSh\70UZ=,Y4d(D6K-Xl''a6N;LtGeZ)Q8b_&t>'^V6TD7FgY&mquI?`Iufj-1u$'&07[%=lbjna4RMj)ZMrK52]jW],&hgZH<31D/AEI$[pn,0dD;Ygm(A$.F'/j,cdf5('p,BZ.V<MXKG$i"DK.?SYD`+.!Ip#8[f?GZ*16P%)?(i3IrLKq1/b7n'_'@Pp7L\6D3AMV2^HOiO5/Fn3^;\/dA0&[;=6iR[6p,8rX,I)bZ]9%H3/\di3-CJSdA!^SRW?+9!l)NeLRC!%a]0N0)%s&6JL$]!)dlT5,=&1-lN3$5Aoq^nSc_JO:rb3L?MFrhLd4k=$=Mg!3g.206YpbnAm&mb7s7`TZ:CsB#PUsnRk[e\+Ft]]%##@JnUDf*^V,"!fSaCP6&aNhW-^r3CIBU.".+s#mdK*s63)!Ji!I/"%NU!q#EX3fMB=/#dP*,;KR#'eP"XaAMf-TPDULOd>+1Nc5%;hAMBq1NG3f:FPW`Z##ZP,hRE']WifKKthGL-+h*Rg?@cfI-pn*a31.%+Gbt:kV1)fYPTF8mujg.LrZE-Wia(4q@t4A-g8^*g!>X%K0B>#`i(:N[63`(!n)>'7hPg&:tVYRO\aF#<,]TVF@RUZFa/=8JC1piSRTsg$@;-Ree*;$XIpjE7Ud/oeH^&d<\RIFEEIrb&r<u6%9h;T";QV>PEDrOY7X5V212/WT<%=;=q2sHaf;Y!P8LRWo"UTIf+UO.kA0hTBQ/3^C/G;T>C>dZk/G;Sr=.H31\-TU=[6u-:."P`*%1t@4(&WLT.W4M27Y?6MTH">h5+T\Xh_)bC"=d_Q*Aphrn@eIlD\Zj_/3Tpggr*nG\^P]9dV[jkl@CQ<rB"XlUeVWJ4"E\HNo"K\8%6FUNX.9ekk0/pcQ63D"c=-A"FPg_q!Mf^c[Xg/7Q<HeEU%c5k6.p.'-e,gL^hLb`kJq+li#]t^n7ohVqbd=-u1rq@9RjI-if2Cc+%>rA_r$RVpN0S!H;Wfk0'0g$94S@_DhVVZ%FQ<R*a&U,,uYql^$T%]H_p&a&&IPN$/9P-QQ,X(&q@sB?K-[Jc!(i(jBR8SU@KGZKr%beShdc=mYl*)P,=K9/AT1`N9mPeeJJOmWpj_U)IJfa-U*D!Vj$bBQpjQqlS:;<46j)l6sK<aeV4"6J07+'c<,_5as^W>4H..4o'P%5mSYYM\i@c3/=Ikge"b\E4Q$2B,`3Zcgs\r_/1<G1#aKMWeX:^f5?25D.RbH]W,4FR&QlVJg<YPZ!@t&LEtBWF.aAZ%\t/F.3+d)%hS9d;.%;nCM#cQf7Vr84V^EWBhmVg-8:q#>V'>/+f<nU/[BTWi<)@WN_tkC`2%3Zqg5a^F'L3Y<Ln_n08Bsoq1OIl3%7N?,qaG.]%1Ba9.jd#Mp&80pMOGF8e7)_ITPI>]9HjYI<k.B[PjjuDJ&/C<k_bQK8l2o?7m"Yg?%<BDf0I?<k#T9);"DPlQkBpeb'6Q+`%##jD%T*!GjYY57=SRCSo?pQ#l4LeKQBku-*5=c&s_n_*O:SOX@*oK/p)ud[hO^<l9L?*o%e6nAYlVCVb$qZ.f]Bd?/;^u]f:>D?K$q7k,%4+PQ]c8qa)96)-c&B5AU+&R"[8VWFaQYas'K\8^H&nm+^hA@u9[HZ<?^(qsM:obKd%\*`J'PA/ijn$WAc?(p7A-gq=Ld7"/a+Di/%7\[ri.]5s-\ne.oSTqE#WUB#)h'c,QVHjP'?LhA`h+9Kr]fufB1^]Fa='O0mk,_"S2YN/B(,33qc)-i<0-f%i$jGHO&G):4ALmJW%^ks=#c6<AeaD))2l6oJC+3=<neQC"\MhSScp]?FDB++G[aU,@YTTZ<5qLBrF$)kI&X<<;(/msHipVI?+!$hu0^tf_T>tR;&ls`U)%Miu#<.rufW9bXk`VeI&J_\:#o`-g1b[sp^sZl5o5,8lmY%;'kW0ME=TjER*AS18@S`+!k<FRGVhp3i'3]':>tBE:dk,[!"=H-n`>%862LYis0VZ8g%Yh%SG`L;5f[9:KtE`7Y.WEKKhk]<s^+CPecYKqE=O*J<Y+7)OHGD;d9/M8u!P<=r/GpH.RUagi_!/>bSY>1K9XB%&1@X5a4hU8))8RZ=]!1u*Z@.Y30+*-1JAB8\B<d(5Q=dRAEA^:5-08cO>)JkLst#2G;a.-o3'UH<R[$Q)Eh97G6(=4\aq&cN9P@B%);.K2P$AaV=p]W/FJZHS$FAGrGJ&fN78%uY3Y)%Bd$+Mb#`=A93%LP,UktHgB+92CpAe*=OkNG^GKEGNi#=mn4$F-@IHZYSRa3?8%7N8^GaRf>#/`nJqKZV@]XA5cj#@/BJ:Y'>4&K0B;(UM[edKN%4?:;JMagU?88I%,P-Et_r,?10CW1CqTTSSir$9A]+.sPRJ;o3^d%%=CDp'EUV%7rpm8,0+YM=?MH!_0lj*5ke)_MT^Ac\$UinKLF0XHS*u-LmR=KC/X%e]ET$Y0jg?E'NflNa1Y,rX7ej`Q,<JcZm)`6%PLc5@(1fC\4qZM&0MUGd@([Af79B."=FH'uTrG%6f`br.`?"Zn;e`HfJ2:h:dNm;FXg-Kbl8BQlNGAgB/jek6"YrK-!1ji;_(sd(%3AL]1?O>&"PsXse3Wi9/1?G`L"@XZi5T_h(;5+.@!.u.<3\V,M7<[n&9osB$7FjA*jDb,R]FqO(e;DA:h2O9UFLj?VAq6Zh65m5P%qS]ja(M\V]+9=A%!>AH3J+h`@3KbUY&q5FYL]#UFm#`kRr:UuMrZI*S]tIW44ruLr)&],uW%8^=3,28<Z8k_\\Z2'E6mRdd'QIZ8%Z+\Ull%mg+%l6(!e[gEt#a#JCE+`T/P'@kA!3&k),UZ-.5cD7Sh[k"P;^"pV&1:1ep3mc07Zicj_PdK.MWP98^]Y9RQqAC,jLknA%T_P9XFb<3t?(dQ2i!ZngiI^Wp:,@R.OcVL016i^`ffY;g$9/5de)a`C$"u+T/eDcQ?qt6'`i>sQHFOCS`"lkei8qHK6F)pNJ=IHE%9$,Q,$IVk;_Ea#LPmEVagVlb3er6IKikJ1a`rMrhO_<6'3ZSkUVM41iY6s5VScLf@KtjkN96UK=_fd0Y%Ef$S1%P)o6pM(HAK)8(%(PW+0(>t'NiAFDV#Afr]=,_[MbeE[T9126$UXF6u`OZ8K`iCD;^bp5.)6!9qFYR'XfJH/FSVQ5L$Np#n]c.l7_c0W0d2;Md7,ti1%&MhnX.1K^$8S]H+W@nNslRW$S#6'VeU2=RPALs+L43hR%Ol;/<KZa362$uVAdlpV]Pk$aW;VUI50MDjN)s-V:7ZB]N1_S0nhGI:A%pd/-$P9($HYcOdT)g`G([(^pk\a(6r\LPV)*$"6,;>G\bjGV_;:\"Od$#:*Cce=kg-6,FU'm%RGLh@+G]tqo&_\ZqeVl#9YWPCQ]%0bFrj^$7l[l7"INYA2S820B?(X!BALqdBBDS3]Q2gC6EqY!*a[f)WejkG?aJ$rWWg1F=%-^?ThuR[&Eb#[SZd0a:$RNZo0;Yp(Zs%9jm[/;Juh+:9Y'a@p8K)":2".de1iQ=7\RWobP%miCsCl4ui&11)R)-A.?.<d_o0Caqm;t:V^+&,j3S%PtB49M`8S3ROXXn0Ud5O%\:_-o6F@oF-T*2"8s%L9!HhM0+;Z:Z0hF=/,mrW>XB_go!k\i6X;JQ'S-(N#M:eQ!L5\GN0l=$9<)\A%Ur=5_8A:q$JZ[_m&fVCQ%7[a[U">nI+5T(b5K^=6&91trJcr`3&&R-#,1!?j[>R?,jati%<!"q]1;gJ!0A=1rD2<C%PVhaM85-VaId1L4UXM'2<,cukS1%1=Y%7OQ;rlu/]#&n-f(_2&l0J\Y9QnVqH2:hF9uGbL<k:cVEpPt+2pOa1,:-p%JNQX2f0`d8[B6)-@S-#al$i<cQ;i$gSF@LNQ[&,^sZ%P:7Ub$2#Wa"Xp,aJ;M\Y"+XI=R(u*6.u03VOXFV16:lhTUFWc!=VJ+A>d.Qh)G,3K7Tn8>7&*.uJAWTh*GZ<]m2a_1JLAAal0s_M%(et;\'ghF_+O8mqF]pm7pQ)kU*/n1+&_A9L(0_(+!sCoEp2DA@:fU@#jNL7`_+V`IW38;)n5B3SBV$0=50K@_V<o^CB8*"GH``?4%g&m,&I_&3A,EY*N$,j-i$t98A9J:Gpd>lN#_?K.WmN-qro2ICH0U[obSD.AK.qFjKa>Ge@h2V7^*(Bu1'!m5$#2>?k4CG#Q'J.0\%Aspf)2207!q[fUg#ZJ#)f/&1?$C>0ORYPH@Q6E-"K(=F6O<ME@r"iJ1SYU\mEN2\j4Gst;KW#?g%2n%(9R4;Ya<O(X%W'NsAEXqs%K1=o43s698V=o3^h;O58F?,.>&(`[72D6:Q3TQJ>,LP*_gg2DHB]o$$Zk,@]17gNu$&l%$K;kRFkbZ!0HoR$p<+$%XTeeI5=!e]f%Nf?SB:eVS9)?@orctFKdE++)d+U?B0Rf%tBP0gGf?q_2"@?)$u8;,6,/[>b`#,Z21%#hi@>"/rHKT^4*.+*T*5e2KOFj"10+6%)J%a$AR=_0=0S%,m^,l:7lBbU&5@o4T;*!#IMO%]?,k$rKt6%Xsb93-u?n4SVI%cmC77Lf;ZHOjJ&K<CN$[NFX#`djTF/K1;lHA6WA`%ibq465):fsDN$u_UQbM&U/j(h=0N$.%2?fuZ.[U)"XY"+2sZke2.DR5A<L.g6]`EBM[&61KG<p)[ctRtNJ#*ki_[EX&GI5LN0G2T%cZE"e3eof$"i8.R&=;8E/phWn#_N2Q-&1Y6E&IG[@:i%N4A+iMN=#(fJnDR/XpMq$L!#(q>,$pUL9.11TR?N"EhLY3?4SKNJ;?%l%4Xn@.3Qlis7\Oa.+;K0K_,AN?96;#%N'J5DP*J=0(nQTV#_X,+)1WnS0M4on$jO&fjE2Zn!=-9DO[j[/B1X;7'^2VF9s1FO3rq`n%7d4j]i`8F&UpeO]4=E'"ZQBf/n?Bd'8Y*(r`Su"eWrS%M[(0n%9m2t7UC2JjpF+C"#$,e$/OQ?u!\#+9'g=F=9H,<=C\-KXg*"Ej%6-%BQ=032W7nXf'P^%aD+9<7Yi^^s1Q?k=O+&q^G;t6TG-((Yd0GUBU$=or4ZHY0Q,E)CQ$XR4'L_^>l:^D;l\4TH=l:6[VnG3FA%j)Zsfd?>/Hor]mJ230.(kn1.![L=ZA(422*+P)&Y&i=V:_(Oq#0@@t?&j!->o.4-\)[i_KQlV2U#G'Men5%.=6A8Vi+6+qMFc&;1%Emhi4,E!L\H!mHJ:hu&Ub`3"Mkh[ouh''\MVumK:AYQL:KX5M4f_KS&eP[`?1KqX<)Tifk)T1esO/#WR2m.qW'LGHC5KDP:Q5K6<%?<2UbEA?Bnd80L?TgqB`<-0gUKSVE>p/uqiB0%K!7_V+;^!L55/X4+CEh!f3!9cYcM@]<M+?tF"8bQFP>2R^/m3QlXO&&bOZqu7_%#+Q;Q2"N_hN"`u9#re"R/6UM(!t-]^5h@8)6OO,<o*bZeTS;\Q>_U2*m6Pre]Hg(q\HHFckeHL2Vq)6TNKmbYL8+oQoLLL-e(CHi%6=:8[R+;BWAibYqK%Llp$HfSX*KVpiV*(8/k*TO,EnhLkAt:%Y?_(\&ZBQn*0MsSf^[%GD[QN>2]Vh#?#VsmWoeV3&_TY?"L,)r,%#0"7&^6SJU=61PjJs+&SR0X"E#R3(f(moX^[+GeC+$^Z"1+<`I*sl=$2Fe_B$F(HH]MsYVl811%%^6M_"%<e*EXd>QDj!.IDF@6)%aUSRtAnJVBaa`ghe0EV!@V$c<,^FSN!Nhq>?6B:^G%@ESM@5a+W2?7*0M.OSdDCn0:`U<Tj.O\QQ]9-%e5r;a\@K_#7!T>jK(Mq8%/I2QfV9uPM+Cp@TNPQ\$Z9aY$ZoS=ZJF85'aUEQdftsrplN-9!-@Ir:aLaSI[SE!9$!Sg.f]Euumf<;:-5V3]!T&o3IV>`Q:Xf]%%U]Kq>("3_$5in\a?s\^C)8QR;i2NgB"^8#&4I1190j#[rS-&:Z.D8YR&mKl`,b012Eb6ut&<9\rCf&8rN)@D#7CG+;E#EZBOf(RF%Ma^U$4b:('OB/3E1^(rEE(5pAcH,$LjCG!=[%qpmf%0hp!#mDNSL@sj@AF-;\ccc"!eVTuQh+&7N!Es@U;W-,[od8:FHWJP-`&=c%[jJ$.2K`V,Tp;^*JSE_-ZApo#!u%bmlZ/5i"_*-ZM?sA6"<qp6Fd<REKIhaT-l=ucFNgfQ6>C4bj(*2N%:nl2:"T?!hSIWf%po#4%GY]5plroiN-sMRlik_j$2>=U:,HjgR!.br&;lH5(_M]2H6AW7@R[b=eqTb$K,2!:l;$JV:a,&ZjKkO,=7^XKgTLFGRj%H/6!`DRW%$5*Nk%P1NZjppOP<%UA_-C)L[%OoG+O->6j&.*oNiL-GNfko!2%J2!LA3.R#-/AgH/BqZM&HZKSmK5Sn(DX1Vl65tTAc2l/7=et2%B-P^pM`t:aPQft`LnkTr,B?0J;\)7OkkIZ\Z%>4@XpNl;YHWC.[#gir&[X'(-1F4BOJMlTdcKG.*T'"X'QX;:b]K;6_@2o`.!-e-%[U(g3K)f'Vhm$u;+4t[?#(r$,nD+,P8>`'2g'6'QF0H5%f:omme5`Am7FA:JaN8'8@18mo'bJCg)]#U,Le%S)Ll`@o-nq<,kYEJK%=(I9j>4h+$.9?P.5j=4MgBeF&*6(Z$<8Rem%88/9-+h.Je>g<[=tdFOK^/*qP$:N#80rr/i0M^K4"1<!(?EfP/0k3X;d'_N:thl[%Q*hRA*^+\L!8*Ur!O+][Xk/Mr4p!#UBS@5Da2:TI-'7C;"qsf(K,DB^P"SHrerZ+e5n\W$Tr=$hUgQD@Rg*d%SQLb)fl9eJc:X?k%^o69U0LiS%&,!'CRNYlN(+aJ.LiLRX`IR`?oi2Q"^G'%sg2'k(TLgA)DNt'FP+U<&.d.@f.HqLdD$NuF^Frh`1"3BDW6m0!,=!*h%JrQA)A'`S=(k3r%$Xt%^5XU!U(Q)X*.?V#["7Vs7*eP+5FuH]u!?8ICf3TjRD]cV`#a_4'8i^Jo_PpNor^OugK8>2b<(R3"!##Rn%M0>T*-ckK`[['YsP(q36Kk+qID46'!/g2F'ZD>m3irf1N=RF0AU:Fc%PljZKdijJ=,^g-O+6DgmPC-1#.`cps]iM"_1BT<J3)12W%A&`';CuJ4B7+ob%H'^[>B1,'^UZ.4NZ5j7NZfJ3MXW$=cd`=^A`-i;Q\4f9o>nL";;;g(e-WENe\2?Y$/E5_e&j!NfSL:5`78ZS6%*Wl<[%Pl7$+m-p69>gBYb;l/I*f][j142sX)R]ao69$VpaVIGi;Tp]1&eH[u]/4)9@Slc3$>78TVW]k#H%fIT_-_.F2q*hH)cU]#%bD;9"Yjd3a+^TBn,3dCXWMNQ_GCqFs,QqY#9s#0rMeF>f[+LSoZl]p!=;i3E6^du]auWZM73PWTSi0W'"pSI&Q"*Q%Ste+iO0b@a%;=qdWpr!\t,UZ6rl:sMm97$,j&g`6KjT]_ID9;3XNG9j%V(AaBk##$VdT2CS<a\ZFi=ee$)RQ/\7eT#a8UsM1k*)dM.p22dR:PRG%KGRoB#>*%"7(\b)EjUqWKkI+cL=ZZrg^/+5!mE&E<ll>.-ZjL)aWhb#aE;MCXX@ilP9Gf$UV1=EZPq1k]a$P2S<d;g<6,ITZ:u>,%<'lk`NRHQ,/5n,!YUgB\9Mgg#.8XVg8u>\+G]Yk.7EM5n7kIp+5$*#H#81F,'8g6[O['V39hMon,QYJCI2$PLf#!r.6_8"Z#s^,k%T[Mo.h[N#qU("nPK%ujM*`#0q=8"tF.;\Fn#n913n048S[5+7MF]FP/XeI*AaO-qS%3\hP!C9sr`7m,L8P\W+C'Z%Oa+9@p16Pr^%/Ys^'.9ortW`adG<Q[];H#H4XlRB<--/j`6Rpe$L!j^\6Z6.9D&9o^6lH0I2asCeHOF*9MUD1ls_6+EnP"$L95Jls':03AMPNE`e%ZJqg[Hm!>Bl`sLh<smU]8U'";M8GM^dPU!;Dc)2=S/"X#$?%/`7KP4C2"HZ0pnrh!1(#t?Vr"lN,la9IesXR/UnJDO6qQ(N_B9b!%LbVC,-s;\YBRCM5V)c9kgQ5dqU?3"=/4L/X,+cGdWNma:0hj2L^p<G_84>Y,P:SiP9L$#I(`C^N#QYaU>9\n*=H'KH>-0j&R7LHq%+urTT."Y:TF%:fd,hWe:I=j8<9[$(I#;kMaV2inJ;OFCoM"<k<9\Yuj$c#AgP;K:/4i(-])Fpbs-Mo7feo2&'dm9)L<K70i;?P9Y%iCW2Q^oC!N<R^7sJV'S,&Fi'V%cYjnU`^C.\[@"pl#k,6RR))u0S';(j,D%Q,p?D*1-/hGl(mg@=PfaC8H4Jk?BM6S;;r\MI]P5^%pNfK.K/F+DW0L+o259YnGV)Vtaq>l0"mum)h^Y1;Z9lil7V;%?hm]e"DWPY6!naTlLC)9(-p8GLckTN,ZkZ?V9-Xa63XiMX;C]K<%6okY,odgRF;AE(kN6)Kg?nTM78NUCWKTsoVO^Y-*5QP@U[DP&!*pR=7Ul5lN8O/;0Z450dU"BI(@b(*)lo[cC8jje`QH-QfX;@\>%6'l2p?;;J;l*3_Sj-1!6<K)e3Qk^rjic!b!X4\ep7&N8b7n%,O!&GBP#BJS!p9XNhSlBie>0kj:a:^s?qCJB1,+B@4^eL,e,b/'i%YNI$YN\p;$c:II^=u7:0KkHn$"oo2Qi8ibsG"89/('nB_+rbV>Bh:G$X_D_7,`d%q3tVl&>IP'uCHr.%!MOaE.S,i=S/J\KX.toV%E*.2"P%fjO6Bp<RE_0(:G1mh)(YV'@X!$+]@$E2kHjCjNV"J7^=^@VYQ3B$]9"ke,=bC^=WF,9W'#ZOQLXXWphh@?gR@;e_l%B9Z%fH[J6Z*2TKNR!mkN9]E`B#`kW;ED^6:;%G#2g%1H^Iie_K;l6AOBTqR#APfuV3f\UZnfQbCXWUq-<$CAPS+EK;e`EqJ=+R)Ku13l%W!"Jg,nFL3(104<c8@VtZBp8>lKLAFFgioV$<"n2F^!^S"S2"<]p8MO\W[V9/D!'1j:W*2X/dsca@WM\"\Hj,90tM5Ycs6Xcq-n8%ZuRV)1Q?4>,#'^0P#s(CJq0]l&+*Rmd0W+0.psW5?,9Qr!Y-_)PX8Kj#YF]=P\AI$#QQt&%T`./L;En`<4Y&+<:T=O`0DpY6*$^"%"uVCV5p38!>)asCGLA0FhG$Ciae?PLN2^Ha@]GWq::l5#!I0kgmj'G[]T[9)L0N*N_H-,m/YGWuH@gHdQH>c4cu_1c8%p/S*(]uq%.h?tdY=4OU1P4:PU.1C"oq\TV$]2DO':1:MMaXjP,u\5&FQCj7fGgbk6GUHa/]pM?L#f\h1+=Za-_ha]=P9)bfI)`94W/Sbdke=$%K!n>j;M83C-\tT^"OflG=9=n;0)=rpJgDL<@>7E2dsu78+D3jb5q=TaFtC-hE;@Tt!fd[g]>:%J#a@DgY/:UH^d3_W=_VQD`ulHW%F-EM."$9E(alH-,$O5K>f,j).$RW[Y#?F;;K5o+EW1'5OjL=@f+IO2;6ot]5/omC6^Z8[Dj;*uIU"9qmIGkCH76&].S688d0I&`2%hC0!sbMY.h-0S-7\9fdkTmd?Y*c)56:@M7t!unsOlV@X>8>TK)$BSUa?=QBb3B\T@*+C[(adliN3T]##[/e(*n:s'M0SHAY&0q@h%[8_-@CW8j^M)aNU6mNQQ.X+0@KBi_U:8K.g?QV[`O23%!rLm=`CPbDFYI+!i_T+3)\JEsSKI<:)*sNm*[3JhOp2&Ci4gI2`PDgb(%WUc3,e:tdAB@Wfb$MCP5mU]u.k@u@nkt^Y=o`=-t,*s9n,Zu-r,Ke"KgSq&9@tbML'Vpo=_LN_`^!S6Snr"D#9J/-Dc\UDJU?;e[%O@]R,1_(DI5fcZs,_d,G4;^H(Kd[2Hi`Roj<9f?W(4hBYL1p3IUG6GE5WBLN?'PU:a&O0)&mVNSAOr7!8p%QgoZk`2%i]n(ZJQm_%d+iIh2A-+s8Mr,6:^9^b8t(i;3^dMJ0]gHW`\pgMBO$[8)J-3"R-K;<'Su8]Et?7dQlQ;]:hf;7$7*U[0=m38`^mDP[E#%UY9]AJ%"MZhD^k?0plFmD!<TcoH+RhZhKO3pj(fA8@/N)p@i*Y[8N<2=$1Arf)Xt"]D,'PYDYMDjS82HZ9_Z4b2p'^de->Gj<LE8,2]j]<b%+8B1GBSN4Q'_T=nf$9;]'sP#Q(VlbS)OqBX0j+pH"FuW%S`2/b.%OY'@OP7kPS)YSV<26<&PJ_[nI@-g:i;HI?;g0Y*l]R;$!YpO%*2[1lkD'hE#ttcnno,S6CG8/%/Jt6MM]6nVfufO%4r_3iY*G9&8'IZ+e,Q-r:!%0cLk_HifH#6/9Q``2J5PHq;hCZDkQPV9,n(*P%3%FXj8Ai`qM(I%FQBm-]=^J+p4V]Q2/.:t63u0f#0q$BTG1&aLWT7b!I?U^,8F)dE!Z`qq5G##0`d3U`1H3aeEn<ht3E'$W!f8uu%Xo`\ppoLT4OV,CEP+!fscI.lO%_2fp(g82Y3GRiVS;G&r-2X3`/`nrlLPbj!*0-E3+j5a./h@K"A#2SFEsGG?nt&FBAu_\$4X;(e%,h#+:l*E@#a[E8MO9Y,Wr(`KTp9J(hiL2#k(6/sW7LX.5\AmVk$)nQXOm3/4QK)&/1(f7>UPL\qh1L"_=Lb?OM&);Ge?_]J2UfF:%PbgrOZS\DCXi!L)K'X/<:Ir2ii0rm[N_EGD0rQ&n*9<nQ"QVt"CudZIM8dn!-;Od:8[GuQSN)U(;+s6[c3`$&@.=;M/!Yl,a]G2F%!1oFB-&\B^a)%^U,8:B??pJQt3Yo'Q\PpD'BE"-H-Oa>>7](pD/I^o6lBoZf7nk;2^;/UY_CCYCEp@Zl>,/;61*(DF(?druiPKpC%(.aTg`q/t90Q&TW&\K!Q4t=Ia]HuT_g2^;B"4KhF]hkT2Y+.?B[Z]a'`J<Y4Sh+G5Nb]eOgW;':):Bdkg8)kF)5Hbaaq.!L;,g/X%/DHudl!Pq`?)(Ke^bL3P`OTA6*]>jD+&ncIer4,885`\CCSRDVlm0@J9\8K^+2Eg28/+Dm/"8j!_#ihqf%hK:V=[IDRG=KDS4)(R%fEWXBJAI:u.1(&*6LoNKY*6@kb`Y&G#2;Y19b:h9ea5IP$5gnVT\n7WYS6-AaIN?:JUnq/82>gW7U"bVP(nrJ30)/q\Ou.T<i+gN%9&Os`,#:Z<&6MDQ<a$kULlP_&KP=[A'm0oi"ps:0a0h(FQXm^(MJn,,^s]):;HV0.ViH9n-QJC<(ha*9)Apj1X8+SmL,9FB"0Nl[%gIZ[ClnLe`UCd&0Jpq7s-.q@]@H:$h656DpVE0AnN"u2F4Y`rE9JBDr*=jD?2@JCB>-qsAkkGb86B)'>U@?t_i*LqBdED)S+.R(H%%4pkRn=DAP5"SV(%d[N#QN!Sn#chnm#p[u)RPTkfT$[\H-osX/F![h0b`DBt;u&%;S8<hVBT]].XMgoD?N<u$Hc9@pOu(HOm$'PK%'J.7m;c?:;!_3Db&6D`F"Ghc.\.cBHH\o.e,U'2]HgNaAk_L:f7=HTc,9d9urX";\SCZOqp<%%KP.Es5B/CqU<<sV?aV(4r>*"T9%,WRt9K$oUeF=M&6*(9Qr!EB<J67;"YEnC\5-)G%ZOWl&WJjkX-3sE?#8m\2-:WFmg.;U:n]*'=0RUWPmG=Ii9GbP(3]hRK1.0t?E%a+?LQU/%"T$fap0aNDO;,`+ZH'uM^JQ5s]P+j,i4m?/-4,>.Jl-"]K)S&DAI>X))l=X@FV,a"7>T66j0"goK6X4@qq@e::>Q^tu!%6:rFGm$j`Ta:l*s-K3Dd-noH''=G%a%"&>I7kK*hT2s7ULER[d])u4Vl1F:?XM3e%G3$)3QoW/Y&8=K-,Z(WW2,tXIAq^+cOb(Gg%EcNkE7JM/'R&>[m2O,+9X3).<<)MpN7hoY<5@S@-$St-tphGSPbEX/X!A=GM!tcIlTM1V+,l1(YEtim2Zk/#OM9$A70#4RhjZ8D&%8h6$s>d`$d<94ZBG!b2EPU'0BHte)XBC.O^U8I:]$G:Gcp^;Xjk_8P].eLEcIMq7H8:5)r'X!ai;#Acha[RR&4#8aW'r.66fQb#Z%,(XD%hC'g/pcr7:@k!\1"1!?WP790Hd<4U7,pSn@0\V],XV:F+*iZgPd,SeP;cO:GZVp#78UjZj#W[I#Pef<CRX7=`%R_F#,AAlC%A>Q9PC%h6RlB9OlUZ<uJ0EJUoDTSo(72"7u9(#/A+q[RjoHhFNam0>$>l"Q$5qg`r+`lE%7pjC=LB0bkYF#F`?U5XKXi/U)-)CV]%HnE[.UtE,j&Bs^^0$@oM9kEnj?p>JY&G)2'a9ejp&M5+/(Br3:c5Vc=PEdb@JI]gp"dq6f:dO)p.L^?qdT9u9I,-`CR?K_K[)qCR%O9oE27QI9T^S?72.3-FaAI]KA73i3p9h@aOZKQ9o?)b,s>GgTa."KVIq$H?cE6!P(Atl<U8?UHE72(tF69?B+X/\LW>cY&RENs,9%+])09il%Wrc2XL\+,h/m8(L>e#Thl#nd<%DQ$eKb(&1F1K<j]-aAYMRYN`bV.GICr$A44rbS=0b$]Us!MjPY-AqZskGU$?o[.?-6%)?p-R2*f"@A/4Z%pFEin\9!;01,t8<BGZ;M?5aO%M.2.;',.//An?)m"Nj/!(5n7",)sX=2sc/o=o^E[g^03)*DC.M)Fo&IZJeBV%!h9787q4uqQcY(;Ztj1Q7U-><'5R]](sbR6M4MQR&P<*S`B!4!CbHP4E?WAe$cNo^15g:8T(-/<Bm>H_H6OC=b[L?G#0Wur?EW)"%9UE'umM,YO%](OU,SjP&-+[;H"\E`GhX,]UUJo!#&q;]/`@7&korBh,=>a4Z8`i0EQ\e&-`GC'tQ6E@HMBO9+U+o0R;;lDEX&3C9%P;a`oSf$/3lEoa2JQJa5/Qr:f#ddTbl&l's%Da*cCI_\j[$&1YonLtm;,KrO)_tfQFJtinF\LOK=9ZJu$R,n76THYh9P%`qrCVle%3N9qL^$FnVoE:FAm2ejRc^Xup9oJ)p`"W2IM;ncKJf[ciP_"^_8^;,P]u'b(TpWYfE).%J+Ael6;+UP8Y6$,4).P-\^d9%"D.bb*%P+>#;3[tdI]Q2H/!ocg0p=(V5V>0t-Wa[hL+AH:W4>H(ndF(lQKdmqiL-V_6O%m78qFBNBmKJ]p/5SS`'B.872)64T&5]<_&QrV_%TbBjSQqp%DT4MoM=t,3h'm`@#c":C,(1u1Db;b4[&PU`Nb9O*J6=U(S!STs,(Ps.]AuD.PFQ6bTdk-nBK5/(b]oV76R&*9KH]6Mf%&ZVT,+&mG`G`is?bp"bn\&9m;nj#!!$BL]m:-qp3,^SiIl)t[$aP:p?<3(j%VQM`QIqC_B2_+-^(:nJH@NDG&UKS!<.4$5a.L;.C%\Jl];^sZr6fh>_[P4h1^*'#f*OPDRK>0<mnoYS+'p+>B2Q[sq)[V!p=M1eKmA5J;WN*%fn8R&;7++73ns!uleZE4!ML?(ss3sd\@%U@6QD03'BYUCac,'o$c(kXAH<7R(@A<FcUWTHH/&""Uel-m6V>jUmIfSL-or-R486#b-CKh5LY]=&L\E=f^<Y>UF0m6"SHr@=20*%BLROB+Ks]Ia?<j%@f`m2./l#h3#3LV5j:c"b?VBQ#\ShjJ/gO7%\jRgl4$22&C>'f)>#3$TfrcM^gQd:PsT$88lCgC&Fo8LLkiRa%"UOkVWhu-pGER\7alj8VTI6Y+d=`iJ'<=[qhIjrp,=[`fbp6ATgsiWS8m:_bJ-pg@Bl'KiXqNfJSgZ0[Up[&NN)3k:;#uAQXH5hL%J-tG@dnm4"9+nR1Z=>>hbdJhRY@EL7?bd6'W$]JHQU2&mClhG9coY8C/S%84OWLh:<aVq^aOoMtdjo!qo7h9bA5*9-^c;QP<NBXY%Bu=Z'(o9W3=Y?fVUs,#[*[)3j^553@(2IPsWaRXO7QAs-VZ<f9>D]t[m%e<pW9V/Y`57NMIU>-u@\#kB\Ajs#1,9l*S>Yur8V^$P%cR.%0n-iQ#W5)@Fr?09H4+lZ[*]DL!K_al.oTrNJnG4&k"(%7U[IbWYDC#ohoLG$CX>J!s2uZ:nie)!iW$!6)UU#'6BNN@26KksY%(*O<5!gf]L-R31"m_KB3MX4f/!&2u<$JMH#Na54M*gjXJ,`PbD*3)RV?1&S^1Wg%GPNl\BF<TkD+G5dMD)7G&/>kLlE6o>1cpZR1%YBcI?\YX'69K3gTRO$Sf-YajRgh0k-+]Kqhp*'\S7?f^OG"%lRekc`PEJ)td,gMS"4"LlO_8u;)_^+jbR^5[h(SOT9G(QfOJ2BM'%WEQd"1S9eIP,2QQiTb_9dp-$.C/c?K848OE&sIq*]u%F@lI&mk!#?6XX\r(g-EE7G8E4Tb5KD8e!#nMRBqjc9n=dKKBb`\&oP%jK%1rMhT.gWtqq!Z)`US3"34UiecFOei_P&Nl7_4&N.Z:`epd>&o-%]`l0]:l#m19MSk6JrQnb(21gb/B5$ZFsG+IEnj/WWgg'W+rZV%oO)2hCVCPW8s/^f.^p\NXR*@;;sTL#I^@DM$`3uUgkl5oT\W_@Z%%[NMOM3%Qj$>%>F>rBS5Qr)#VuP4,r$Xdq88lqAQa<,Ma.nj%MqJ/aPq?,Bd=h`0OgLe(\'.\Y)D5M66Bp$Bq9uDANb\Z9ic9[2[bd4J1@P`df\%`eNl<:F'Tn2=Y9E7A#I%U%nRjO=^j<@]_.&^4%oI9o>bE$UNP+[,4_d\U#<Re:P+_5dY%+$O.-^+:Wn=^;3V?;T#QU<H>'CDiSDFcZ3VZcScU6_:*8eY<T>foD7)BGcVY/&kV8iiZC%S[+l)SXiM+%!s:fV`\h0B<#\sZ""h2XAEkF+R9j@#/[K6bj-C^?kSF`A8n8#1\?p;Ar&t%g63#m_GK5_+fm0&%.#u_m*QTsdQlqC%W\Cs4X,o$^BLNfOYYKBIa[uZW$PbeNdUk',RIq9!'7MX(F-cNQ8s<AgJl/HX]&Bam7=W;A;bT[qF^d"Lq`ntO\?p2N)/*RN3O2gj%0nkBq^4gMZ=KQ7jF%aC'X>h##@IsrNIo68!/)Pd_R[6:g_c8mAl(1ZJ'p?itkF7>-R/RAc+Wji"o!;jXUQp6m_jI5dT[K\-/s=#t%437t`+md=eMuFL(Q6$Z';c6@6(t6c.Ope-t9pl#QA?(Y0=$@Cf8@BCg<.U=O,U0Bh.EqK%$K,5'6TM'dj+%nJ8$(3>8YTIki?TP2%=Y?lcAuGDi9EGUD9&#2a!csD^&!6r<WWg)%H6TSf,"k90.bN',elh6Q7K&;3P`2Y>=WG!I"?=L5dasP5KGl)*5NH<ciZ2SQ]i:$6%&oFH^5\Oe^e14@>KmYa+>%@[`bY:\Z[9X4D("l>9f+$7dn`3jGQr(UP8[QVab.J$HIPj3AEa9i%k`rpqDTOlI&bH;;e/FG_XjZ)!%[8rc5IAU([Vcmet<HAPM>X,_OPA;FH.5I`7Gh5U.,dHot[#<uQA'r!Z`s1s#[)./qC!k)r\*l2$PD-<8^-Pb]d?^Y]<99R*!..<Z%=Y8>m84beJZ"\Qi7sH3#g@bk+PFrGG/43m:dqK2rg!E'Qg37/eU2RiP0GH5W)`0X;auEPiH^MnZ8?W(jBGIHR=b3))0T.+i[>^1_%8Zi:kAnCBXi3?=G"=-iC8l&iP,qCu=*Yc"8'YY(,W[5DBd9b0R6%>/B=.Q_FDPT'+C06J0X:];+l8fSe#$4"Dm4;4_9i4WG&bo7P%FO.87=Lh"LonFo0fL`^a?#+5`+^,1\n8lGqAHE,Ph(Sk.&foIcG*:@BP(Hu`qZH9N8BWU`9cXX!F?V4f:FqS2P$5^)/".>&kT>rN%kULR(e(^mS/'?X<5RXlC05gj0/?4g%$!EmTookXuZ1`lQH\Q;C$pd:8HnXfW5Rp6cU*NH/<Da?21b>RmZ9,iY@`5R[,'CIDR8]n4%$$&<e(*JJOmF_="aJ4<J%!TTM&Wp]oI$\dh5;8Ho\X#MU_Q,j9o<'\3Pbc9J0T:jH3G,'iTnd(%'"/J2F=7a^,hm7CMLm"qlm/c6%A3$%nfuZ4N9-GZl#^]^;gMopE`*3jP`aak(98nM.`"Yfj3s+/iX3:o5I+JWk?eP"X,YX.2joP/1e\q70g`uG8!EZBt&`b$V2q00K%guM"7C,Ls>2.[1%41BVTM%isA\cD5HP!:rOqO;Sj73\bCh9ZX>rkA+^Fhe-20G76&`rId06:o+_#40&[0Oksko"kpZU_cK^NKXtU%L.8/W'rsG-GT/t&8r1K5$,@mg-Fr?BR@m"^V-QQq>XH:]P@5#Dc%@n\9LdS;r'OPqSgtUT<K4/7fr5//Fcs8O[=DXRY=ZXUmj3!J%LgB8_)5^kfT2dPccSiqS`b1PcXc*AG1',Gs<(\XBQcL4O,UF>Im7h+*;j.O:<k83sB&2),bI)/2il0d\?$qaD4k;Tl"os[CYBQ^6%3MAVr/s.HMIFX=Rh-m*LK]Y(jB[<Ai+4;C<B4.7X=X>(G;F4M3Riute`&J6%1EBTC6IIBO3ijXN<T9!=\s5)oHFA'%L<che*[iSZ%^mQMoM?h)XRMX!'l$M8u?Z)LIrH\sI>Ler]m`))3XBNW2[#,TVdMNP(?j>"6'(+@3eLX'%Tke=Lq7K;lPaZ'L6/Doja$tYl81#RP%BGE'c)@F`KW`KDbd],u1P:OQ-RCb/oOC`#`];\t:,QMV87K`gT'[X50/6P7)=K7=VN"ejb;J"[W;:\I\aTU+7K/OTBVP2GFaXlg3%1R0;&cV]tL\CG7u%d=92[O#BA(+-q'9@CH;Os0+I0^hDqN&GY?#?<OH5h03!%_saF;aPFK8d75r6!'grOqk0QfZHUF/8EF';^<UJ%.iaEr84MbOK[4-k19<J-:9#::A4C;ReAtI%9hh[N(n">PLSdL0;.I[Q<@K[)!o?VIaG=3&1_0\"A?#VWEYTcCbFY?KOHhG/4JN4F%)&T]5WQ.>9#&tEY)ce+;!uoffgJrpJ%*Dhgn#&K_fa/+(dilW/8*Ss:$sC$%o[-XZ.!4q<+@:g?#)^BY,fha\%p<XIJW0LkE'.*M%$m#lC^*`\dn,R-o=8=S\.g\OF<IKh+:O:j:;oNc.pd.u.$t=A[@[m'.jtMMH`mS?[9&U>mX3+ql1l:FYnsD^Rc_T3X`sb;N2NOZS%MSlNMm9"ZCQ]&rbYL6qY%+o6_o[p*R,X!KV2@\)EHnq]B=%tDZZK*`9[)WS'+MmV5*(Omn%*0n^2RJFna/"ubh]b;)9>S;Wnm_l_%Z#kFbnmc>I?.Z)@Ambg(lNdACZq(87=F[F=#6N:3rA!>4W.(I*L/rStW]t)lInres.R7T6,!8O&aGa2lZR.pA+s0iJ2?>QeoH8Ek%U-AiK+]!ZkW]p\+,#K\g!b@$`8!HF]$'9_V8>OX4IuFj7E%4),o9b4oOWOZ/&.(4`rg3`^OE5lN5A"#]C@\#^B#mRdd\&g:i.-(;%8rrVb$l/W_+?sIk!5]39@q];Mp-a?<otobuYOZ16MkWo#8:JcZ!Y28&Poh5P(hL[dr"t>7+J:EN+%+NjWL6J/bYZ*?HAALbL(G\g%bfBQi+:s_IT_`//1J8l$qIAS0_^eLS`s`]p_(K!c`sa.$P[59oNu;P7g,S;W)=k,FIaB0(MiUg00h\@7*!Z'j#&gW9MN=HA7eG)D%/&L:>1N28_jO'aFdTCmU]EhIJ;"69gnhE+$`Q+cCTp)?;-EWgZeAm;:<V8)WAZX!2[33@fC@8)c2EZH=)O%WM2&s'MBWWC)7+DtZ%_8kPFlrqP/=7J#_n,a%P'd(<u@;XFpHOTL;GcXnl%##^"_lVR%QFojEDT:C?aMnrk\S@1V$pm9><I;q&'oII74U01Tdq:aUO+G6q%JZcS!NsPtu^S3k\$:7TF;sc<DJI,"P[E"6tPo+cl5%^<`frlkhL)-J\Y2Wpq735F$)N0Z-j%7nhX8!N'Yt3"o(*<WOJ<2ionM+ao%EE.C&3--W7#%dp6NN;&K@/c>);\^ClH7I^PA+;9)]qX[p`Q,3o=f8Pm9md@RP7fRMpm<5`AEjEi0gd/,OJh)JL-S.n#OsNb'W/'%%7k-]W7RgpXp_XMT72Qa]__._t/u/2*p9;gQdUS$]cSc3[@tluJ/l)XZ$mg"i)5P=Jq4_1gc30=c)/I7?@p%Mh0]/\HYQN)<*_VP3%UoP0bX3tL^A!lT9UrNnfBW#K$l*7=(X&XBQp$I?ON-*+u1,J<rb)X<$cPgCC7p,%68TQFD-;m3Fcl@\,!ssNXEX_YE9QmEq`Y%@m%+?5*MhO?fK/;C/B2GtJ]3Z0_jX4S8H1b%!S[DlVKYu5cs22:l//!m<bR-D9E_+p67d)mX*VDO#C6g<a51hO<[KuQ_pBQ\EPWm[78%AhP(RU,7T/ObFi,NT!5Y]NBm-?qF1,U$@Ta85WZV-8Ypq5%72cB.VP'G1@JBjE9@9=aX$T(n;:P,>Mdh@+I*B[u$!Y<"u=cTd>On%aB5t\ZUG_V<T$LgLs)e&R%0M?;IR(_lDk/D0d)O-r2\Dc/2aNtP;>eSj[[p8K,^E?dMq%S05atpR,eOY)SSe%OdOBI0W,OnQ>.%9%(ddftM12PR(e]gM&83=CAf8o$Al'<h\LZ6dM8C)<`L^:0<>\(TP\B>]Ke_5M_6M^-UbG:+?d`Pb^_duSoO9("ApP2uCD(-Yd5?Ql%R&MjZ'7hl#/d6uu`#+^2l@Nr]CcJ\;F=].Y>4G+J(__d5eKts07JPFlY&#LWl!mk3<>[O)/d_5N@E^E3QDO^nL7oV0#D"Uua%R<e%$]O%(RaOo<$l6UV]MsG:6fr\2VZL?^d-0XMJMBOW$g4Ag@tmk[39Z:J5(J@<oYj)"C.'@aUb>3O<^YMFou.>tr*qtTM]&=_AETle%@V?L9dAejS(@&dqI5/)_Hp#dmK7OShc%K;N;OuaG04mbYPOg&pT=6XBCT>+9@:[O5WP04n0?FO$qI4+mU+)r8@\bcU1H<r%1Q^3\%Q&QEi6#iE&-h:^H0c1=;nmYi1;,Gd'`F'dl<+_jXB#ms,Va4\6TGHB4,pipqdGd#Wg+lQ#Vcm1s?48F&\l.Y/%%0Fb75C#Bj"2^O%;WYl2\r`8Wb)7-8QC=ea(uA.G5cVD_OI6.h)lnmj<K-+@/k.$:%(2rb`g0AjJYk&3RL!t7(P>(MBWJ+jd:nq)BV[6b,?D&&W\0%^%M#l6Y/nV&\S\e?2%'AB>6!MQ8.O5JO@YUtSG,d**aB]e^6!4WBDK;'JAMLimLma<h`Rr>`[jm<@K`]\&=c=qolC02[_&gnG\#IMZ%"rCn:iE04kXhkHGV8\B<\=Nn=0`u:ElGZb70uKB/k*N?Y##8V\H!VsP`aeq(ZC!qp?D93/VJkJjNcO0[/;?Z&62EuP$jOBnKiDV<%j-?.-.>o(l2cc*6W[n?m7&3\\[MU?q-kMEH`R$+*FB)TT;d]$NW\0#p6duObl=+EANUWr#L)0;!X1B->Go>NWbDY>9-2Bmh`UHdA%@^M3X`TYQk>#d%*Ag@Qo#C/%/9!_blnmZihaZ-?l@U'4"&urU36-+e@j%*JbNI;eb`<=%6K=2V`s%^DtVCdP-:"BHt(*eMoZY@J6%@b@rQ7an``Lgs<6Z"f17-F60'eJ87L\mZe'eJ:NmMTFUU>KinC<E@)XE2M]h<H0_nC=HjdLl:5K<J4&r`DBSg^f],'';B^jVYXaK%.s5=M(LpT2r2cbK"tRQ7_+jR@?u/YnZg!AKGn\/qW\6gV!OAedou1$D^f7;508:Fe"<Qle&WrjI?M28c1(^f"N"oR0-d@IP^)/CL%;/WT6@R+(pjO<b?=>EXNk-;W;b00#l2gmDG6nprLYj.-L<dAFnWTf<A&L'2>ji(%-9au]O01L5;"Gsaq^)1#W0!57cL9t3Sl\PIY%Eh]?DV?16aBg&"X'c8`c.'kjsmEgsJ%Aqc[?qarWZJVXs(qKIQ,``,K8<#*=EYTE96q;?r$B1*d3bb$nj_+YP-f@Z5(deZk=IR$m%e8l:^)[VI+ecF^b<FCb2"3b-j$]M?,he8"E(`)<l5&1lMj#:Vbr`EQeJdnt\K>8>IYW5n,!b3X/nfYVa!b8%)$!KqLm*>r(:t0;4%0LgX5g\$37(hobDN`ZJ)8<b?#*smmg?_>2p<FLjZ-WI@R&n?0D-mE[VM(t<3ola.K_seF6^TkWmAL@1XWkt.1,W@-1nP!X7.?'B?%7bB.i@>p.G,,[7q(di)9&=Ela+m3$^'s#+eX'Wa7)@;A]/'*lU"i`qW,56`*(llEPS*5bRKf`1FYNh&9Q97k&`K2f,ZX>=;`c<Pt%1f[k@/BbC*WkK=8J_:!4JME=8dVPrcA&N/P`,@5+`7Pf$7g-iq,?>[;IUDr7<`?o)_O,S.X:A*]1!5VL"c4^fOb0/R`FFTVnjZS]%?D/2[+fY3g`gB:7okpca"p,:#O>MqO;+4)%Q*F=br^PDsK.=[X#t<HcX>39%-GF7q)3^Z1S5kh//:C8^B\Rp/DG1Ia&/h8.$r)g5%1.LdN0dfI@A(2og4>TtTULHiuAKIBlXiQ_DX,PI%m1huuN\VSs*Ug!`G53`YZ6u9+b1LparpoDOTDm[Fn<_U*H7"(Gr;PZ5ZdZ,#%93d_UGlCs:pQn+0V\oBkfb\SsQRmX>5C`_$9tehB?S$\4k`80irV9U*ppBtVpV/n=s3*#XIJ\sp8,U^-^Qfo@\,>:$9%0sO^\E3H%+91"G?K(CWT085X,NO?FZldr6:_`a=/bjn1pY+bMb00<t?9UHij5:fhIYJ2ciXb^tfl@U5OkM,&cptW9#:a"e'-.J`@dO6:H+9Sg%nbo@e5Cu"u$D3<Mm$j:#HNCZYO4Ru,IeZ9.fr(%uASUh5lQ[.?2j^[SRkJ&3CZ=0mokQ@Ds%^:R)'kD!^<o2"CBfC$E?L@u&b,rY%/HLbnR5U8V/a*1b'66fO4oOKm=1s@iik_HSIN1O3h>,R(4scUlbGI$ObG0EKWU]#R*,'ShX9#.6dru4qnN`m(+ppn@J+`NhbhJo>%NBrNSN+^!5$[=!0;Bq\fB`s2.d]`EK6hA["/'gL*p2oOZC9p#-I%Yq91p63kkFI+JaAeWc:7n:=?iM*ClL.cG6_!0tJsZj3ZZHgm%.0%hmEadBUH&eSDjZ1bn7Z@ZFcs/6qEi%FpXT+fCJHi/;LLD9ahF$"'XLtpII_]Lnme$/0AGKuV<_Vh5S':)3=*<!J]WB"I7m4ep%=q<4X?c+(:\ODkXpWrj9WcQX6n'IB\9=I'uqUFP<Dk?nh=+n1f%*GTiTo#t:H[U1DiYX0t3],oJ+PDUP7qm#bc0Z$5"bBG&'l(qQ%WgX(!H<"grHrWusUrcWE"c*),c`0F]`kd.Spc+XghU)R"UJFib\<d_Yf9Y0N^Q,\N/u_!ug2*sJ[[*1G&R"<X9C!ZpVTm#6-[]^L%<ukIFYF9$(?G1)heuK:Qke#6WY+,3q[f9#KJ,8<brq=s=j)UQ#+1H_8S+bn25C`LJfrHFu3AG]\rPL"@O8aEFHs6OA]KFd@d?!`L%QLA5"(45lT@-*3^2b1olcBgAjmGd0@T3_qU_gbtip3);-IFS40A=8L>puUH/]c?UhCQ?3)LBDL"50(Q)Go=B_TDdB:<u5f+5JJ95%i:$1"hgbFnq!FQ'+3`Ft3I8+42/pcl^Ve`cs0Xu%fKX_4qPl[4rn2G3AU'KlS-7`?*aQE_s%\c1[r[YE=W[P6k$n:ieDhVJ/N.j/%hpt$kDfrACr.*P-ZIuYSI/<j'bJT6j?^;W>_ssuBrr"J+TE"]cG^4VF>l.9:cFUKa=+9*%3'I0$iooCk\cmA(Mg%;MgS<e'50`0H%LS%dt?!-tf59@IArq1[7hs\`IggI"]*<%AHD='EU0AjH-hI+m7a)/,*>k>2^L50'HfdsmD2g^:7]qM>Gp_+X<Y5J?5DjTVl(MDps%5J_="K+FescJG080)p*DnFk,SiHca3]!i_"3N(Um,E>O&gN+^&D]`sO]JquuHhQmk@[!d1*tLVHDXG,%rbVCVn]C,Obmr41%[3M*%VV,CH*N$Grl1ItiB,mf#k6L,*a'Y>W]pi<).phAC?)I:6fBb6:*n0L?_<`o$*n0I1D5##Bh!VDmjI_+O[(lNMH2PpVK3)^#mW,7?%UT^rqcG`9EiT[lhZEMZ&hq_RT]oVgRimh\b?]HtNFhJq^55N*&kJuWWfBk.OBX[p-i;L937gGshf>#io)QrDHe>j%%a&e>,4`9cQ%)_>O'*lDLBB]sC%3ct)lot0>)%0M"`Vsft"V]D59lf5_JhOhPH3*^oRG]::r`&'XR_8k%[llfoJ*M+:DScA#ZDm";1`nT<f)nh[[%2UCqu4oN"%bJQ!j?T09[cP1luW5/7\<8R<Hn\P$.rqZ9SFEtI6gKZr&iSSG2f6VF[qX3A$2Qo!.YtJ-so?_XG5PCChqo(AGjQZ\W%rR:em@m%HXkiqQ]Zb.))i2a2Zdu0P3\a]=q\1PJC$2@Em_]?$RSdG\9l,L3?488-XNm0lZ/c?/@j($jKc/4gY]m`QQq)UTJeFbe5%$gj^]2]2EV5K;(-T\$A75K8cP\$O]B#*80niR&1]O"T:Z/2&o;I."pBp-aMCS+"C%]9OBY?$pd6FKGZ=8);@3a0WD^jLP(KHDF@2%q==H]-2MM7b`If3d$*bnqg3iRTB(VJVEaGt^gtZQ81/\&G':NJ^0LZ`qY7kWk)qjo/GuE..'q$"4M=-#Za[Yjq>B1$dJFB-@6O&;%*P(!3)."=(+)DMag`c]=a-3[W5Pi\#CnI>j^O:0HI.l%cASZWDs!P&oD30]?01ahOQa_,UH9qd!41Pb_hrS[l*R;7RUl8qjVsO7t%hjHL:F6SfOY.#=XGKatZ?ak1)Y>7f^laS&79qGr;p\GcA@s-QGXB@Wk@I.M>pN;<!UC"571ArG/dJp`U%H^sbOfXQ0btco!e80Pr%s/51fqA4&[:/@4sh^jhTLDqBOQd9pGfD9fAYjp;JFnptdgEf$FHM@..i,EtI4MCOfi9_"k(#>V`B6!1.B(F9U?]b<A^tu*34oG/\%_gH*dm"jE-X.1/o9<A^6Dmeo9_:[EYS+["X'0j7rUMSs_p#C@bI!]Mp"tS$.cJB#Qo6-"n@JqmkO,:M$ZY4u020;6umh^B9FoARc%p`j;sT.UZ*-aje_p@.[[%2'II7m9$dFIaR46A;(kZ2kjhLM\2dH?$C0G(92kO+)Cu\fN:`JH"R*)hQ5mR5$briBP9WU%E(%Xqs+^%iFC]a^E3<]rXI"RHuX,>fqL&'4ou5/;6oBNUZ:Bo;Bq5Ei>p41oQ/V[N`WEE/rkD6A88Ir\'VF+I=?@F_7/?"O(?NXS0"5;Z3K,`%(B0?B76Su/Rg*jlVa3G"4gRG`mgK9%F(l2@4.HM[aaDpq6,*H`d$t=qk<[lp*lQNk!8Co3g6jO&-PIZS>BsGE#][AlM%I;3mqlNP%Ci:N9#,>d*KU<DrmU;H,6AZ99kpA_:mVjAg-9L4qmOD!U&RpBtZSON,DC.[imVjAg-7dENcJBq7#dM3"g6meF=&Fe0alD#a&_M=P%4jmEd709YeZI%`_^\`JpbEDT?kk=n#J4I3HmPC_gqY)'q,DX2JGDXH/cAo43VR5a_,u9@"jM"0)+)>l/%@P5K5i'(<`BWDb[Jm;k%"_qA:jot$)(T>*=Q\O1Dg=>k1M9e+6:\4/LUmJ"4I%$D"H$PjFVla0p`aOlLmP9O340-kZCWGm5!,J/LS'6udLR]ORhg1k;J(,>K%\j]_n^EtW1od2,(UI-+e6hKh3I!,)-jmcEm#J^5A__lEE/#'=2$e`+"\?e:4n(rYq@dRCe"Ad"al)Wq3UXSN4oZ#QPDjL\FT5?nP%0KSjbe%?IY'AG*4.0&*Tb5Zlfra#NtPOaLJmcXT;5-`2X@coEaI#sbfj$BUq:<p!gXI/64*m=-3SDRd[m$8_P;HM[TC\12S?/;t#%]T"0$&!sBri0Nf[Lb*AN4DjE.^27+cHY[`(nG">nn2iG8mmKqLTfo-Xh>d(hkgHEqEQf2a,lPBl"ShdI`r?7VIU0$fr9/SkHi:N\%TCJ\ga)KYUO"T:Z/2&n`4*P-i]@ACBjdXu$2YTs_BhsO9m8!A^h1=C#pD(/%o45#8RNn-Q(pVk)7`.5qH$-kafne`g@b-$T&PK9h%LfrI"PKh\%3D);%.<"l;F-L^*;U/.^3D-h6(?ca7]](7".-2GFr,$_,I.lm[cZ":(e!l9dpZI=)^g$h!<fc-)bl-)>ldtU_/RP$=%QG**9K->F&KIqR#R0MPb7T)B0pu/oJorHdCo@IR2hsbK[7mHe7kig[T/TS>\r0qm0;q>^=BT\l@V&<4C2`p#_T?`eHdne+aZM^N2%j3^Y8TDW_OG.bK_jF$dgPI'k5dq_;i1YD>MDt(]\VHL0E#+K5/km;o8EICAeH!Gf7L3&:`IJC3!YCDgis#E,cIrV#?f6ARk"!8!6%q!<gNmn6cOO-LjXR@*h(e_8iQ@9nhb-]#,l0h6]%rSVm<Q\WNi427C=nLY_aqS%ITkM'IpD?Aj(53!6LUDpu"k4%Hn1M5u_`\(li%@\Yj`;Ba\H!Z?YFB'a!H/nXHZ`\(li@`C$4m,H<pMoRM'mk?Bk#DQR!;'09QZ'V@dNdhuQIqqo=-W7a)^L550XY[RkP.s;:osU1I%Dc#%LQfLBNUX(7^gW@gJV-DZnq1%/2SK/eXI!'CM/_3&QA_XLID<kLde'#u-14SN$CuZ7PCU^S'\X-O8Q-HZk]1OT[q%oPMAN"jb%8%SNa;p'LapE.+pF7AJ]f3'rig3;7R$C3&:(qcFYBJ'^b$\NBl&_7>f]t/(j).t8no+B!g#*6K)<fk@<kKr,?Fm/2blZ^M[%.s/Q%X3K5FSXIK)o%j9^[eC#Sa!YGODp*?LC8.l;+104?cuTm"[!!!u?kYYW8RQqTrn2caHF6<kP90GUmkFO11DT,.Ics.[1:P(JHaDKU%K<$$ei,>mJ4Q!r)rbY++*rOd3)%"r%(LfmsJ@rKb^]oi`,6;$.612rRSrnOfNZ5P]hdJtUmbn1Y,iElkU)+'(AF7Tik`3VL%sJjp%35!F>OmSos3.6;Ijl+1p0:UIXO,n_YGBnUc;!rc0`S&WCq9X05](`2UIdgP4D_@&&%^,s<a'LV5qtB5uPE.L[pu+#7pXZ[Nr-7^K%q:G6"J%o?^*cBmYXW7?0'7]tToos`/2u-W5F\7(UR6'G)(R+Nd";b\iXRBe_ZFW7H-BX]eA0qrB%3god1jE?!T:Kff20dX%1SNS3%@e/p`o,lj3(CO`>@'catqQPfX^9+!oI;qD4&p/Dg17T4F]Q-17e';P;F\a3>BNWE,\?7N-#LL2_SOp318DEu7U(,u<l/`MZcT0Vq%+ST?9br<PMNsOch:CbFaG^DJs,.#>^L`Y#76YZ7^AtNf2RC9noh'nt1rO+fb9XE&%qb23;Z+VqWe"$?Ah-SS,Tf+u,ZdX$.:G=k)%X2`EN1sJeEUJK(rAr#3>n0HedIm6#Ap!``Q"q0MY1HgWA[)k#VHCnoHM>m.[VTh_$[rl"?&`39Trkr&]5?HXtopFIeMYeFVhE/?K%Y'UBhe<r%!>F2&@cPZ/u+Qd[KgI7"q?[k1%3;iT9Kf#@64ZGR8q!DEI_9q+Fr3haC],^P63OKe49lKE8hsBlWAr?L$_eY$>a?)/^%^"D^,oMfeQ%B&b1gA86[HK-GmjL_?<p$8)Al:m=>dIm<0F(t7q<f_`TjD)B'+c:(hc;#gY]7JS=HGUH3PY?XH%M(HPXX49;prfbb%PBlp%r:RnbEl5AS*rY$#Za%='[dNk$m2p6"rD/jF+[-o\H+/6FfG/,r]4=T],eIY-[,jN9$,2&?nk[cPH=HdGDJt%!.lG(iA7tR`%s74LFB;`pIXS9nNCn^Z2+*)G#jRO1p`A1XK^X$AW%@4VNL2V0Gm\%Pi<.Nl\W>0@9ep^tOX'>KRB#+.<XcT0Y4(Qk639K2C1Y+ee%#35aH`u+dp4Sj1DoC8UQm<nQlG[e[RmN1?7&'g4ghOH,UTd&BN%IJut7;e'LDsqjMp#kMOlr!**GBY^p?lP^3ZH)2%Gq[pX'm+6#%Z.lgUo2`;(>M8G;W3Zi_G'o'l=OD;bp[@POG3IC>$$Fm'AE_&-R<_j$m%'^j3TXFVOr^p)G*6^]/3<aU<W?ecCVLM^[D>P:a)1F(%gY+7BjIfam4_;K20@52!VnTbda(Yc+4q!]@^ZjKhj32uc7bAA!%!\4p5!)@Vn9g"Z".l^*(q5eli1?U0#C_RaT5`oKcB[<PPn^@F%NMi[20=EhY!:1]oo'MY#%Gf"]p8u'If$4c3J\9u;=g[58ni4M7ZUt%ip(%S1mp@`os*Aed3"Ws8HqV(R++Uj\q!iV)D];#aPCjtT%]CPB6$uJ/UipbRoVh\XJd&O=:(>WF@93XKDrjGI0aiqrV(([8?a%B4%97]^`DpJqhhn@ls%"3KBoM\$dDIkkGXT<\$XT#?A%ch1B%c'FpJ"8s"ZT_e<Up^cahgi>[*H$OV!QZjN1^Qmg"T0E4cl$iENl)U[DJu4'a+20]rrMj+Slm^8WH%5Y=dHUE:cb=Y)fAN:8q<d7`%Zf>[?Q*5Q.lf.$sou3PqFc0&=s*aq5ZhOAn\+oOIOD4:aDro%>/cYULde)kBFGnH]s7)`;iY>5aqUoq.6GH&<KtX]M_9Whi>jQ<E%.kQ0Nr\p8#mmYjiTuD1hEVOAFBt^#s^5-o7/qU^V&"_d?>\lC8VU^T<9>-8]*'Zp)8:/kF?!]YJs7'5dZIs_+^A(4US`8tJ>5WJk%nEQt)9++ttVWZcAf9so"T7>1@Cs/qRkO&)Jo=]=Ar:g1dc^`h_ffT1\?@VIIHX67b&*N]"9l[Ffo'CM0qu2'?*rf,%8NAW\b^6i2%9Y`kdQYg!cp+c.3_2#2>pdZF<KRZCZHn^KI&"X4n-srsdHJc[e/a/]UIFn/;[GRhD?9H[YkVo(f5.Q'=U"?"Y>Ws/];ZGBne!'=6%?(!oH[r!MYA(>4@na*I@$[akF7c+DS9J/sGY%QgA0q%!E]:"d/EAlB6-7>-555P%pE-XrdZY=orBmMO`%ipn3[r!MYA(>4@0n+\?%jV.[;GL+"`./X"oZafeoc\q8lrGi";jCb!Kj_U:W@V6nQ=!"6b?94g>VK,$t)!gn$lO9DjN2mG*-LTRD9q'5/QW^!kR"XQ7n_LjC%J!P<A-]=PnP:+;mCXp1bahletcKY%=P.P6LO&d0O4K]*PYa7$I;ji6Nn[rttbFM>Ca\Y#<#,uHh*6+\E%+<$S8?E2=3V5k1gqE=-%,Ou9spDmoB<Du!U5F;1U]&$ig4tf_";FkA.]:@&(>++$>Im_(/7^j0R`]uA-f%Y5snjIooAB<j&7$3C,=l+Jb(>k`H1M%F0*aP3-%P!c-PF_^.I'DQj:h_V^"\,F2T^?bcqG:c=QdbgnMUYX+epUI9,9Ac"Plh9moQWP-4=6q2]nMuA$R<Y<ae<RZ>;($E5_]p$US$I-i%kis)B-`dRXhonP1`?A]<g%'s0o/[=NP5nmP3=1(9;LRJdOuUtG'U55F3\l>[*eX4,cjAR9T3^7<H_!.E:hE>'a-V)!"\aT`h^bnO%[]"+TqD&RjQH.3mY:F)pXl\56-hF:<*eqib)P%;hb8k_Mm=:J(-od\/8$&&jXUL`*TXmc@[VSeno-WS5^ANVU30cd?;OPQ\iEUZn%gnUKiktp[i8$"4R"MAgO$I6Vk:G%'<S]>"$bF0K8jbWlN]C'T`f<PV8Z3d8CHs%f=9H?UhT7/1HmD["Gs3hLL)KN'D(5HjihOhMc%]R+_hG.BT+IJU_$;8it@iMqUc:<fS-X7j^*L[k"1L'<<o4CfOn%0+mn9mOXJUFs[`/)sNN-m#+tAVodJ8dDnM6s7)o0Ca6(AW@dC%>hmN26Y!BPb3H%VV&\f[`TV>[YKT#[Wlcf/\Y%^VF>833,A!V=J5E+90DeK^Vu1jP?RWNY&j%M2k]OTRqnP5JUWN]8`Mg7>?bX7\%PIB&Gf?T]#fhuE3jqME#g&."gh,^DJ?_&b0K@jF@0,D[j]$f!F@WSAQ(XHqQc#fX/]+"Q^\?\kp*O/9QM]iunbf^3\Mii25M</ZL%n&o>l96d]a/6CL8]B0$H\$T9:\Ztj>,)/9U(A=4eolnaYRhg6$AG?.9'C"hgY%&@Z03^fsF'd!3>kq5$a`,o)#IaVXOn!9phRJK1%s7A"e]8l49o[@skb`fc"^TsYW@MKAs.\Epbi2;&4EmrHH2kRa4`Q;\+PnRQ`O8AarL$>AqAJHVGZ&^,*EI\#;_o)3r?_:W2U]Fbk%DVg?@jrWoJQVlA$Ns5h6ojtnt5Dm3S2P.5<Q?>@@-TS\!4ObZ=Br5iPX^8FXA[@V`i)Y;o2L>3m5E$'Y]eg/`]6WF`ksbbV]D<l)%Oc^A[hho-;d[0FIaq$N!o]g'DMi[VYcAoH/Ks-O9\NKk+H2`,8GTi+Is#E&eFZeL053+JK3CW;rkN-W&V.*@"N;mf?^\#QR0+X'h%lb<:^(NEe&>[/i+:]#'jO+\I[o[;XBO'_e"HBBoJ`:`&lQTlM(]/XF.I]MZ>\*Wg)ogjA$^V)jX-0WmOI^#.l#KG!ZMr@"hJ@_6[%3/\n)=(!AI^OLHL35[$u>Va2C:BE-\Mg,CX0pgi3ZO3%dm=@nc9oTn/,RhTTp5k,Z8B<&*GQBo!HLSf/#ap@j+HnoQ-F^bUA]Wr$%]*`)3)e<FG&i'd.(G\Q`6RFQ#<Zi(U5`gi[(c&?86RLam+HqOFjNHIMNX`YB"(\.YL$c'-PDG'2Le5fl+=8&bFFV2t&hn$=M4NUg%k;U:)jsmmZb](Z4Q`Pa20Y1>OIpLb3oI/:6.%g1.@3Rs1N1qEHeMC;!0ojZll]YIgBnqr;*P;FafrH&p?FG60DB""@=o!Up3M^[]%Bh?a9Fcjr1@b=B$<^$`.E%Jn(L2Aq'=8OAuZASC&B^gFN.u8p'hn)OPe&Gic"^0-o<7E@$<oo!C-_9^b>bHK,*3@dN8`s&u.bDch%;3l?kNET^rV_dLr/:1rqo]6-f_Z92s<YkSCQ)uF0W3_i81i9KB=W)m=<5LE[O([0uXjqVeqi'IB_:-"n6eR`PlY)od-".+rn'\E$%Q)([04'D<3ZEQ>PdZn7V`sSYQ6dT=KhfDC+H_>OJYmeU_/o@/S0jjX>neLf)6@#ltpgIEqa(j(i4(.5[B,>?]f;Go'G\PB5$dl?r%YNC2r6Yf&j^.u%A5%=>l7TW`.Fn$n$h!=d4'i?JqNj?r)-Gr&c2DmQpDW_2[.go5cPP6iFBCPTmU+EuhiQhkMV)J=qO=2or,(4%2%P]:olZ"6!OAZJhlDmSctYJ2]eAsnWr[&EmTKMBh!ioV&l<nA!4GNghHlakI+lpg2C4/O4)Iem-I,J%N1\Lo+<Hd"n6CcAF/diVlc%Y>_CC8=#RCZ`lDf=gl%>Fs-EMfk>C9H=0lHF;]&]!Bi=DEEIa<fV$-qbadf0fD4Yth>-#'os/+nM,W3SKe,tJ7s3umYqYjM*:./F%GKq12#!uN`b'[,`cXIcS.?m2]<MX`%2bBlNEAm+HBI5iHR\O]7dE0^F9O1)#[?p^AANO'>$m+8df*j/C8QrF,^g>ClK71SUm-1jl%:arTK#'b.JlRLnuMWh<1@FT0EX,,6d*FPp)QHk;$68[GO*f0-_AM0ip=dr<NNj3.5a`SUS<i=D(2oiLgKXQi(0!aI?@!kGSCADou%7M5p!m=Te'%kICYN_Ll/=_TL[cXM#0r1hIdU9<%@S>"Q*K3g3s1\*ROY;>bG'TcBu`%/pp$L0Z<>dk)Xc)YNYs#k%rGndXY)Y!;%%Zo(q?1N%rUp/doh)rGdfe%5t@RO[$[o3J)mrqE.hnOg/g#QG.bb!a2R5[3'aBWKf'D>!XY[`/Z%jr8ise::>5)VW?=6fc_P!4NU<%'Y)[(E9lo[]"dK8J[]r.m"r6`)0((R1ZI+oKt):^i]8<eCCjPcUdbfV/"kL3nWVmh>c#tE@oc_kTVQ&'NERn'!e:j$'3Ed>d):O:%m*2KJW5H5f0k3]kD#Eh75"jQ9679cLl+,m*Ah&.8kiIt=h^RT'N!,BjF%/'N+^;HmR]-ZFNI\3a:68>ZgZt#qRcQ_9&je\4mp_bp%3=?R"N#;LHoU/qm$F:T,eRp@Y6W]CUT=[/I]r.&nG)9VOC?+BkL?;r^.4bcA?XSo"5Y'SZI<26k?Bh&2c3MA9L\b.@`E=^1<U;Uk%84$I)Yf+2eFQ/9OKk5/Ug]Q'Uj?a[M<T%Alp0_U$s!;25aq62uRS*uLQM6I>WhTju=p5nt?#0J[CLPUC?.t>dd_B%>5hohll,;-B%!/k?j@0V8W12]1Y#lk9l\iH$U/?"mJZ!+lk5QT8S2>/![Gj3ZB5"m\/J=c"\0u]Uif6eHOcsMAJMhRp%^`JIM'i"fl?%&ZtjVB;(%^<tZ8m]X=(I&qe&kZuoU8#tD5cc@Z\mn*E(R/u3q"`S.[AJE:'_MfH\oThShKM>&6L!,b;lD9FYAS^kWCP;dVk;\qCQj@j!b5_j3%c@"OU"6=1#86K6.l=uX(TUe!,S!t>A))[at46Zoh>PUrs:IE`754!X,Y'dd^HtBVZ[Mjq0o&[1JRC[?_EJo\t*irXaS35HNge2`]%(-/GoCWjku$iQp9W[j]Nd=#/.8'0@JHpdja[Olo0mDiS8SZ*,!>qHNn!DDc%]$Ptu\i?))K-[LU6Ot!6-AE<mZRu`,\QrJ\/mVY$%J#`l0K>+r+qL3PeD8j+RI6C9VbJ5d#TAPJ'(([,I<rg&+1'$*P;[g1,3/)qVYR(p^-V3ajSnm9Bq>ulT]K]6FO$R3('e!ne',6a]%\V(AaoCE8N4M\qD4'+/rMHj/?R"ZQEcKqA`T23hniNNo)Ce'TWk\_X#\4/"gDVQ:Znnsd+jO$&M@H;V.J0g,?WEA`d.0`$tXT6Lm%jdlA6SO_&tE7bG':*Y.3gr!k&4CaIujdl:rBp4jp_4:D'Z[F>l2pV++PI<*)-f?iE2m&b"Z#u$kdJA1nNuj<b!MpNJR"Eat'>=lI%$iVj^V+9RRjT1.ah+,T&_kA<6qXP%t!NIH=^608e>mXO*G7%>_`JiV1Q-$(oEGA$e:ro"(gpKDTY<]L63;)ZW\\I)T"f:o%V0;Ts%':f!N.!:N&NDXFl'Agbi_8W:b1+,%>P^3J3q%_]0?O=C@($$sJ5]>To<1Oq,4\?+m=(0Y<b1'h@iE-,]oA[p\]'j+nX-.Ql6]LKp%bi!:+B#tI!:j"NPeP`T_l(uV^CMkVue,rU>FoeS&=!H17"fWP$Tb1Nm=ocU1FZXa]\;lo,CWuOR;M?Ec\=+mpk;,ZUCIotBU=Y:Q%:XSLT?]ACd=.n0/[as&SM-_R-:bjdLf0dYo5d.L\aU$*tMdGS(?4YueXm`d7i>i52LYT[\o0M=-oa/Nmhb'S:aW[_\FW?6DoqYZ<%aC.$*<-HQ2Ahd7YLJ)MM\$1Cqb+p_o_H$`-G($S%RJ"OQJ:BUD!XYpH*"f"5`bXpJG7@qP#"\O9TpS2be0!P.qSW2-(Bh5<j1b@7%K[p(;fGM@2O%ADfrg6r#s12uNd2uF.aM/N7A7m>X(aW`q#95h8emH%S+**_k;grfp+%DT)oXLJ-r5t(HM+b&F`1\2f42jUJpg<oo%6(U#J(M@f(hjiCZVtQ*6rm%D7boCg]#MmTi2fm?j*-;WLR5sI`,:,,Nh43JK#:Y*@-292@X\WDXPWc$-Tb2LVZD^:B9!&abW$oB&%E5'ob3n(-V.jNpFS.dbV'?VgU6rCX!=2)GUm@<*;ONZr:\Ato06jZ>IB1T_f_%qno@VI`hUu!pZCYt1W0[-)r4P(Q+j(2u5hZf`a%W^a7PriY_^?)8k6F]lnnlSXZh;!kF\rLtXL"N_f/;D<LfVOcbZkr%S3hGp`+NLoLucr+[LC[6H(GEVSrenr13nftm,@/6mQjjMu!%fYofm9DIMB2>btkAM#>u[7f4eN7<HF`q!EK2Wif/.g'QL4irJdFX<5To\n8gqM&j3Zr)MmCYLl%R0;llc1I2CgFkTJXn5[gm:r2(%qip634dl%bb5KHdd+GhI]%81/PL5"DG(Q'4mnq9)hA^%&_DMJ<TiC@Tcr];5(nr@<RUmYaO]BXSdoD$MeEA4)lL<K6)0Z?qkLZcO%X=@GT=cAuG2:`E6CoRfmN]##fRp:&K)rH-Y*?MUoEr8h%45b)AS`E6Br1r:ZP6!9fAZLaK1k<<U$K]-HU046)%=KH:F3U&0^$Jrp%PJ@f/JV3*tFTAkJNUR(GDLA3k"9(mVBmBQHPge2HTHeSV?[\bZrl:>9.1^<2:drgjHE\HlG(q??q+Dah=3a-qS!p9b[gfBs5"Qkt%l:4X%al<0HSfTo?`AX-uii$kP*M_bjlcS9;ArUa-Mp]q_2#8QdZ._-N&$Fg;YC'tI*XOJPFiIVSfjH[Tr!(.;\K[6FQrAN=(;<_;%>Vl1:h`4,tMmnTBF`Kl<*Iek?ID4qaqq#*U7NrHi-5jdF9E&3*#,S)SJ-JSY\nW.2N1E?ob)Y:5KX:GaC:&l/M$6r)9rfV;#>YYU%^X+9&(Ct<9ZInKGDKU/8nN/DZ[VV<?f',@^CtVr7Lpl@l,VBJ&Bl3BWQHOHPV>VASm5N*/)H`]TVd3ea8P1PLnM@nV&H\&;=8[N@%G#$kd.t[g79nR0CGVd$F%D;;8$:KlFm,cRqAed7YC[fG\^&FkS=SHXfK:EV+)=0>o1pB!IB&tZ7@\0pR(fsdRg>UJICH=`-(9:TR%prq<Fn%P0:G#PZM2Dcm8$X9,Ac2l?2gTA%JU.UoFL'>W+WtBN?Am5LMh3\$/DP)"%)V\k`JM\6&AJgS3@FT=smki0"bK]pug3LDa%)R8pA('57gIP.R#9XQ:d#m\eT0pI-e*o>7[3jDAu=,#lSZG:nU$!LhMM9'-kO,bfHP9\@6\nGlKgj`uX*jo9onktf8i)"`sOqht1%&#DIR0eFtPZFc`%7=l71Bf``mqaKn=^)g,\p$tsj,3q6dR$M-?e6RB6%-(W>BXVac.i7QHm#C\E&RgGHU5QrDjf>ph+5EeJT_;'?%\qnn^W4V\u%e;,_Q0E+K*NhG,=Agr@V4tL`#pos6jQk8>SR8n(7^"dd*-]H%H0DgpC\hjqlX,U0:,l-Pf=QT6]KWiS8&+VcrHKU#%\C;B*,JQ:PpBSgZ5!Jc/;,X[Zd.3R/\k6l5BR/4q,BigMGQ%C_G5%88]j1ZOhig\27uHKc8&Fn`iOt]nVQWa\Ncoa$Q:Li?K$Yb"%'^`d`@^OJ;/YC'@2n`9VO#biO#Q*Xkh]2!p51k'b7eG^Dq[dV+r+*-*jNS1N^/Q=qq1`9aWkgkXA45>KNr'dP;.=r*eFt*mdFY9`%8%im!]F+"2IBP%'F6(@]a"&b/eFffV@*KZhJ`ERaY,:_Yr%G/R@\lqY0Y?2nHsePa^3gd4:$9Mf_)GY:s2M*2HE\L_#lH;[<`l$N%\-CEjSrU2pT/R\@Q'QUYbGW\,M&5iR^MBDr0_!?Xi;E)hSA744e2`)(:>hZVGio4d3IuDDl/r3+fr(HjqUqd='6r[Ch@7YuA,Tl0%W%=EnBupe?1;[@d@jdDL(aLb&)P&RO7--[E,7!uO9uDfOX$f\PKko$T3NG_,B12Pd)@c8Rke!-T46e:gW=:bKZE;.*II\ifSR^\;%1j`NNC,L;f';Q$Oa]Y>qQs2m`06oPh2$2+f$Vfn799cV?%99$s1j`g^O`/N<N4q-[>fE.jWgo<nP\'&Ge&g/T_b9s?N`jbph0WO1%/Eca#1'D&A"J6>+2`Y65%9)Xa3%)g;XV3'p@(u']1*VA9i,*ktrUne(qg(?$@;1SZ5O!LHR9o0AMd^?MQQ?p1W%-Y7G'u!2M:P8H%fUg]3**L2!NuKC)V:_c]O4.U^%cjDPX)4SXFtq@"i#(;*CVm/"[<6$i$speTDQgB';'@NV6is6en[Zgmj5lA'?.3aZb6-?n(OS#!%d)4/9(U2r>RQ/uu(oPE#A5Y74WXu3%&rRtblSj).Gl^tN@$`^^2oBm+/L49%MOF7.%!VLd*"L)#OIhUE3f,&HQBbB'N@VL2VP[[&%PoV?@6"9lhm96:WNn_b"IlSKPp(4/"NQ!N5*eO]lD<9oWIGA.BgbHHH=#5V1[3T5=k,9gQkaI1T<BdRJZ-&,3<c'kJkT^h;a23Xp%2C%8m&.10M7>fBq'0hIp-c7&F9n(j'YtNQ^=W;-7F>)LepfQ'XdNgd)@?KQ8]HjhM([,*C**MmLOJctHrG[2;87G*b:8SD^O&J*D%k(n:9q)0332-&PGqG\TVZoK_@qY\qa['s/I*(Fk7SZ\.rEJ784b#)(I#tm.P(-*Pi*/ZCCJuHT30>#!mZCD1D\S8eFA2!mei,35_%JX8EN'5ao,XV]#Z(8ACr_F)\orMXh;S:C;beR,N7D4.$<eRZ;E[bDo3@FA8egG85Dg"YKTgICZH)E!tcgMQ2lZ<=c)qki+bC%e"2%R/eN=lNB,e>Vk^Bau#Ouqfng`OA;h:It_&U'32K%bp96R7bMWM#O[ggW_*q^oU/YDi,\Q)\p<0EWNN@IQ:oM[:.icY/QOUZFCbO*%/Z1-"]r<k@Fj&0%RFSib3Q&+5bOEnpJACD!$kk*_Ot%)>:#0kggN.\gJ5aq51=I#=@7f#rlu)Bq?k5b6YWP3fHOeJ3;q3-5r7i..%gi'CC)J^C%h/nB]]l0C#(!/eq8F!(9b!tA?!n:r,,\r?<.BtET]'3>Y<57]CN;&i=(S*,RBsiglF2Y[5lB1B2kb`u<:>glc"4bCl%_iiHjTqQ?bAT&*nmc_7HPjLC)p3#\m;[/M%@q,,qoSI&77V^b#Or/iBE?PK%p#G0_mNPoqRYl!bO4n1K#DGHA2pBoGE[VU6H_[H*%Wd>3]TVGJaNCKg(f"BjG.OrHYRd-MKc/t;2]'$je2Qi%!S:qB_(GeT?UAD*n//Yqc6b;F\KemjfKsp0/q3>_ZB\Nj:$ei=4>1:fI%=HV4LGr=3)"#I@RV5Ve\g"VqJG@pOhKp61]hjN/AB(hd`I:m0LRFudrp77V"B4g%hg%QpNqqf-S9<+4+Hk[BlMJZeaW$S;k5NK&<%&^W0'0#id!QIGC>Eb.VPWCBQt9f6cU[RmQYaUneZJ=L$oBD%-tlsFrG-*k4j9\%'%VRdF4ILMrr[Eq"'Pok&!+!Nf>&&BmqDrp7?%]Bl&X3lMWljO=nQ?tYX$8$;iQS3"1V/"Za*:B%"9V`';o?Lm2B0L=5QA:ePHs0T8<3Gkaif2Rd5-E-&WMG?+ElfA9"C[NZIHu97j%k'iiq%noeo=!sr,SG46nFX<OFh@`dXrqf^`qj$%8\cgPT8)9C+*cLVFS"+h.0/'m)rCu^,b>4C&V%:9(-27A,S'l_'cF_m9kP\8A%;[75hPajf*f'dXZbfQh[-olEKG$.IF!'>@LMH1NB-3VbDC`^)a?.D$i/!f_@,3Y!7XFi9)qGFR2Q'[X%3rMp0J,3CI\5"-E*<rq-%XqK^DQAgbo)5,*^i@MF)6,f>]rc#K7+*tP.@aT).WC>V9ac@e7KAPus>K1%/jcgcD#%V8(i0=Q]9%Y.7WEQ2K.H;12gT'3dj3*Ae%;H'V/WmNrANJJNTd;u`eQ=e;J(:(#U9>/R5niSd$^7..e30NAONF?o_+ABD@fU_&giB!b"([K.c9S]^;Xr)JJkuuDEMbBg,ngpaA%)n4>_9WrA\8]qF8lV"6i(k'2i8%laF,WB;i;Qhmj4sin""F7oXPObaacSjnQ9WR'?fC/X^/`V1P^X4a,:0NRQQAiP?0MW-1WAA^>%rQ01_L0,3`2a<7Pgab,7n9s,-_jL7>Eg8,eT#R^=)P`=;HfnI7_Y=oEDN`!uDQ/SZ0;fUl;dc66IO>]g($V.Ap[c71BC;fK=;\/5%(B1MuQ+O=/"Fo74JIlbEceRluqs1GDjkIU9^(3P0=l/)RK$IP6FPAQaatD-[\R"<_`_PcH>p;YjA__Ns$#Q$.dk"l&;28q2M]^Q-%JdmJYM`7)=9D2->FT^QrS])Ank"QL*HX7lbacF$koqg+@f"JN2k=\%.0Nm_uEQe,5]H#?%M_UCUDflGDij4VX7>o.6XYeN6ed*^Z%X6BIT+B>3HeEM1t9B\DXLY(OU/*h+HK<;c/\><N0nqH'c=`l5FVJSCf*h=ZMIVgHN/"7R8^L!h@/%MdlQ+o8b?"Gi>F]YR.CMpc,%\><ME\9=X<(gU?hPW8MAnk?JtWU;1pQ?o*JmEeo/IWTGgf,m0)P[b=XE?%a3[?[BXg6V9BL2Si+S!2E4e*(]I-F/gD/TiH*7pfsI%Ir-_kB&#j)YJb)=]$[u4h>F(fN^i9o1@:9a,;+6]EQP8VS1QM;]$\PjrG%7,,OMSkLB$i#;\.8<nH@3g4$.n@Z<[="URu/dO?#Gp%Hk+IbM=Aa5*AV\kbhO?tGKB/=1Ga6r+#Q/:F,.uuR60RAdJ?;>dF-O4,mhVjKohE3osrX?<L0q.%qeJ%B8%u'*S,7CPYNu?;,+-J%AS>Gf2E_?Qgqjt`'RL^L_3\"l7'g]n>p&(u#`%t?B*H>gnJ_;V>ltbg7l-/L58OR\FZQ4XXjZttH;R?c+4<%!5;j+T/D<WM1<T5i%`O6I[UT68(QSmC-kgk]Pb=:0qE)l!\"j92C,LEAm=eKMp!4!JF)/=3OZdqrW68boFGH43-6b0;6f*MQ2:)^#@2)H7'l!d-BWj.^b%&7)lIZYm/72B<DR@h1&=:sh"H0rUY!=UWg^&@TC1Gjr#T?$!+9_uSgOg$lTMl`Z3\HC(.o%\<0'<F72M/VMVaSPh9gVH,5qVpc"G%^WrcUAa`kUorVXVW',F8dQ%4uULl$QcuN,8iFc<-Z>KeV0Aml_TFCHZT>2u)8LR&*eO,!rUIo'nZ?U)W9URBD;Mhp=VeOmr7+YJl%O]Y$4P-kY1F9\HF=7t.8N#d:)<u*3GL.%C#]1)Z$0GM-([Gd!#hj(`rc(W+\0=JBfG&MQWrUlMR_ehhiXtBKo6t;?9ic`b![.(*d%5n#?M&j(ZGTX?Hi*Vi5VB=6YbMs7q+Ti.e<(e>TfSV4Q,,h#Xq-d+Ce"E,^66!Yk]?E1(W6R*#,m-:MfRSbZ/lCbL.R/jR!'hM,*%-S<okIaA[$;1dj\;O"g>F"'>hF&MZ&^?R]Kcf<%0'+N2tM5Z(q\>m1hBTi5+$D%a@UlnZmW=]BLQr#;\i.U>m;)YU[G@3*1W90M5%i/:8NNE-lA+TslDS36,9\Qm;CZJsS9Tq(*4"Eg[lF4R8#<4KA96qM6r=TW`FaCV>I"j:/;"g"$G9&&F%f%)TVU/W,lP/.u8#:)UQ%<P=)m*2^shLHbf!r8lV81E&HPiA2DO'[Z@!?Rf)Y6,Futq">ig=b2P=$LWC>JV)Q4;678F$Js[B.b6J$]iS2bs*IW4GU3^"K7=%.%Vl04g.(J"K"ZIBqi;W^Pn6#5ECC9cl8#KB<i(ZST3HeLUi,5JiY`3$5q>gc7rE].V]dlouh[^+tDFVI7hi*/2=/"R.N.TA(q!UMb%m2-#9A'E[8;t&'GJth07+)``!_.-3s*6r:IGfpJ"$X<;,d1;HVZ#o*X./4(`p(bC:=[@"CKPBP(dO7$MiL3F+?Zufci!AC<1%;,\%$*h$?)**iC-^jou19nAi&DY=)IQT?IkE<_pZ\j66HH&fl[BG<#n0(iH6=DDkefu]J+O-&RQN]g+U$%Wr<\R2dI=o?4S/(F/>1]Y!%OMWM_RsSul9Km<E%1p.o`CidF5qmpo>hMah+IMJMJj><E"[D@\lP40aAFFR!(s:T=F"@>Sq7%ANGCTR6'uLISJml5FL,gl;5QOK5%@oQB;p#'B1N:%5l_\A9eHI`(#Npb8/!0f=,i"Db5-ZrMVlN[s"+6kP-bfULN/+Ym_27?SeYqjW9NMI_uUmj_%fU[AC0jW[O5YW(\%_ocRe..Dq^hg7pc/YgXh+n*+j]`ONQ2F"2OmBTK/BshsY=KN<7>VsuIm5tJ^7TdF/m&_._gKc3[i9(VXS=P+OIWTm5T(i&%BdQ)(%rkl&qhVp1krpnV0qsrWOrqKis^RflGl)V-4Q](h6p[?ri5!M"iph>#fq""@5o)-fms(rp/HuX+QHrO.h[r79:ouM'pgOHkTMmjLL%Mm$P!Ish(EZCjDYBR2u_G;l'I4ZG"Lne1&;^E+J%X?HR;ZhK5n0)_3)Gk\),Xl&*\e+/PYPLDaGIsc68L;`Z=a+%F^8RIe/TCh3"%I$+:jiJ)9"9kT`048orhM/U<30E3tIH/23.nNjX-.sH0u5NDWapN5<.qdM,H[UBbmURqMc^2A8iW-n>oO+:?njONYoVmuEhkiFI/%L&L/n\)ZS^B-7/ge$ECWq4k$u++8H]G$:3VZFBdXnaRF7/1N1!a57l-]KKTPA*BcWjl0er^raQ#K*,CqQ]@4&i_LB&"X(*B&J[uY%f*n1MEl]OGihd7f%P43ia'TjO='0k@D"7%.bLbj*<uuYepu(XSk3&(;I<.,hmSD"Ink4>tO'eiprn!q*1@9)HM`9bG$TUIUs"#+D%*qI(K3pE+Ah!`7Hp(-"#*KG#YG5CM&dD[t5j2J_n35<!"DAt^tb2$qVK^AWqjH%=$nLtrjGApNIgQ,pQQ"-07UE<brF;H$KHZX7d%^KOt<pri8I0$_dljqekQj5mnC?$s=J4=_An/,\pUAK62*^?E<a`j9ZimKGcq:P-P5Mi[Kjrmrs^l,sf:Il^p8gVN[t[qbl*Cqobg%f?8301,?R,S".GdW%@c"YsWC,m&7QY]7&cjT.SqQ:LCg4P1T_9hH@m&l/JmT=M*K:S<>G5QTHtm'k=\)&StliG9Q-"s7-&c=&0N0%l-o&Mo49sgN&]ZL8J]Vf+,q<JO4[7?#>LD2a"*C.!cS#)mIA#2noO`_Xb.t(I_#JZH[a\2=+6M4a2sT2=`=?m`\V.:YjW[#_f)+f%2i^1q5CBkV0BC@nVkKT893h)42a"h"Pae9E[^58AJS6hfFQ"A:=oK#G#ELq2p#*NM@?k[IY#kP]qN2W;<Gt)3YPP8C\*e\?qXqJ^%"\cNeQe"2XipXq.mqKb5SaRT3]m?6=>bs#k2g0R+nGhhHi[nKcf5Z:\HusrEWr!K38t4.5^Ur-;OO#HR?**8`pTNe=C('&df?]A\%[R1^H?D6h8KgrM&n*bCQ^5JfnPNI)%1/8q2h(=e)e7.;7Ymg?LY\*DUj>if=c!.Hf5O,TK$p"RqiqVrtnh7a/:VV;MlES'PRQpcV%IXLbMlJ_0r[gsGO`80'Xg\Dl=]mn%WZaT>_F$BKr0E58u^;i%b!#`HLl/9UgZQK2?bnd#W&)\+;4;)RNaaZ#:EPJi`Ie#]^")\)T%s'mmFrc@W'p&NXn1X:C;_Kj``cX$ji`#^O:Df(%)fCp`T?J]u]a7B87Z$ls>pNp9H&$Xj)j#f=_4TGu(q"2>Y+)Ko91LlZ]kL&,i%7[Z?q&Wr%"Ug@?-4Y-?c`KdPBIPuW@ndS?t%C<r66^!p+P)3bP-oD8r'cfkRLf&n7P3Z8?d$O:S`B,,bIp`O;U-NsX+J1[t3NpFY%r4$=ZKe\%2+9)Tg^TLH2Dlt,d<ak3S+2/P7C`LYq,X/#RBLmD142Q+r-MtD@P&H7Mp@Dbnq#,7'`=dOtej1Plj;BuH,pU<<T=t)M%Ha3?588$dP/esER*dNc(KhF=s.::?`=7a2a/UEpNn0rHQ:U._rAf#VrnHb?F("NLe@I6LLWM:tG^OBHa\6\NZ&7%a;$L#ML4QGa8%LrQ73*j@9Lrn9!o]A*RppGinGMUY+Z5&_P<I_]9?K%^^Yh^5.7])^Up45:.AO7YVPK&3eTJOsCX.:#a`Ct$pJ8aV.P2a)*rB'KJ@%>>?ek[1&o7%pW1KO>:/+C3o9?\X+I\k6Rd9HEUj<5'O`=2<)nG\./$G^QU<W3c$`=pq;.FXUNp5BTg7!@U8/+rC:QbG^k,2T/YBq%/1(oa;?FSH9pP3*R.OC^BWe?(@A2+V:1"HA8o&45^,e5[?<f&WoO%QAMs('&5K79*s7p<Aq=jp\Cpj5p=,3-Sk+dEUF*+[O^YPcI%>)JX22>?t(fc8[\VB,7#ht@jn043t_]4`t/q7StHiYO3sekcnUa7B!BUhi.Sg)0C"\aaZh4'sU9orqhEf8D(l6SYaubLM5Pr,tnt%c.UJ`/N.2NG0$9n%YjGT#MWe#-t2/g\^V[03;E)tT9cAk#C=%>\MrlR@cr>#FK`/&F'\624@B!0`#KAg2T=/8Agf@n-3#p2YQ"71%?,,%lh`fOblYJ6-/iH//]S/N^h+?f3iBH@,s$(l!\XgmJr!gD"TR-Y^,U=WlZ"HOgXFr@OOXMB87'MaNiOSZkIap5.+;D8tI;GPK%pKCdUU8LA$jfYc6AEbH*:T+Jf.^rK=-GQsKpH,SE@^'4*j7&JIK+4-[WUdFE;`jh`N[)4LBPZF$I(eKANE9rEPUrE%/JR&L$ihXs%5C2M^.PH+p+(g;[ekq4F@!]CmS*V3MQ:>C0Ha73C<kLglAYa"NWmd9G4dhZTAsus`*H,\;nUW#/f/;*%gn*G?1(=1;nLtHdShshK%B9_Z;rn=el)W!k=;c9pg,0RDK\T]'nN-^^I)0SD=_MruHSL5]%34`S?8IdjK%p=Q-`H43D0bc1d_8M!ji)q4FG?k\U[MrsXR,Tse%<)Y<.2Dg7QfqHO/Valp9QJlh?0GI0H[-:UgMCH-=\RV"ua/3"LkN-m*o.kiBiM#,E17=5G6fD/[g.f;mUBq+3:>*]c/1q<d3Wqi"%rpESiGMVm._%L"nJ8*VS:tg\mhV5i^qBYmZDKKBm4B3DDACGXf/KMAs&o3ru@L_9E`?1EYn"qDHTB)krEltYSpC+d-,U\9YKWaf$%)$O?>MgI0(SRPWgk4+OM))eh/W<o786R0qXNVffmiC$MnN)jS<pa1i7))C*bjK!TaNZ,<-QQ_cfA>RR^TuoX<?oQnu$0p+"jV`)F%/>$XgaA(h\12,D^Q8H,2LTWeOfA4f-UjFG8a9X'XHXpl[L1D@SPd>CH((>k=%?)/\!koV_VN`#Pi@EhWg(6s&gIT4:=GoF&Rf#HK%FX`,CQ;Z?[6H>:%VVE/PTe'"!WeSPj3b"DVb4(-W@E8Tcl?GtXoFCf_7OhqE[&0sJ/D1n3%)T=.H7LgP;GNCn85c*J>Db$t#3?7V%ae<u.FG<]@YnS.+'<83\WcTB]V,TnAdB.aUOSq6/KVj'a9loc;C6n9IEq::"'gS'T,/V/DHl-NEL[!B%nfK!tYt^P'#43S;_^%#!%E$+It_YR&k[?MSaHT0GC)AJd#ZK=R#ej)J=#0TH!]HNlF:h\t'DI"Ya1BSrb8TNXjV!sC=;Gu.JHdF8M50M4[/g;ce94@P0>uY-^%5*0UKQ=s/9b>)ouQ+9q_"&''4GhNVD5'P/S9LVraiXNj$+NeD3^?pIsVtHO23Q2Z%GbM&MAWFnd4sf&_4cs<^0db];)cEhHl5WWD%]+n^aQ.:nsH+aPZAh0:8Tl]rdD*(rHZj`5/g=&6sVeKH0iR^8pHj8"pG>o`h"WN?@>)h%5UIfbi/^(Wb:d$F&WM>pd)J-<>YUF1?%/1+s:8lAPNMT#:/1.^^M,[;c^bW<Oi`2eYo_]nMW<N's>66O'Aj],2_2;%]O]W%nP>:EJLb$Gsh3f@:c9_($"/a10(1l-SRp%q[p%dAFf&ZA!<FODb;#A5JFJ-4SbVH^a`NYfEMfLRb*X^gX.fI&_SAf2uPTnfuiMK=4#46qC;^q)$G3Rc)FV68tq^<+fSc+AS8Y8m\H@%r.?NkYXobAI\9s9/llRtTi3$ae21/4'%9<Ii;eW\gjcJ@">+JBh+^[a,4UUjcV7WkQqU1679sm&.USU"nIMp$M^][DXu-b`Nb'qR%Rjtd$4t$PB[Npd$Z"=FDq6_CF6>UlT:A1tCS*QM*GoD',aE!P<eXP.b#Ie3&jUq@so[dRm&eD(TM/Nei\d#_qjUm=m[Ni`KhhYf%%ohf:oi.W5V,?/rDS#fgnZ"1g02ujfmi-&d*mDGsXnp$VE9<e=mBcSa@8.;6T(u+2*IkG.X#4#6E7Jc=q#e&]r5Tp0'\9^e]nphqH%G]Oc&i2Ke3*<jfnk'8UjG*.%.WsY:=Uo!O/_"4^b*W<b9$aJ,=Ycm]NgK.:SCjhH-Bj$n3a'JXQHKMCJem92^^T,S*5k&rCHU.:`%e02=b0g(Kf7.W\<\Ml!#_QZ/aV[_tupb>\DO_quc'gViE*-9[8GObWlLZbc/?HB)d,mPS+0,!h#F^T6tDU0CHH@Ho!kn_26g++CL%X58PMGa(Ej[:ZcO4hCIhVBUjlVtFgJ=/fZ]UZY[=6tkYo<j(B\qu(E7"F-Wt-(,`5mBt[C=tffn^ER>I;TjO]4g1!s8tf10Sf]W'%-&;JE#qfE1XV1<Wm%k*'!XbBAhmo'+8??d;U9#7MZokJ_qX$P.<(app<!aPPgASH2',J.3YEWi$7c:)jV)c.bX$LdgUi):/frHr$%diEQ\a=9[Oc`NIE%^S?CSA9TMq]%REF@e"6Icne=D]&;'Y)GJ_f^H6F]e>s[^>.$T[*"Yj#ZqO(rmRf)l/s@]AuA\*h/TKm/^l$_%A?3JVMkAA2Y>sht<\JYHc-bNhhQQ_')q9:obVm'D^D&`b<So_2S,Q;NA50K9]_b",k$V9HR<1s5rCaEECc*a#5YSjkHEEFHK,LlS%:En"I\uoME=f.%UhcLg0#;NMpg99,kDuGm.s%d)jr=fq&>(6tb'u*-2?gd3oM:#CRq)5:Kl/,1^=C.uamBmj^Y9a#2k]!A&^i:7a%3jI=]amh%I$_#7'BIa#i>hZ=Zq@D/sIkr$c;)@rR^<8S5?_//4iU2/1BE)kSX!pDgr1fPT=tB2%_Co!N2Z2aAkdf[gqttJ+?H^*-%9hQsB+8!OHIf%E:If$aD18sU0d5$T]*n^P_bRZcmEehE9WqXj;"8"_a]$j]p;lV+*&,3O`Hr<UepCnO2?D1'dc_$b`o-`]5._@Eq%mnf@SZ"-=Jn1@o(.3hZPDm]]CkC00CfP-X%s.R2YXWuM&R&3'K#4D[%SR/R$k`c1G<k[#iW.Er9<i0JBp;]n85f[q.^[1Ui/YD*T%`s?I$'SqB)SR3jtI-!T+5c.fP'oKDFXZ%YlO)n.$@kVAW.PuW(FAH\e=!mH?U=0L?SaE3TK0&hO9:BTtL91j$>C!6tC*u'-6E8r-%$ueClkfJ.I;C6LX%l\S%[hHhuhlhYf(L-Q5Yu!Za[/9Oa0XNY`qK1[RD\pPK$4V2gKX&g17#@j[]@HMl[CBAM?&O\"/(A@j0i4Xl%I2rl$@OI9$pKE2'fQZSRkf86mlTBJ&]J`ujf2fXV]A2s$J7&$8UBo,rY1G*Z]Bo[e8a/0K;_&*aK:.0BI')/'(O?gbB8*)qmi"9=%G+i4+:f!("]eGE?W?9FS4f'WZl6&>pWn5u&?EH7C@AiZa*P.'9HuEQb5LEo(0E"ctok<k`+GFEA>Z6VFde4NQoh2.17Kg1^R@%Z#%#I.P1AQcaQ!Ide<gEfX.^]f@Q:7Ht2"UVb4\l8BHJ?\c4n$db>?QWsac`PJiCH."YRs$;XR)b!,gm;,jd7_*uHZm"Tm/c)b<BArZ%L%!^R,o@0:JslZ2#2K)I>NfmQ;rn+W'+s8a$@s6),?KW#7SJXf4otYOfZEjQFV!Zu1_f<]rAr*A+=]=INQ7(V"\?$dY4>5^rdGKs%2i0l-<sqjj_DiGuQu&*f^Uo]J<0AgKT:GKHAHbj+D3.mZ^o,b76]][8fgF:2:.YYd^`*)%mfdb#*2O5rHs3Lf(OCb2>`1K\OhNIJ%5"T2og@!mtHRJ3!l2NaSWlD!$equWaX`SZ</aj`3ogNt"6)lbU;lN7l*2:)E\IsH8C#)c_@$!`=L6;!?lQ8>[)*.Ff[/^O&_)_qJ%Z?m/Rg!PS&-jM5Q<l@A,B?))4*D$]NN_Y(K./D@O`q&=C7m\rhMVXiq"IaXt61<4_Tr#I#dON8(C('^G-cN]mq`3NG6VQ.s<a,FT%Qn_f_]WKe^RqD1n\)#Y>]1A[porC:2G\bR.^TU]2q5C*nT`0=RT$8`qX7*KS43_Lj0P$Si;X!lm`EKHBJ>a=<ahdEBS%#".YH]8g%Z;n$HUs%g;M'"Wo'KWGRn`H%>1>7#g>9PV.k5Su0gYE^G6&87=`6CeVe*Y[3c7>HZANjfHeRgI8Xq+m9q$faMD"k!(gLYJ0+-&L(%3U!p$n[eV%8VLO?<;sC-WDegWac[h'rqfb"4.MK-)6FZ[#P;MrZobNrK;a9U&'N?aD`L-NlA(@I;5'&LR-3,%f'8lD/N0=S;[co/%pi;i&i6B2?QbGJpEhuueC)08UCuVn23Y9MB26;"2"5C(/;qF3K4!\J1K43N:DXHaE9<BP#g4Rl6))03DZr!)pZ4/:g?TpguYP0L>%r/EVLI#^+6?.RKFHS6aGC3Dht9T2CJX;BT_NQ406p$P1qUT`k,GYg.Y+'T2rpS2;C9C7&IZY4:eo-<3^F:JED$d'I3YqOfrX49bs%I(9f_oc?`'IF2EBGIQhkEjh!5S*s51-Yo"L^>5cs#0tFOZrc]PTo:V9rLuedhrq4!'J'#j]iH49',.cbQP;AXrMRfC=aB#$E8R8=%&B4KV'LUnE(Wa%bI'/c,;Y2qgifc9C'omI2pI.R]p1$:O:&epSU1riIW?4f`e63\Y?,la,quM_s\#Y_d%(!%eg7L<C,qSqAT.[Y(%meV"'-8g(;Y_Ga:i0CTHlAr/C*japbJ1n4D`h".'(tKr96nQF=-LXf+B"Hb[Gf\]:W/p+EmXO"Wp=+#H4uRbdO07e6rsJe:ouXA%%)R0lqEUn?!2VVb1EBC-+^9S@0XVVA9:U!*jo"n)&hQpk[7(To+\<BMC.Z@KX@d42f`fL#`WC]XT2R&q4"Vj4g7]Gq4-YCNJ.I'Nd%j=@"k\]#:U5J[>'EQmrGU_fIo0+9q`64I1!MT_O9\\-fL&gBN6D`DGGp:Ll!odp%'B=n(uBW#RVmCmTk,d@c(qnas-$MTC17IC#k%(Eko&"]5aDIg`&6UdR6cX<.r_)>k.(?I#;:/W4pkF$HB"T6WWc*[eUd4pTa__3GTA)(o8[Qa,<+QjamMHT2eAp%QJ"R.#1;9um/%%LC7Yq2u]0<X0Z6Y]@e*WNWZ[9#HV@L:P]-oG:>qf;f5S3`#mMN%92=(!>3JmLbe`dj-L#H,g1CR'OZ"!0V_,<N:P<!i3rH+C%'f&%rLNe[Wo(p2`l"Dp0n6QYVdn[iYLR@GQO:LfQY)d*NGC*nCL.,kELPV7Z-@BeKQD>50c1=2qTdK+nf`7cZ(\(^&%A+[Ca%S::S(V]%6TKSf+;jHM.)B%rq]rmr)"0Jmm/HD@p>K$O3BOj<C]FD2n%mr[@lbH3R%"Qi,J2E'@GB";%Y#T"8#$3pGis<AV%5@&I*F%?];I]<%#TqNfBmV?JYAE`VAtSV*)*bl_S#6d<F8Roe=PDHIf2_g=eEtd\Hp*^Ro@KfRHnFm?KRKr2ksJu"IBOs`UR*HYRU=+er)@oV/s]V8%cO4DCIBjT:4j`HBiW5XrUh\``1;<<Ic#i;_WCn>!<;nbEWc[+eoaG2o163Am&UZ"R+3.&icc$BDjg@')1LW1r^LpKq]Ck(#[:hd;%MKrbo]9_k4@X;p55u0*d*@:8ph/G99>gNc.Oh4;,B&t@FS_FXPp\O_LUPt>7:PB\^d6oDXXJL.5I4[U'Z_BRRX!b[^522[n`.cjG%4c0*be[:\L/gZjV)]MXm5Gl<mb?KqM40,r^\+"\qJ\GK(3eWsK2"2K5?m%U,i*BOKgtk2F?Ya!&knWR1i<0%aF#'8f`RL&552EU=%gOkm)Q+X[l8Xu#(B9SbFOFd3q@S^q:dIbHEH=jU.\Zh@3'p$JgQ1AD^mAcKEOj^Jc6_ZC/lW\g`p@U#bBKc$pCY>7G+neOkWS74B%8i3lH;r_ec,qGG+AIjGXdkC\!qss(@?8/t<lW>coR_(),e&?Pf<I64iVSZBoFsE<UF>p>GFZ#YIY8k3f0(2f8L=Ne2cc0S'^UhnM%50O_+`I;:b.TE78I#02:SE$+2:3gJi.\*T\l[#jSL5VA*go]ju:2*4X^,gIGO6P\1)EHDASG%T]d:>_IDC*fX;Dau6.jjVZfQ=^9%FK;='qth>m>:TC<GGa?VK;!R5.2X6J.6(ViIL-5-(C&9'-P[&-me/?\Bm6cC([e/Qo*:V#_1`V:JSCYKQ!1[;)nEkq:c?b-Q/BR"%;EYrec9L"WBaM-eS./6>hQ6oJMs5lPN#!uL_\TNFm/!DIZp2$oC]u&Qopalek-Pk.fNX==UW:j*i8XS2H#W"+o+HusQf`qD:UTkg%dPs8tWa2Y<e3gp;T\_mH6$%3d2^fG/pH_H#kQL;J^)hC%`cc=_/9i7A/`Cj"_=cIh/%DjhHPkO#?[iF&RqadI>ZjT&;`CD*?tQi'%'?hN2`Ilq(p2+d3YT4)=/bKdn>Ts"V4P5V<#ENK9:@Pc\W!,t@p5S!uEd8E_n%VO$03a@&i:Y"a1Q?F%H"I6KO6a9ka1Sr"/=rK(%#0WA#R:*G8OUF@^$GGB`XKij_XB`FB>DKJci*5I*/_F:W[\na>L&Q1mS_Tj/9nm8X,L;]he'Z[B1;20H5>Ea+L"0mCh/>u@Vp1Qn%h.cao/i(,Od_).-Qn,74a#d@@e#DMoe*65tSh[p"[o8pEh/4<0+-uY\l'(s`F8Dt^StE_pW1Vg4I<tbK2#&b1Cs^8ReK&M<G"*K/%6LDDLp6!$UU\*]o6tlG(1D?372P3A.[GjVgku;JS<;jrLRBq2rA2akOd+[Mp2&&9#\IPGHFq6spVb/k3]6ITl*ShbUU&<+1;WoSe%58UnPg=)b4;5"Z'4InAs0A>:+<&iAi8Nhj?Z\bTJl,1d2bhQ[mBdS/@ofT"Nm_-i3_6_.?F8PGbZa&*lcD8nRgs!3u=IRp(?C3Mr%Mr"&oMqH2'bjFusd7dspF>HkOhg:r?II-Z?g:aUj34R[LT*g?d0+W*^BRfG.X<&(E@F7_9_eTL`)r[Sj4Ul<m+$YPTpX\NFVcG>i%^7+IqL@=H3DrL7[9nZjp*fn2*C8ip,//O8u\_$EBCi$Q-Si*V6e_-34ok$*g915YoZWlF:Dg)0O[5j_K?!O#852Id7(6k7Bqc#:g%At/%CfPH%OraKcRHa,E:<*?r*1X>GuF0!?^[r][)Q8,jiGZp\#]%u#/];S0PF8,XrrOJr<MU")"3tHDGfD$]7^U]?s?mJcq/gJ4F%/!9K@],/S"="bfq,S_R"k36^Cp9meTP]tlm83Nr.82%M44[5:7Pie<2dA(t;QeRnb]^Nl&\),Qhq4lSXH2_hCFYWpK$LZ0j2Y&]I%r*.u8(W,FGkX'+Z-F=o`dVfM_gW&Qr[Q[Vm31at%(9Ui+qh8LmE4bUC]=V50[2s4[oCGb%;9`uA6s$jqMp_0l;N2_KVX)WfrQ@sC%0\m1.?hWkhZo<DB9naB.&#&'YQJFQ'>[(t!/7uKHg>ZP?)d9nc444p<O*YEC;1-&ZRVq7pQ^5K-d3WR>.C#*sGe7)3X&iLukN8n\%oQY_f^[rF+H!]c#>q<0nnn(*5ArH=ar4,Os`:hJ$(U<Seg.\TPGIANmml'LTe%>J1o$YWOES2t"biMfRqgS?[V5GtRTC(Jg'-Wgf%Db'Oj,n`eN.Jd32<S92:=_5'd'N35KdMGOG=>uKlNN7eX,.X\WWZKA;X6Z\Tcg"7kfiQL'QDPGJ<(h(G+.[3+[ou,If&rd]7OqEh%p/:Wdg>tY;9.O(=/aY,+Ra^HKVbLG6o8e4?Hp#l=XQ6O5kKLm;Qe[dA9OAbh;dj1HQ\l^ICY#SlHPN)0/f/,G7ceB^CNT6;Xr2Xn%kaB_M2/R6-;IT05q/G1A/NkQFgZ!f2()E(&_H%bf75h](.e4sb&#*0eeA[nu2/=f!)T$OWb?<8+>PEK2f(k'oC6^l_"fkj^DV77e%Yh-=mg\+r'C"V#VWs<fb0E0sa%ca"Q<VDHCjQq0H3R0aj3KKFCicf`dEFkheFhG#CSIUh,g>#lBW][alCAIPp<-WOtYMNG?;Hqi)%FF(+%RSVi&<m);kF0!!+Ej;K06KVH6oho!UH7nTd($s]N[C>Goj8.3d<GHqlTfg)=:j=Up5Fg'dXg`LKI:I84YHtL*0&CFbln.R?%4C%@(mVfIJmFfa\V:=hn`^/d*o<=cIg+6bNe!lnO_20feDCrmBQ9H*LNJ)rSEoXQu#i=IP-M5/L/WhJh4XD_P/ujbp\\`E.DXI*C%koBF:ah>.28_ti(6HODK'V,T/@L!9e.\Yr^;Q%4bDQ6mq3`"(,p<.19n=Z9-4cIA.G8JS^FSg(X1p]<V;9L6PL&&sGD(q*O/MsW9%Eu-Lcm-=/JP<GkWSn3h8^$\p?AU]'N>dEh-G30<KPc_Q:Bn,G#3oAUkSA!EqqPa"sIJKDdfPW7iT6;"AHQ,&'q>$AJZ^Xj-kJc->%m*>@5KADMZ.(XboJ%jZc5-Jeh71O7IHgB;XkBl:D3[?@o]j/MD>ijNY[,b1GG<2'ma??0Q]^3tF_=RVb=u*LX5HAMq0?Mc&6.C4,%5"LLRc,#)O3]LfSh51]mqq9N;oY$t>hG!Y[&)T.GF%=r*+`t)tH.tQ0khYunK6PlFZ(5`++!3P+n5T1m)AVikOl[hLA5du_:<r7g%c'-/`g$\*FAbPJ4C\acNH@Ip3c3L7cUNnr9\X#H`M&bZMHI_$.6KpUSQFtmT3P.J7+.m]HX0:^KrOR<hs1GUd?Cf?R>g+QkNN)D9%ii.6IEG^K/007XCbb`t+Hau7t7TM17?M@)odDm-j.XcMA]Xk`&m-A&Q<kVgbc>?nN(KXelNQce<7]ghMDYE_#qj[/)ET;4k]bJ+R%Kko;L\&J'\?19I)3u,J64]j/iSK4?bmTTFtF`.s^kl*8\?+mFE$YL!TZa7ln:.2K28sdlOa*D0ms-RQ$YE/E:]i&9NVg)FuN1XGk%Y2`$ML&TBFEH1[4kbr`45!LN?(5aIcqk/-s'eZ&#eXKHPDl6DIMbc"fj-%h>2pQ@(/&n`$<fYb7PEgH/oq\U+^QkgS(RP*cCGi7Z%l'f?XFEfkDnFYFO"eYJJk3DQcEo[).rn?VdN8+0Yg@<k=9s&]&,O=qi*0k\R:2cneQhJnRqPuDV0>F*V'@psnV-U%'AWH0S<F;jb%VCrl-NVM4AUN*JKGFNXcB<IYj;fA/%AS&Q_BZ5;"h/3+boj$9SCMV($W-rdanCVVIK=b(@2u@U4I(S#[9Qu)7XO;sGm`mm)$eA@&%5$W70ho6e9U(%c>Natg;OQHsV%\TkWiK%lhC[+RSr:'oD>4]/YmDV]"IWI'aZdX:2i&Ysf,\P2h7ps*[H(o34pZWg(Bp]4f^5M/&%STR)@**Tc(4W-6s%;Y==MLe.jPL&-q/4]66g#'r]geU%XA+O[5-G"B*5.=_*>hmkB&!rILc;rtNjf'-Qbm"t/F/`=det!CcgDLT,%M4\X%ll2EE\_F[nGc+oSZ5IN:%MS7tMUG56Un8EfRJ?&qCa$O$f^?bkHeS$i351ghG.^;V^#[Z9EA"t;<)1Q]g*ie-Z+6cV6flHl%1nKuXL0(JBX^:kc/nnQD/WulplR$dMHdC(K&aF#X`lpmBV*9)X'i%hqh;ZAuAh9ipSKHbE-M".gq8\-agTB8Mf3Ye-nWe!n&PXp5%qq9%k\N1I;A7Zi)%f>MUh1Z";m;f%lI.!i&X_W%^*KRPkP+$`UYE98Aqk5H_;tj)^/c%=$"s5Lc>d@^K&uSBrVOYP8U"l7I4"l_0%.8r!_,H5>9@<F.6en:c"K>g>?GA#T.V8'6S^)MAFO/DE(:UOl5RX:>FX3,J!lI9De=).KAj^^Ne3OdLphY%Vne(H\(Im1TXqlESI%`Tm8)4OG_)259F6X39S8Y1H/@bS>9I@k#+G4X[U>Eu""-=3<&$e8g-6=5@5E/1jncFmGtL=)aE4a&>'8To7-hA!2>/hRO5l%4fu?%O05%?DcX5Sk`3:2BSL4e)e'tD/\)H0ij]:WD'WKO`KEl_kN/5.hM([PbD!@WCbU1k_'f@LgiG.(A1FYpVfrRK*8S]=\Y%G*14-<P%C,,<.44C@>*?s<4-+^@D=k(lh:[;m_([Gk;jd1UHhT<TeWP??Hl&J)iP.Q>Qg^PX(7b1A^W+%I)$msF6N,""I$umk*8r7rl-(:th%n%E9>Kt3VI.%VH_D5SI6')C]g06&gIg/$ceST[5+h-G`uRIYL_no;!#5`qkr&Mh%L*Hl&HA"@IT_ld2-l=m->pnVd8o?iQEl@n":%oK3l64K-[!UiEr7NH[G0B?&*n`?t&8D:Ub"2K*"YRVY"Yj/<r'\0(/\T&dnc/$eN9lhs@4?!!64Y.6lK[Zm6IB1!A;n^W#*3g&=e%p"uNbCaXXUpGW#V'*Kj^EpPAY98qo1J)XG5OkKGUl<0W^B8Xjc6FtV0/1RG;<sKD$kSPEe\!;3j<LMRlQ6*Bje@et1kJ\oAhNo0r%T>!2V&r65'rG8LFCFe[VZ(+OR)cnRQ-g\ZMZ7a]]L4+tdNcao:5.!L3LT)uPU2lXXH4<qhW8f`F!@cQaMq7dYNjgOdVo@LnHb/E#%d8f47$mVf7h,ZC5ldc37jjMD92BUZ+*j07cZ81/W:-P'NH0n,RGHZ5(6(`$dNp61O34H-BHRLfcViSISjk>#+.m']TD2Uf2^\&:*%cgMRR)>j2L._HNs1:I@-ZnmWB""cSb<\A+4qbF$\qDRXK^^O*o8ARE81RB?V\3?6=WOE]Am>_S/,lZp7lf<=7QIrf1D3Dk$']Ip;%&+R:iH^Mshjjas.YqVZM-Ka_dFMLI+q_0+>k%0XuD,uIhbi79YmdB-0f+Ca;H[:7-kZ04?QnPQT(6:,)YqKaa)s]iR?emDEmC8+O%"jnTfhV6dkb-#="H2\OoH!4n(k5"t#3*G-=@b@`N+b*\hAo5A?T2u`M]Pa;iH]^dPrfiVhSm"n1:V0]o%XkqD+BTfTLT+'[fDD.Z%>8H!!pEEB^n%fh:2")FS1Z$U;!">'@,4-qhgH;0*059)BNA6=EcM4;m7fIj]PX]u3$fC"M:[Gf]e*_&5PV>,_Kh(+$n1qOEHmP7h%_VEF]<BLV[*_2>SjnFDieeg=_KmSd6D#0a[m2`?,UU*\kF-H*g;Du7MHWXN7p7Xb2o6Ti?lfC;b=NecTIBp7FYRtC"^hXg(KGNA6%O@9h*S)8%,GT&l'CcD8Al%LPk,EL'"f.u"%dC"@796^X2PIE%9=8u>?jWhY;MCbo_3WH+6V"1*h1!59mP5&W_Gj+Y!)3$!fQ"e.F%k'#=Nj9a"oca`!E\eputs&i[rc,Rhtk`5r0I2S\FN\\2H&pNP:cB0e8M,dfnj"W6<T1J'IGR+'=+$fMnk_2l_\\XM(MfYL.D#Ec?%abETj5=C6"e'+)k!I3sVEThi1"^r9hV8Ui0XnFIUn/'p2HVU<'32o+/O]f6H*`Eo4r:sYT)ctSAWUNr5l[d7m1Eq4T8cLc_Q@7uY%(ZML<;)"G!^YJN^g!Yi*SFBYbj'In`h,Ka^")5K2$BFsf1Y!Y(AM5LpaRkt:q9YV:<j-StK`4$=bC77jJthTS9SMlbY$tt.(99oN%DtD6CO-4mh,Yjf+B8P*o:*UFs/Or9[X_6Zh\Eu9k-hB^g9+J1IPCH4FVNOHR@9i,u0nL855[fA+Y1.*#=KA:)PD"(jH]m7Q/3H\m%+CT0Fm3MBXNlb%>B6G&>h<H%^3j._6'1l*V\$:MQ&Gt7,ptTq@FlE-+kfg?XmOESJl>cQ?\TW'^,aipN8UF[nVJeYBL-B^5VS[dp%BLnh!Re3g;'8P95bJciKp*,f(X,ZT^fs_>=iFLurZ;/Oo9Q"QX+1Z"MC&Mr%'iD9kg&I4J+Vk:PJ;s3Mdeos^i)nl],X^s<0(g3t%8hJXQelUY?)TC0]0Ch_G+3P-7@?N>D4ZM/-o[BIZ#f2.`Uj8:dI1uFtWL2M'F?X5cU[:*f(.7tKeGAo6e9S1_V.`0VB_Lt)_b"cP%=]KL_1Rb%T)>iIM*XCkHa.*i8@i94;a5_:7/@qZWMV5?p?d;1PA5?32N2.FB\F.s\?U*O#.slcT&B\URrC8I+1i.C1f+r"bDeuJ=%gJ&_2`G$o*N<@eKmpCb^`s8O*g%9[FqdE%^X]`Vhm2(hJgg76KoT@1(%bgS+m7Za?2RjCUfQqf3.-iKT3uH^F^@"M5Zp1Q#H$0@R%QM]aD[N6Ff0F.e0/*06++X0nsJF2Z2["CKT$"O#%OeKbLYs$ZTa,ZpakCkj5J@lV(h7K+&p[L7'g@o%8FK>=+qm,)+ib(Q4pOIHq%4jqq3+Ls!%5]U]4\_H:AG)f.mdO=hnl6>-14LEXJI._;.jpR>dApo!5g-9mTjNe071r)^hakk$[Ra(QS5WXr20W)]^4kluc6o!u"%A_uHRIqR["?JQ]#r1&6O9dF?"7AFo"-276_!q(I\9$Y^(eQ9(ko3.&i>hq!En*q?'^9?:]O*d)$LM+USmE:7:mAFGAjX!Yn)5sLH%R*ITgDJ5,fDlN]dWhl%8=5t>ck:4[$Q2=)0Zg1A(/%t@Cd#3#[C0jOk%Q?q:N>N]A7e3de?PBG8\s_c6W;8@%OR>A+@OC_Za&anM%C9,nPi_t6d1@+C$8o3b(42n0QC[AIJ/$[?IqfK=%;MgL-hCI"Q?*C+UmDBp5'-`Ys6@`e7^&7m%E-U]]T$*=lgRQAJ.*]AG24q$H%KenXhrI2VB-Z1]9U\anU\`?4,T>IcW:n;=$]6nRhaQMPj6YGZ^jOYUGcB?XP*1\Y<Xjle+.dd#M!ptol]TMJmI@2K1[m1/?m90-k%om(h1:i56p6(@cd6ul1:p]L5iT<O7@VjP&D^?EFIMod$`cb(i@,;!PWlmK3.gX1a]%.l'II'Aj:2j>f>bNlRg=?4$OYI5JErR0JE%fGA::fuL4K%i]MPQ#aG1p:eZA;He(CkH_(EGYR8J"Z9Gl6ai^@^=D3nLW=Po0V=#D7n%ehZ!P#S+f7j"-Vj7&\+d6AlDA=^qq_$>%2I$f_ic6PlO?28==GOcD0@j=/FHbQ1SK&r8$a'/@j6o?$;BEu#2R9r_F1-"n4kBs_2_ddT[O5,MAeNYd;s;N2<naemR7"B9@97:<%TsJL1"erV3S"C!OJ@a>f`T?FZW9#UDB'3f>:9tJ)fi)']oJUdjdOT;Gni]1GHC85_+Yjd=foPDWM0sb13'o0c4+hElDNr9iMjtKu%hUgKm#\6#]9dT5K7#^S>OrR+Jk0639:sRX;9k<f$b;jigN5oI](7A,cC][%%J?(NAe6L3.bd2G_]VNg(ptA47!Z>uPATgBVQ/q79%D`;B89qQ:+h\pRn>,c<"NV!j?h-uW#SHEms1+b`JM0KE^E0lb=M1>10\Hpg4Y_s7H%N]0DYE!pc]dpMW)g$MsTU[VnS43IG"jJSb%;Z?1YBdeJ-&8jWpRm'RfS6ea;)a.lJUoVdY4^D<kKq7"/B.]UO2lAYU3^td0q`)`&3CkaZVYBf8QDLRX*M4rq1MSe1>tLP[HQ.8C%+j$?`(@0Yl7T+ooApU@O&&4;moqQfLc.r\:Be6s,1S#_(3QaU&MuBEOCg?3fd%31Sg#0`A8hTHJSoHUH*;u#PE7=N'X"Qm'V/pA4%XaBO'.NTWoI<1OTRZ6Yj'$g+95q&3dg-<i:gBItNMont':L4u-??FF7qD:%5p^AfaSVC#KqR7JP>Dg[$*!M=6[h(+)V+)@$4cb;'%'1O6mQAK^AG7Z%b33ne:i\g0)1%*K?LSLC%P1k:@5HtT=DRU%@Gq[Qk5$[T(:7lMUPJ-/LI7j9ei;3tU!ar4=FQ%?-Ft:4JB+qtk%p3hpI\a1@(IXHlE&O)tCSLidtl.FtdRZD2B`*t7/0Y]$W$o5]\9#U%CfXP+)9'>USSCg!rYLFYGf[R4-Mpk#urZ.!oeTSQ0bsqE8%*<.?AXWHASn3]?Y>&79:\#>/JVds;kIdpQ5na6%>a-B$j_P:B"CB\MHq!]\Og-='C.ho=RhJ(KNUpcEqRUKK4+8<[u`tlJLb1[/1%CqlJJ:#9d6VQcWBE[aq'D(g=b/jF]&QRP&b9ICe,=eC<>BZt+;C`Zj0:=jmVp1'Zhq!Qs1Thqa"[#*NFDe*nW*-`Bi`TKm,mP6lY%Dc`)k5=qFVH.kHSS=;>Z2G)7tVOi0\3Js_Yb/_3fDBtCa1$FW[2bMR-%5s2$^"JsL2tCjYXRZ&)CMo:=l^G)L:`4AaQoJDs+:VIg%W.&a!g[?RQ2d:'-r8=`3%$XY=jl!l*cT^3$%FCJ+3)%*\PL=b'knF*TF,>[Vnp3[GiA-S!cF-*7\(=j151F)c,GWcV(S>A"\dR*3%IIn6:6.,4NdH?u[)$EDP@Ed!(*;*cZ3FQiKHUo(uK5RT+)=PjX:8di0n(uKX[JT4IL9]#'BTS+S[Rkl%/rQ"SiTtc\`j6.8=52K_%LYgib2Ek3aNul:IAeZ\&4NHB9<-*HOfr"9T\$iI,r,&<u:L']fbh:^;oGRuf:M('C[$4MWQ=P4nVS[]`R<lSMHcmaripE$0DSJ%I%)AM1*F\^A]<8f^J:g5PTCO2k@\ZY@2#2r-kE_7=$RY>W/GZjSr>:d3"@n5-Orc*9FS*h[!=Rqh1Nk)!.[[GbqrL'9R^94Uj\H^2Y%O&%%Z:AakX0QBHP6atP)l(g>3>p_R4?:dBWUo!s853-2+`SF\VUm69@)fP>OI[:p3:<p!'15g?Jo(Rjh(^=Uj=epC_CP8sP[tWX[%nZm1%gpXK$FnO+1A/RC8T+<V?fGlhF\5!*Q.2rnjj6]PrI5XYbn%C#m8mZU=4-&qu:M\tVW4YfoHFB1MWtFolO&$P?]>:N,?\*%K%<lOl=28Lac)pVS:@snk+pMk-5qPfmc[dKk03gpo#G"$i-7W^W)eW7-,'78@&p2Kbg!\frior%9G_ehR*k_m'Rfn[Q<Q*I_*qT3AR%@qp@tT?#I1F*8%khY,$T#9C1j<hf9<>t0"X@J[-M(%Rtt%gBbkDW,tm\Gd(!qO$X,rTr<?34mu`\4,I$?-L78]?u`)+1^6tacq[@%ARlBXBU^W]0g1GSIt55@2A58gZf8%[9Dq7BANc.,=XFZ+H)Zm=,q@U,jCBoi,dA7p]fSkjc(2M9^3dH?aPT4aa-XKb87!:$M>q=+%[,;Np1rK'JL?V76i2h#!m]KEn>aTN&/iki@D:I<4Wi91kArcX4\km]G.l0gm<psWS[@i[Yd$Q/$s/`_aaD"c,7kt8HWGoa#_8-;c%n`"C6&,33e^rQuAs2$',>+L347DdrqOXhbh(F#"2.%Pe=l4e\?%I4GheXG@fgkduU]uRWp>.XBB;c[IZ<t+DY8,$64<p@0DC/fr6%%u:+Vp;4:GGOjG.@r$4&f6pO>_L(d6DrbMEcA><bf2h&lkptVcR@iH)&X>kG5_$Jf8^0IQf_<4n^+>d5R7]`J]J)f(b0r4pDURh5%(V.3ah8VP$&lC"7nu,QlQ2V=Eo:OPLn=K3nW?t6.<jC#p'n33."T\&OVJjrJ%^'4fMCl"_M"*&XS]DnFNsek_Gh=+Ud)kII2+Eo.%&UAk]%.N\1/qgTa)M,;2c)[B(\L8;#l8SP/HZ_i.T[JQRRpg/+RG^3tF\CbXjVtC0qNAlH$dnF,k3sPS;fmXC5GkNC$6sglk<$)k%I\H@Z;>HBRQnl`En'tt9/jG9o&39\$Ra2H.21.TPDgoTprqmB&h=A=/:XHY!Momm:Ec+eJU>b7/\kgRXoD,^e4d%\UYVZ)@+moj^%poL@XB4JHAOnVj"reAS60SNhe.tokh[<hR/8e3-)><7gBI+GFhqX\(D0q0_5I*=LRSrrcsBtjodCGgGd+IB;%jfus@L&\fo^8eQt%fPG$MSO#QHYP\9aL@iCpn^#fC+;XaGQ$lR5aa1?PY>AmXs%F%b5bo1Z4]_]&?'bQY!oDY_%K-'-Ba2-Pe4(cO%`$/Vk;kc/V9;qR%$=3Qf]XHgba,U=ZCsXj6mIFa3h>Z!j#MO<HP!jR!@Yi%>,\3NCKj$9/C[ts9T5hO]TOA)O2eb.#?46^r.Y/L>)^tpT"b,es'F$4t%gE[9)_W^\dc^=)p1X5S&LOI9aj_0>050^T;*R:P5%J6-n9d8fRa1BM/G,7s9rHV*fY;,Qm]DYlP]7F30]m!=&T%>I,I_E]Be5Dkp%J^[qV]W9=:B#$/[3@O.a6)Op^^b(NA?-42QObqVtI]/k6LF`>=MY?@nmhiMt6Hhu`9blCQ[/m\XV`!3mF03Fk)=gh-WAKW5")%.0%R2/Ne?"^5:Vc"o:[9>#=m5p9)Z&6lp6??$NE:]"UAAd$ADl9n0I0IU2'1BZjc@hq_s.WE[X7%)*e\UQS8)I>c`lh,.7,KLtg!uKg%"7!rhYUq5Q[iK7/9mse[1fp3)E8,n(+36=;\5IQi_E4CZ#)SUqD#6J7Ab8<7T[ma^\S@Sk_itd)d(db2Vtr5tU.q6jV\J%c\G9^Q%b2<HXQbUq7?2F%WTO.f>=8RQ<4!d]m-RVh>?MYr)`7(+%LL5)m$X#>Ifk1$$CJat;0k9)cL"aZViL.X0;r.J^7_j)Q?Rhu"Km%$=%AXgV9^![deJ)_QKMPfX0A/XWRAOX>@r,PL/N&PKo8=H%_aE?aMXD"apghHaSUf/>(R.%9nPSp>??idF3W8E"sN[>jr5G)%E@ck`.%<I\PqarajW[ib3;b^IQ1/b@F3]5l.shs7Dag0KZ%MuCXNoe3r4p,Q8?[Ogf9-DHO3,@bS7RPe'S4RO"^li#SE);Q81O$0A"M95:!%i,u9=f">1XX7'0`LkL8Q48DsMUcOtr+C$?bihnmb!g3;ojTWc34p7?*c!lQL*6XYO+4oVDiD%R9<;A"_eImToi<.1b_\>_eZ;d*b%P[W3!iK,I*9Go*9@[aDYI]uT7@YUm$!1J/k4[#Y]\fPoL<V$;k;nB+N0j@T#^li230jV+R5h@#.VHYmX-!M0?a.P$oM`cDn,EV$&%k8-md1o1S64/1+S<Juuo0EShfRPA4XRlXNMQmjjDTKAGQZQ'YGW,$rcfpAQE7@5f0'f8WXf4+BY*?^^jZRq+\$mhe:1le9`HH\-$%C1fSBbVCb4X9feAF_Ee4l0o)2!s[=cklNQ-Y&4Q(?pZ0@"$req&m"edG<e#n(mYm]hSR0j74Z`!A5e;OVUC2N=c,Md;6Xe&fLAOl%/>1%V[:3[8<(p:3CkHI^1"GEAhsX\4,NU\>g*cIG%m-["H\nMm`'`hVj?,4bGp!glKmc"$N8>hRfp8dC-GT%VdT=Xh9R^?^B'>N]%&nK\t7*#2e\]HoBX#m[1MP5Va*/!HF@<LjjMO:Q8fONVHU+ZP7L"/eWYX(d>j3Rlb/5_pSMjS5tRLbhheAUC5mr<ko7CE)hpgNT<%8lL2;A^fM'7.6.&Es1k_3PpT?L-r?4BL^4-K6T(rRMlcdg%It[i<k?'^;i[!p@IYL*XqG&Qt7d/j.0jO-VbhtgU9fb5cd`iULGU,%Q7^#82Mu2N,'6b)GWTTnVu\&laGBPH*[3M:/[,Wc4DOc03Bn?oZutXlkO2m\XTM07@G$kV9)M2d6`<A]MAA!",)fBl9c0[s@/bQb%Y)e07,=Y>T"2;$pe"+"UdbeG].?4msX8a"Um%DmC'^G]('20]l6\>5k%'`3_?,5u)q9foQO_#%30p3\RH/GjGFB+F6;EhDAHktCr%XP1#(<8q`Eq"L1g5It)!FPCV`"ZBhBrE4tN+7tpdb(.Er7`LGihm!3d:"#!n4m@IK4/>A?ZFVTX9eiqq@R@DD!g78-31:/Hm_ipM%_^Zf`ffl4O!7n6=+_[/EZtRG`jLe*;W?r$1dtGDF6#`j"k&dOpF?il_XU*Ja0]?!r=#XPbOo5KWXi=bC_)a>&S(j()BN\m)i,R1e%$;;6;P76&;)ai;[H3#8.`XlZdkpEAoTpXW3DT@8M4RSTd;O:3^:t--ZZ$o=I"W;6i.=q,af?dEL2nUISXjf9I`mfTQYIh-MKJ^kc%Sb,%hOk4:\rcG\u6R,ID80MRZAD.+b`:AqbZ!g*P0mHSWRFZV=J:n8&ER@9I-]?R8%5c2J<Id7g),-tu!g9Le,uU[kU(>'S5eh)l%>QKCM(r;@h#ZmAo/9K'U(^S;T2$4L`W&0pJlB=o#ZRKP*_>#I$D%J<O7?aJ[>,`Uj[6_f`alX2/KnLH!j5^`4(Eds,<MEY?%!WW%%JP;7q8@imT%#b#kA[#6(`1$<F*4FItWD0uKn2M<?j=P&XeMIq,0MVVf>=TQ))e="g6Fs9:DH!6ZWXNnq'U*`5+b,-Kcb!rEgm4iK%oEm:66*tB?CnlL^LhkB==d`fj>5n2i!s1P&&#O'V-.nB#7D@%IBR@NL"I:CpotRu:-4qXX;WF1.J)p#IBN8%h(,c^C)AW<eAIF.\%9!/qX[A:%SQiT(]O(o.mNM/A(m3aFr!19&Ig&Z?30d71^FTS("9Lpp9Q'.0#L(8FL+o*@!N??1&=qUsm@YcX2E"ZdLHP)=&Xffb`%&o6eO1V$!0D7QI?5n.=7(#hhs&f!=p]>;M$WIi9[*D&@+\$82QSSH7%<!9`@%Ye%>W[dq&ismaE*+f89c_AJjaLQJIirX)<YlbXo%?^eVNs%RO,ooWV+UD!\\9p1,9fk3'-fG[=&!Bi_6_Bkt="LSQ69]AjR*f4kLBlZ^8>T(+`??14+h8>n&R`spT5N?IP'h/\D=u9)\%QZA:/:*Kg&Xcj5l'T`F]291G5m\m4F!.nQN?8i1'El)tp.,dR(?egBkDJ51B*<h'L$uS)A**5+Y5#&@=fg-ns,)QtQMO#FmO`_Jh%OpZ=_>oJlCL?WqE8_t`a#._=`5)_<3)NcleXc(,bE.O>)3$p@$d,ST['GB`-h)*\!d.3'U[&DFF%EBbkQC!4uo-h]nE\AT3<Va/b%BUT1T*@!7Xdn>m=iCcf@=`e>/G8t3>g')Nb"k2EA9^X(>n7qnu*CQR)Ba&d#1QZQjOXA*93M]F&L)L%p$':=5#TU9!"[f^/lhb+o%I\8cRe<D%9Qu-a3,'&l7!YT@)l<#[%9T'"(-:pElj7j^q0l.iSK]/`[,cWC1)V+t:5l)Yt7[OfVjT\q)%bj..Gle0k)iG3ZPo>hr%4\>:i0UA8mncUL7K,2,\cmQ+\n?bJn*L!fSR)fRS!WbOiU=CEl!&ii7$2'So+lGVtWh]k*ArnhQZTC&R4_Rem!CVK8ZOWs[9p^SY%)8X67('f@\e.\6J92a"[8M-o'B[V-o=A?14+ko;fE6+._Aol+GM/2Yp+W(o-H.#4Z"I::?D(3']C+($qJZVn2&C%Ym!h%*6;8a3k%-tiNkb8Vc<3Ik!08i%4UAnm3s#,;.Gp*FcHB1fsMUm\1NG-LB%+Jd)[XH8]Xfnb=h"\,6&<]1Lam)&(?>d[\g-tMlf((=L,:QZ\!%UoGY5TF*nF6F\AQ6CT?HPVf@KCED+p,ZkV/g'DW.*SA"T-EJH0)p3ho70b++<7h&g&th;m#]\0c%9YA>@G"7c,V3LT)*$+cBg7dt%+p5)*n,pifTNdN<?JpU)9+VhB,dBZX/R?Bc/?+3qBjs2[KF5O8n<YFGJ:p9PXs(HrECSC6,\rd=M5([Se7H9f;dg5@)HMD;0BegW%ZOIcMC3/lAO;q)>3OXsEJQ<a(H43Q/75uFT_DlKnBJ'EDBtaXX!&3/j+`t!l@jKF;T9/G6]4?o>pe6h$m\4_')h/D_oV;XFT:tjj%!NB8Y@1cqbIYG/UV1;BE7H%Jent3:?2!'R%/J<A+Cb!(m()bU>Ta(AuW+s1m!fX_OQIJ-Z&d[W]aXnco7&@dF&.McMBKS(@5"k<o%iV#cb<aa@sWQujLT3.kBaH*1.gnh%ea/0<?=NclG8Kp`mVEKlcYc>'>9nVg9nfeK0GTg#o8fP>CcDMh2L/0[/=3rjg^E?c[L>5%9%@'D*=#,B;%?rEf7_9%]ON\h_07=7QKh_g&.iA]lIN[o!)Zr?)87a-E@c%=UM6P,4+.j*.]\uU@dJS#WM;e;07:o%*/ctD>,-F#lN%]YUBjH-==+<S8.VZphP,%PluS3:o:p1V>j0:K>8&B%Uplcj!<.QJSDLLpL58)h]Zo2FGW%#:b^@ADNX$b>WB<!cNZI+=RA_m7.=N%(D:GLM94p_$6B;s&J3oI6gbk,$AVnG!g<BAa_DKD*d>DEF51U[b76<N$)$K[XrCnE@=en5pVi>QTHi+j1ls3)%tlD;ZBj^4JF",7%*/@>-,YmZ+2$nq+n'VZllH1uB%pmVKG"gpfO`WI*k=C>hS<1H8D&p/K*n?B\[TkcC1d.2Ve0N^NY)bq8)aSW7!(SKprfKuFZ:Do[%9IMe_=!=c%-6Tt[*"FI7*3plKR*`+NWX8#K;*MZP#60cb6aE!P&8-U'%S9?Q!;d;fmsn_9D%YTE%#BA1-,K."`F+n,QS'@WV^'M4%9pZ2!JeJ2]><"Fgfo[CP0Js#HGU+0JaKm2:Z:pcN'%Vl?UcD62kUOG.('oF"Igo]i2^BG$?*?eQl/]oq94C`n0]I'<Xg7.l0hI"V%!^r.WUuV)H8Bd8$$5co)68Kn[>O4N\5Y5M%Vden$F,7[W2hK,@[iQnni%j76.O)Q?;D7*M@>ghHBh&X.2!>Db+`WG#)R^,<G2`QI%21p#f)0sYZUR(Pai/nK$I#oo]]PIli<\uR`Il&*JPU[IY"^iK2Qf`-/Gc+-p@<-1ICe`VLa-'5^1Phrc%8CR,5UMY8KT.^kHtHKE%O0<e<a:gBe9hq4W#"Qu^?sO!6^`#V9fEI`Y"jkJ`5lq3A8b1SqE'm>LXAV6keocge'qu8/5]U(A.1$.Yqgq(8PMmR.Ri'bsP''LA%)&gD#:V__2cP1qIEPV!8[Yu!5+Y!r.60)n"DN]GS@_g352OOoL@e)J_OZs7rS(=C?C7sfi;h.CS=H4],KPY<(;.]<,BgS+20c1XW%]jgig@!1Ef*fPPZ=N^<$%B(SB(2`:+fG3fum1C*?5&uM:G$RWXEe5l?PBPXa-.%TAJJkTm8b,g66T/USg="VIc4n(Y3%]u>f^F(`%"4QGZ)?lqF0On=]?&':-?]!oURYW0BOReL31kIt$*@k#&),2Iq_@K?%3.r'1aouU*Mt7X!&>f-.`?B>]n6pp9GSG`((_JFS%E.&;%4*:TH#CR5QBEkak"?9Rt.7!g1RmQs*MVt-2fbYn7h3^5k(5uN<B3-G4'4-A,;^>j]So@)h2T:7;D^0,94&@&_0Nn+%g2t[Y_:Y%R%.ZcSt_&tG*RlGG+$YL<;k:JQZ$tsJ3JF#'(en.i^JT&GT&rq-X2R>tZP'J\#-E%7*LTOjf*"`&\a?!^1<$9Q4+\*f/0X3Yq1QC%R%M%to/r(%-:&0M+\$5hK5hB8h7Y^!'A#!<?H&P4*K`G:](+W13iY.<28>mH`'DRJ9;$',!-F::=TgRoLc2aqiT3h;#M3A#mu"%Op/%Yj!']ZA@Xb2Y1V*M.AL;%qlW]Z*(i79J<25B<r0oFG-CAZU$@,Ucoc[W6k5J;3uh-mS]\8',1]62B1k3Uo7ns!]@J#i%_UFFTgD=%4t"e7V\,igR&gAMA)]J?7f\G?<SI6OJk6?TCKid'GM"/Q5b?*Y6`\cuOG0"#_k^bWHY/e]kIFC!S#eGWptu.']KCg2csf#oM0q^c%9fN+5h]*uk+`>DLB,cg)b@Z'"E<K"qLFiNm4+j5_MVt;B&Ph:C,[MZ^>hUKmN6MCGAdrF?e?!&sX_OLE51_S&#>lL+Z;P$tWQ;CA%17@>22Jb3sa>^D"/4Ae"hm.TjZ"+'^h8A1OA(?+M_VC4.,En5PKnqF7\@d6Y_e36Zp0#JhKX<Wt)iqWW:$8hlfX[Hm4,n3<!@)+f%\l(bs;4f1.dlJ&3;>;,h(n^/C[^Zd9Zc*c?"&<RD+ONsIaM1J^NbS$gWK0)?W,Ym/.BK:T>ND3WBZ1RVc&:/pHI<5Q1Vf6s+ZYOA%.s57,S+>p!,bW/4H(]GWDL&r#F%.)H:s,(dM'I)r<]0?uQ%TXV-1feD=X,CM>rYTW@0O5)[F>c6OQX%^FHJCii<0G2F9ckp=3KVl%?&!`h#0<+aHOP@jYOk1"I@ol.hqe-cH"EbX@G09Xkr]$:38$Z^),>V0&STGpA]:Pa*"!e]0H'0EiP1rBjZpl?^r\ee_<_,am(\h?%"ZoJ@AGAW3(WfS`^?3a9[ca/]j!2/2#:FZmO6,-roIOY2`o2FpcZ)K-3B0Rh;`+SmkD/1H6L,jm(_O""FYY%JmcbG@@/+LsRP5>3%(rC7Q5SaQl'=n]H?'5Ri6B_;J_=RYo%`XnnrR0b,rCuk6KF@YdGtSVU:%cF$:]I2([JsX.$c4aEchG^"\gh`+E(9PteGYM8f"^gt%M!Y)&NW$o[e,JQPJ#Df7H.O"6%8L$XO[A%=XE304&nJ=am!oM[3<GCs@*!Fd=R$7=lkun:@:T"M2=a9=`G$pe/eA_?W%F_4#%T3C%$-,GW4CK/#AodhFHQDT63Qb+'"0%aq<Kd?5\"e8`Lo&6%*97U?8+qCRn<#ir>eC/CL+P'43J_9'Q>likaL#H-KkbB99VX]7GTSD%%]=.%_3gL">>)=QA3%6dc%kJDb\1XqAKRrl*7:*/Ti!JUVi+J7>PA<#%`3dNbNf^=opJ=@dRd+0lZ/o[A^r"G<##E&!?b;4Gc8.F$%2F>-X`[AOi2TES$QDTZod6ZWuDN7VuWcB#R2+kP3dZ&*jXG9BRphSL+;c:7WgT[c`Cr\hr]'dkhPe<hr[`l(BqlQ8QQXBs<fpa&<%O(0lG>F<u$(^F'LE5o^b,?,'hajGt9,cRj*Z.h<P@[#8:6TRp+aBpir!HWPX_dS\pL<VROBJGK@=Q8L'rI0uI,5jD`U>M#B_Oos,%0=%DPFWnOlADHs9N;k_]r)XZpV\U)dNDXF.mbAXHGjII`L'-Z:NrM16R\1:u+p1DeNnb'`SHpH*5ifJtp"8iHn3j+Cq?]di8!a-1%ULAn;**Pb9$r3?]>1!>IWYuLml1qn4M!SDPeV<ZaIbiqnLCGP;?r=K]$/5RA!i=*X1&Ttb#ZsMV)N8(^#SP<ggeS.7"P>PbZtE&U%o6#f73ij;KB%XQRK+8\*1OuplrT_/=;H$Q?!Q-Y(UT$:<BK2*=GM54SgEp!$iA;)T=EgSakN1`?MDGL*lo6B5jGYCT0]?E3?kDLU%&+kc1l"'dX#N`#!R_bt=VFjLXH2TY_LY<`AfB#.qghX,'R7J_7?/Anq@$.BC@o[3X&?\>*Rg5Z0FhYBnRDdOoiDWVZa+OZmgrP2s%I1+1l>3-!(`#%7[M><Q-D+iJGs+'#k]7QOi_DnLG5t$>3Rnrp<Y`X.tg*O<tgrXgP!pM2)!9f2AaSQ7)Tn4LS?"Qb9LPDP*_eCc2%lM"]!2HVf+7Pe`"=O;K0%0>=YV(!LJ1pN'7*Ih^lVehBPl@L_R@!707_\ET,Hb\,R]1&6hf5'dAT8@fOGa!#hjC-RgVnGEpk6i%2%LD-k.BAs#gcF)!_*42*sEZtr)R$cC"s&,oT;]LfXl6f>5a[rPR<QBJ;;/nQ>\*W.O>^eh%^E`b%)DfXDDs3g?3E5g2Co9QQg[_ce%"H]d$X@`eXqiLo)BndU3W(drY#99chBM9"h/$q]>V7`,5VjnlKkY/]107fGL3"UTY&kJ/\M6!=@Jl<X;A*!7Po17A1TsKm-UTmgu%Wgl>odYcAnKY.DbZ@NBi6>hlA[_S$dF6Wd?P+.L"#J/])QuZA_[L/oE8YnCK'e];2o"l\UXRJ=qe2aQt?3:p;bf15C`4BfKj!bM0%ODR=OAXMWB6/on_:j!($*I0@N(Klj3$#sI%FZb`s@Nb/40]^3`W@1=%12oJ/ct'S<5cVCpa94A;R)ohH`1kr,Q6^88[#1omMBcR%%NSCGRWPnTe6Ntn_q9"j-e!shrVo9:TO:T5Z`,,TVC'5"!)n$i*2@tP9(d)RIC5K;TDYI7RH+6-g0/B4<MTY-K@L/QZnH%gBYok#o%*%=%N`Hgl8PhUjp`Suac"Ol;a/D3RV`N9[=d'.a+P_X86jcM\KO?.<4TI^PK=VTMtS?@^9!tlB2)%4\>,YV9!^#+@nA/UmJ7o0qG%Z=Gg@np"^PEGL_r#%.M#g(IrE@i-+LiYbCd4:.P#P!_d1?m5mW0HI,`kAV(@4c3ss@3"*bhB8^)]BNZ\c7[d;e1AmtdVuCWk"Bf6%`,OAp)]UX]UtU32D=b/E4H02#*.Q.g>:MVQjt'6OI9>u]&Hd4cC"^(NiZ^@e)"QBc#^rsD'.PW&3f;r-!jQ.K-:HBs![3]OG,2*s%*#tA]6Sd2VQF;EV34XYCRE6]nO;&#<6_9=_Q9-kZ31UXFZbr3/"@_l)>E;<*el^]-gPG2-4jg?ISboa(70H?i;t1.rO$GQC8=T[4%>iRdX'%E"u7(/?jYm,9+brQTmFAaN5nrJ_`/<ER35R#AWK&U5G`!9\YWGr,)DYhEqEA<uE:LGlD6C%s&W&tb[rk'pe-6cMeQPVIu%SCj3XJW/qITlFO%bAK#:/4*iu\H"BB.Ck6L'[Y])d4[(aB5j%6=4klUZ,mA7jRtr8Z,RXf^#;#J$Cb,;WKJHD8g35$-Q+DMMQBm0%::Sph]*ji!Y('tb7?AWc5*5%cUQW_eWRPj2f#)]lo_u3)SeV*=HkcM.iArC(Ma=n)1ECZV9[7>30IP8M.DZoT.2X+nVX`K8W"4i6%((,g\(i22.%u50qWQLQfs!LQ0,lt?aXs3RT=Mck">c8.Ob45Sa]6fq\="S53?!O(Bi(6@[/]B<j`>OecWrcZe(C@#`l^G$<F)j3$%c5P+ih$us].'AAW&9ODQ.?i+t&2>5fU`Pn$6)cWqn6.$pV^*K@\m%CO]!^KN&kDFKAB+jgLf,)ZiCT8Y/)V+F#^M(9A4n3q%2\5'%+_s[M#0soF0m_%**Rl*?opRW_XXi7NDr#CHOcUe&j(abX,,\OuT;`to:QZY_Ue(uRK?<A?jFt_s9J;8MoA4T=E?Za:>bI+h]t2,\%)J@6%//'sl;FJ_eQUipfH"dW+B6:Yn[cuohOuBR)b.qC.jL&HflQ&Oi+e7d(Vm/NXgUN6`@"])e`@3Iq@<-1\Qikge(9fuAh-NY$%&p\#d.=j?$'@)h$IurAX`fpn0WAn.EGB@5ckqXZIbCQP71*RTrg\@EH>WItfo;jEXLj6GfRbLS+7Oq#'JPrl[?l:I!e<5qn587-%%hg"&sQm`3ZqU[E4*@l\5A/=K8'=Y/VN=5IUjC%KW>_Z'o-e(;/K#Vd<C>]0)b$Fd%&h3%!*gjmB5:bEQkSQ6n3D^6Yg2Nhn:ge#D%hFns,JgDQFP*i9ij?t2iE>%N+s'nT4_V0Ge$22[pVQhO)B`UYD9PN7F*@KnI%\%[`eqTl5BQ!K$&X*]alU/0J-(SggfT6E".:ei)%$^"$6Vf'$;'NL?63@+UYNq<EMo`q9eFtFS[#('j9U*=I],Eg:op98Y&9fX5F0AGt9/6ub,P6aNJs7[#@("UHk114>O$CCCP[-Xj.%.([L=rWM+Di#GeJX`OU$b`UMgFhZ?n.\eUh#[08F(<T1JaR'*Il9k'CA7W`\MC&e0$%7;>)/1c^ajU-7/L):d0N:stocb,SaD>[;%(P\%J!V_pDRuhm;i7ffYphf4nL;I0Gq+uTB"K3rXpV,ti?YQCY.SZ"T-C:MJ!OJID:FfhPBSL0!W%>((;R(tB$=CGg/JZ/?=t58>%W@5d5;A#Ls_A>A3V4pU9%$$<%YV]<aD_[?j81`]lb0Q7X,4G8!qn\$9OE+W.7m7G:#i6N@2BCRaKp9Lb=!C)m,"-cO.?P2o[g_\4%$qt8pgX\&X57kIVY7pG6..MhWVZ_\5l:@Qsb:4B+7jL>:?+<\4ae18'\7Wp]\53Y--mRQ:Pd0_/;&NBM72P^J!gYJLO4^Bs[3'`l%X:*nP^s$3Fc+3tCM#bPURaPI#U()hb7]lb^Y]NkAiF5%^!Y#na"1lL-_[JrS71qCk$90"M-5oD0M:\W2Y=&4V/<:,OP-kb/!<=9(%UWI=qpjS5J/"'SDUJ,'s9p*Rq+DdmqZ7pZ-="[4d.Cc`)E75kpje17"=nD_)X2@5F`KEZeE"Q0&&$/@n_KBkD:m&bUV0cg3DCGZD%`KiM"CqXe9O&7U#0CnB`RkI.p`?&29_R3\Y=j'*70:L45;$Y[1HNqI?Ms]'oZ8@S0qAE;"HSU_1^Fl8Wa5(7(IFIgT9ZT`eEtI-L%jr=I2ji<%@VdR+/?,rY!_tPK87-io*)B\bEc$10q#]5DJ;d9aH#1%=_!&5r@:\$bi.Gb*Q++-suIc&TY9,r4kdQo%N8^$r!W$AU$%3"u;gUO$Q0e*@5J8ban.g*/OGm"/a+DI"UEEYa%G!sUJ>W!Ig(_H_nORBT[fPQD/r%dJ2p.NT0b.,'t<.-"q.7iKu@+%7^<IQQH9%aU0+<e)I_F9Z3PhX(,f5>UG1YQm-4G8ec$E!*S[J/i5[VK542%Wf,+JZT,lO\980c-?[D>eYFjVgNa'q1]CAeHr@Q!qNMbUkl_r>%a?IC&.DE&:D!r4e93=Zk'N8R``4:Fqh"oZ``lEk->4tbqXqPNL4NS6bqZ*Tf<"8q[YoQbHm<j8NjKoYh[-W;3=WYkr+9[/Q=e<df%1kkaH%eJU9:$uceM&u1((M*O96k=1&8s8-$4OT/WndJ1gj*(*GC]B&R$Kolh76lf?+M]7V*SDKg<&'mJ_hZi'2aOu==ZO@]:mCC5%*jec+68Kq"5k4HB?PHAACps1Zj]pu$F<$4.Cn)[,D/dGrNJ!=Qe1`;IUq'9:Y,),l8q%<')Q>f'DI580qg$L,#b4/YUAU@Sl>fW<%>W>c/3Zf$/14tEF>m,e[6K!M:3EB,s*-K,O_a";-CbSSRhf3d($Q%4L5B%#@pUhf2UqJm,JHlSpb\!&79/NS^;bB/>apmD78aVK=%0O.\OT/=)Z'R@,8885Uh5q_A06/cb_#Xs&JNhTF_C>8;-PbEKn+!(Na%5LUid>!S0Ln@8#X;c_R!/=p,L7-2lI4Qg`9fYX4a)Ql'%N.Q@d=7-q:U*!%F69.:pDriHJ3;3GIi4]CR!;8$['Je09(geQ%ad=q_W<:ZQF=F.?NCBrQhnaC$D-M1>)Gfi'8Cc_J\gd5!'V2"i%n#?"j9*,iE$#0)TAMjGaHr*qaB$S98KOINeBL<:7E)0L:%WLm[J5n\T2.aW`Ks^DR'qurt=6uUA_0#q8;%8nNJlnr\B";->$(YK1%R(6X6e4!f@Qck/O3$fmk`/'e6XQe[$Ft"M].gFH@!l[LG:S>rHS_n(21*.d'6R8Q#Yp\-_&^7O7SSdeWXZFE18]/5P14i#nZ_n/8%n*hl**)'r,oDQ9#_7C3+"\8>P;&>s-Ln\(&O",f13d117Z7:P)o^CCb5:?C5-1:QL)ASKQe/`:_5R#c<!GUSIL04NLS,(\SN,!E5%EW@W3jDgaV/c&XK2_$2F%Qa65]TGicIOIfl8c*V^TaiGXA7,^PNA-`mgWI!_6!k;Vq[_gc7+j<6s+/BMe2bL.rEn^?+Q8N@R'i!0%>%/HcKl:Y)dYMn:Cj0SujT7,)aR`4R]s>If+>fo4?LGrQ1aetTk?%_aU#N#0O`44-E)8sPEO.D4j+4mqC>b*\I\:ia?J!"i'bNdN%*sD_@CrPmH0&&Ujb4Z@+L((tHQ:u9s>".LH\t^*I2I*Kc78=Jp?c<]lib5J?_#5lDW!/229S<-^I&q?(.]OpAK*3m6i4P:Qgk0-s%9t#eR\n0f5McAA-dr[t:d8\dAF82c=Mf)[cOF]GboLPpbh1dDo/&A\LmriYZiQP*C9)^pbR@IliaXUsb@[IT`0TH#UW'J#F(duOa%;:op*bK%4=32qY-',KbPU!/MTRd[7$UVE<6V0`s5*7mD@1t@gOJI;aqFQHoN;5h`-*.?6T^Q5:bRUV8N8?1s@N5J<;(g-s>NJ_&B%4(ANgQj<h-JCDh<E1nAlIN+W%dRG0"GF],F%K#`^K7WjW+dA0FNI\3"bMgTUrfIF.2^TuOk\KBdhk7m]C]4Ph4Hb.U`Lj*u"M9fr%D0:UaC`ccH,MMSGg&8%amdnfKT/beXJ(k&1]Jq:FAHcA6<Z>U/!AjM&,[_OncMW9[Ls]>59EMRQ'J@8EXp*e%7G&S4g?G8Z32[H5%H_3,%(I(<6UVif8`GnW%o$Y(UU;8Lk@%UZ`(X]3:c<YV'\=PD9acd`DA5NX'0HF-,eWKB8EY1O++HcDUl(I_df3mWTAmNsqF^UE5%4>c%"34$toYtXM`anHPfaCeou#OAoM[ekM2*B/BLQUX:F?PD%WFQ?)p(2#Y^Y'$d$qDa$8mr(#p^F@9Ks%1Dd2`AG7O"9"2bN=!R%%\^+e9s0p>@FHR;F5U\901(u-WQT=5RO1DcJ?"!MilH4K,W[%e<64@`3_D\Pnq%HoNG\Cn,XUV)5^83a_,]p:h;kWb>YuO_3jpRg%NbhRXX![tj)I=q(.(FRPPKk2&/+4@SJ8Q40mQG3Yb7k=`<>Sn&&[,AY30V6F:k\05F6WmKD,Jg8P_BU@KIr[GLU\2$nN!h+G6HQg%dB.D6>">HpC+AD&j2>.KL7rFtAP.:Q@,%p!6L;9Wn/0s';J"\oY=IMqEq$A"c&sI=$=eue/Ioh1<%hJ-?2AJ<INW"+EbtPT_KXc.%(D2I^kAaL>1&r%^89]1^osV@_M1I3l_oH(G=-bQ2blc$.edT9*LS18eT+'.2*LkNg3@@E7Y4b\J>9)RN[W)L>TpbgV0WqI:<$da5%2.<qcioSL5o=eaV6O"I>1'?fo3::Vc+ZQr9E,$j19mFk*54T=:^ISO==1EEMpHt'_@qmbJG/@&h0?O1j(QnWSI,Q/ChYl4d<=D7T%UK75LkQ5'eKtEjKd&+Up.*D[&HGTjG!o)-0`'"o^lAm3?[u?ejEPZ\O&$F(WY6l'e*eN@L5lYP9RY$/OjTlFZSVb['NS!p_qC!3F%Zhsl5s'T/EU619AWu-gI@p!Z+\-fN^U^%!5r8c+QiE.>?iH-H!l_@j+`W!,)e4dgKht"?V\4?CNYF6H5Xoqq;5(#HS`9KrZ>);;o%0!Fmlh5W]RlG)AUV9!L_o(tn9-+q!Jf`.`&p=EFCJQ9>W7ic$6(&p-KQ@<@2s&Wq!.lZ]'.Kr_NGYO[i]uS4!\-0i#(mjA](`,G;%QI(>A'F)=A#uqOZq.^7382IfV0]%g:]Wsi#@EK5=AA$$+76_K)QI7X)4oYK3SR%-p8TKN7Jc8$o#aPW'q>G;ICHQ!<YV0h^SIphu%)m%k,Ao4mShYE\_XNKgW>8g-dXnJoSXu@j].k<D2il!hYP8er]](K<%$\U?\Nabj%f#W4dGZXdj0kuHu#<<VK5rI=`5M,m(n]:C.%n;1S;]eop77Ep=u%a5EGqE=m$SoEN0EI#cNF-oa$)\F?@_gt0.&<ssH1nOK@kYX)_2_,@B[a<15RSm.UlbrN^8X?%ID?_^=aU.G(%]tl_`PemGR(m]1+6qIKd$7@H"jAG%T*nsfMU0ebbAYo_F6?B3]e^;B(i8E]]Wb/a$-'T-l$4##7C+XBTSIS>L2J*VU<LblN1ZgeC%P=/_E>.(Zdn>MkAb#)m=H_6M4WhP?-gbHM51^7[BBF'A,?g#JVU(2O@_V'/N3HGM9TCZ#H`6W<Z!"t5J2F^_N@B1Y<-HeAs-=unm%2+_">Ji)Lh(6`g18Sd<?(>GFn2o_o"@U>)bZ=`(K1^Q,Tp193r^Q:'[`7);i[0K/Wm=b\B:H4O^p"JXZHdat*oO.SY2^\C-9U#Ju%0'"ZsN/*D,"IgO'%pUC.2/@;/+1S6L_B^TMPl4VlE3#-$qDRt4NjqB'e9t>2-g03k6^l6@-<LqNM7:UnN#<\Qk=@3'W]Df1@+B46%F1f,1\%hj,kBqReHdV\W)>=d18'3SVqgVd2M?U/L"TtAt`Q2!b(UW,M'pMQX9D']GTOuj'kO;#>lkcr`\N3SEkKaMC5J]a'f53G#%l4?Z2et_j2(TV%]FV4aYpSkAd2=5Oe6\gM5]qb%Op"mhf@ML6]pc8+nP'glBJ0'FS5aRojPcN+Q,&''2[tnr(3OoP[J9J`s2dXJX%$cMbRT/+a1q]o.Jb0N-L-g8L2"jST[VehQI?mO?f"H"Cncj4S[ct$!75)2iVI2&+^(YZ%QKIoV467/X_D'l),9rR22;@X9aa*0Fs%$ES=M[Mpk=58O3dKMX:&p?[fH6f28<$VJm&g>gr`lRITl=)CsNgdb]%`IpcI2\hV&)PI="J.4&6""pLV9jm"!%/6_?&H,+"X-Za#%^+Nn0S_I8&IQoe^nPtan>-N#_ZHI&2_h^^T8ZYjb96k)8[Ot[UV:TU\/Qj9N5$E(OdAQLe;H!ME,b:Xm:gbC`-WF51@PQ$-K\C.I%m@U*_U8VQ26G'DFQ-h>P'D2=@qo)=)_AdrbMKN7JBpfmsKZ'=Kd6?t*dE+)*HnsO$30EJ'*qG*NBLR.l!1ld7ab2%gXqOQH(h&Rc%jiod\+(bb(mtXT-.Kt'K<U7fo5QO.q:m6/SWXC`WR?RfMGs"P(Y6HbAK_1Z=j\ZtZPIe^=pK8%:LVOnHTZU`/E1gf4E*B8j`OK_F%+qGS.5<eJ7+W,Y:26HQTP/cuaRA$VP80Sth5t]#qXfK('PN_!!h"kUag50;'0feXhd,Gq<@0EKCm!ZZYQ$44S'qR<r26LFP/Ym<[%hI*]/)DQ)BB#W1/\QM2%Pi:T/O*d@r+mpEEmDC>;JZ/^NkWN,Pe<7A=o[eb/5[5R<i=jg$>R255N-JLMY$PqGrGWQQP=5`GQLh1b%;ZsaCKP!Ue6cTc-q^ruF?7\^DI%2*-PN+K0?H,KFpi(Rn^YOfBb47Pkc43mta-,Q;CojXs6JT?YY[f?R+k9r`.jR#87>.@bZq<>Z%*,0t,fY>8rQr&.:O.4?`/"jdWOfR;k`ta?YYL-QXahoHs!b?&EP;!pn.C5G^F-TFmXYh*LZZQmP9NC"C;cEO"3\Emm?P9oe=aC@@%[MU%dWD=27"Me;2BZ)=lAn!85E"Tc*`pr,J!HJYj^W5*u`nUlWJQiRW6;5g'P`a`>q1m]Xj;Ui!0CalSH`FYJ9a=]`SW]r=%$7I0%Qr@=FPEgRM7aF7'I.(U]6:n2Gj?&ibMei6rYtU6M.k:LNcaKK--q0D38'1rgU`0tBS2I#Q`BnS>OB'T-$jied,5#_.r5PX>liU1c%D_M@29PoeR\fr:Ifc2XJRk53'?W3[IDB=Jf]_.d85^I/*Yu&6eCEIH.7J2Mq`3<Q\cc6VEB5Kb@3+A7s#`5sj:SY7U#F<,,qAQqQ%-W.\1Ulr5*H^JY_UOQdbbR(*a]'\=U*iMIl1nuq:BK)tYHqe+=h0T"i+)]D]:X7%JRZA/BVLpj.;X>JXB&5sM8tB83E3]i5a'[AA%B?<YdZ'clI(i'Pl;4@TKJ^c=(`_=("n_tOjm`*e0\$'uHdGOiUO7?(Njj+O*9bQf68jOi33Kp[Mkl#efdbfTQ-kt-jos$'qq^C[F%Qp-oQ<gn=338!T@\9=`'SeX1&M^]idU4aFX0bYRG()>Nmg8:NO:6P?GBRhCWp:p^/YQS+OOAdN1)X.Q^X&&p(i4pH-h'#*(<TX^a%M)<^&'!e/a]58ZnXCT676VohuFb,O:?h7%B7JtuCPmJ?G1#7qa%oN<]9@VJ#L5"<M^J+jVG%>:G)[Z"ep0"=MCn'f[2iJB"/^n!b%c8b>JqjB6u6BN^C7(^a/]Ejmi+?ppTg"9rEXG`8mJQA-^.gZ72AjbR?@C5r;!mQ>7S&`Wp$90Ck0i4;V/4>kf]kYd.HC4r)a)u6t%H?2tnF@QF5DZiM_5%Aijpbc`Xe>\aN&!6=>Eb35A5t3D$kWOu4!Uf!TL+mcAU,/$<Te)K!#[i35m"q*lZ"eP+B:L'D"\`(6K#CSd%3VO["aZ2A@97<6N(Ut&tlbatX784--)$L%5LfY@)YbGSnb)"R-"@Sa'"EB0Uo:"9S_h$E$]/NSS1Q"V<biJn8\!ce5;/5e*_Y^<J%11u]gar;Uj0>5#B5Z^f=\%nq=(?hc;Ge!8IIiZX5q9;&]48t)@:^_'7)TWU9d-`O!CorR%F`R<s;b3.B&KHo:pBAY.Bs+*Wr#-/A%A7t!pK0s":ZRM&f:DNKAB*]U?O",ltJ38.a?nja;/]#B7NMR!#M8R.H7V?2364m4mhMPL_6tT#,OAe(XA0;MBD:_N-*Ar>;+AL.G%>4l[J,D$\n'F3Ea+@^(FC'2j,JY-BB,UfBI,fOk@;\\2K^e,U7dATd\>imO"eG)"<&_D+M9-G?NT\kWo,Ua^#/X,S*.3BY*i)_O=%GbGg)b#Y/9$b"KL-98mF.rDYM_q@KR/p%Ce;`#%-#4>&r>C&#0FB;HgaH$pU'm=O)GspYRNr+II*DSO+;R.TUQEsq<S+M%sXj'pR%"kTTq3lt0K*Jc%IcT&12M1]**^Lp]Y3<O&*LL`3HQ@p^=%Pik.6Qh[G&2B1NnhW/k!KJumj#u;a766''<6f,m!0K.FV.4Ce"5",s%KD9nb-ci;I"J81<RTLRG$enHFLtp7j1V#YKDuTCoGJj4)Gefrk\+sZ#e/r%B@o"d;89Ys&:OF%-+QdF#ZV,sL"K2GVR_k^l%SiR-%+.n_d4%uju&ZM_X3)[s`aRb.=hU'W"ge4.(AOn.JF#<ejo4cTuc`35S@])j7[A[D5,*-UH"@nH(9)86;fOX&>/'T9_pdFd-'16$c%:)1=8f-mJ'eaY4_AmMe3G2+IUeJ4C8Whm1Y,\I/IfeaZi3dt0G8<:o?e_]Rk(Yi*V^&u!n1G%JFOH`?o<?Ef!S18^j]&1lZnqB\7%,:'>LkXG4m_j8pe$f>6tcaursq=,p35SD3dBdE,MShk%7gX7jk#7X+ULD1EO&?;5H>%AW=XFIr74O1dSlNdSN:MUMp"ZbiMK`L"W%/,_n3FbNBKlXD$H"W9&tOe%O^h:3<.q-C`]0Gb1^),3"md!,#l`YkA18e)DXTb$h^hYdTI6O[J>-;YG8Km13Bm?;')5&\Xh;3(d4%N^s9l94OD`H"OGrM\e?.Vr?V(%m@:Ol%psK+unV`C)/!85(GP<-p7[DntHQdCl4ZnUVGWL!,C'H`i5$"\sNXi=/Q_,i6Vr(94e7n%)_BLX']PO78KSD\aLTq`d`E_,g(I(\ReiM!MFqmb"Ye=bo-r(/;3_4efHP`mqPerj#6;a>_RH6ocbTm`d'aIJ-tuR3-2F(!j4u[c%fFr4oF!>.2eM2_kD3!d6H*abeN7#scrAo;)^.YIGLC[Lhp1'6jaLsCn3;hS^L6*A;GWji,'$+5YW]kJ!n`63Z\tK$>qj<'C#fEW<%]SXR1SopFlI^j&N'#ikR--A\aB7+"CDeXhO9#m;7kT;ahcYph9*$;U52Hg2?9lYhfCmmcrHHA,8JQ32f3q(&EVu-S>Wb-&+s$XT6%q\be<anRu@_0!PJ<;d)qcPI]nXi),jId9sk+2*6Y+;djZ.!FaOTI_f:@+Rh!m"@'X0C9*[Z]u^!.l;RGWnmr2q&a3HcR3#;.>rI(%?2+uR4@Y1><$Dmm>L8?#<q*!Q%KUCWdqON'goqJriN0mC&`jFP[ts0)n`#a>f_D^/nD[kB<$Z)r&Rc'V,A*AW)4CTHPVXX7#a*(8%1i,Q27=D=!`HS/X.=Xa=k1Nk>3@K/mBYo66.mYHQW,iE3:b]cG"lDDg2(^Q#f;KI"bkM:BcU;#='ISeJ9QMJa(NVjPnYs2=Hfa.*%J>=D%;AC<_?dAogJU]4N*AOp?)\[:+-821&3R0,W[!Y?dT5Y66(')ZX8f\6#2Jq(f:;"S$H*"3&!E.e[m-Q/E1ga06I_Tq<X]bIh%H%TSWFhXq9fM-1?_!]i.]Y2-\j/EKk!u3=W0KO*N1"baGI*HC?dEYk!jQ)W.Z4-0U6lCAf`*Q+lILHcB$B*fJ>L[Bm@m\?bc["hE%C(EP=dG:0JHnF;<6(Pjt7h!"3n-5;-*Wt(Q;pU>/fTPqF+s>$LO$amurcU[cLE0ku#)SHYhCY%F;H:p&m#+9cOq5ob:OaI/,H2M.%.9VhZ8AnfH>taWRp\%-@<D-\"b#usi780@eMZH0uct>[>@Csoe^ij7MDiEO3'oW*4OlS#<LO-ETYXqp=99>0g+'jT"OjX79N2EnK%)0%.)klG30/p6bA1mu<@'??%-Tgtem^b##1U4ats:'f'JVPl,2N)XX4H0k?2J.Bj7jV5_/C,LrBRB1uc5QntqBq&Z>'Ii'Q,,o+Y%$&31@ROIUE8d_7of&#XtTJc3DXH&9_3bbdXE5^6?B8orE>',-0%8sW7UP2JbX16+HXOTtDR#R3LLjVbgU2c,_"s5"%A.D8mGV5JP%:_H!9Fp8ko@AmtG@Qf)FXrR?'/0_)*VFR0#W$;)p-)GCj7R"bNpj?d`)IjL&\tQnZM%qEp.I\q2U(.UNQl-f#U)Cf:#CJ#pH512;%F[iBiN4]2!W)hX'8.6U/>SpH[[dg9?N_ifu7PUs"?Wig$\@YW9nS:V6C7mPTOV*N`)`odeF(H_".lQ;A/](5ETb*LKlX\6qCF)_&%>I!6,cjZiZDTqa.>LWU2k9<,09cW6FZfYmbh;&UR'i<q0jomCOeX*#^\#i..pG^iT-3s/>Q]PCKPY,R_OtC/R2kqAt2oYDOXS3M]%B,7b<9%?$2+A2o/OQ=e;jFVd0R<aJJ]&r.b0fSCN,!lf`qf)hB=:';42Q+h]CK-VhMW_*??`,UG@H5u"K8:0+froMhfT4:Hb.D2j%A$Z)m/_e!\_XO_]du4s4Q5IaEXcq$spu;JCVJhe-`jB3"2Z]^6"Y,5A@6le!0Ni:Z;nUaJK7jP7gT7Vaqn'O-<bPS.)ftj1M4qV<%/1P-j)SjST=;5f?>\/u?f9B?]6K?$aB!KWaqLQ:0()9\cAYLr9p1Uh>!]5[,mtu6"058&H9C1"D9JFHq;k"N)*&<DVE^e:<QJTeO%"0*J*E;C'qm1L>D"MSZ&`Hf,a6lW<VZcef5U>iKC8C@mFff(1(+qd</A(?1&.;L8R(_mNWY5YY>/2H94iHce18:>gBX[-c,S;?8c%(G3S]hEmh<`,l:CXKBTN7seQW`lYgE[b&8sWEK\[Y-`g'P=GWXh'L=FLPeJolQoF0Bi?ZG/^el\b(jN9FdMJuU,J2dE0=W]H.ugD%p,8C=[7>msLq!LEYmG3iSB-m(Rq@2CEZ*VsW0X\k@`lU+]%bgNf`&sT]Y1l(Ycds(?WkDnd3]ASrqMIDMM'J'kl&/Rb-^a!W=<OL%%T+n8c&2@^ZD8:P;@fePd)&\15;tXe"0P[h'#RmJNY[FNXS(X253X[1j6qGmnRB)_HBk=KF2kLEV/B#'8G)f94=-o0drFdRbneTu%EngbcJA@=jp?I95XU[CU+t19p\D]\hH<A>BQ])CS,NYM@.qI??))]+'kgLd:4p9:^EW0,,5-b/@`=]gg;-7$YU>*/"5?[?,TY"GJ%.&)OZWR[.4HQR,6c8O.95dgXO't7jDG?Xa,!":<:s,;*h90im$5A0$feEp559Jie6DlmJt0GM'"I^R8Q[Pf:>*k1WtF[#9mbu$I@%.,ggXq2B-W$5%_@@?E)a!N&PA6:b&_F$UE0B8"s4X5IPA-mAFY\e*K-J07.A,]""2ODd::$@fO%CZ]L\(XR9cd:/4D\%g_1O@J]Y%Wc@`1Y'AQ`a4%8..Wr0_2r!JJKo$C,e5=pXa\iRPT+Ua+1JD=*S"NX5[OJqH#0"N0-&5g=pXpb?%eJ<,]nn/j^!C"_*2#^\nMCk<%177Y+gr[O's#W_AMD=,\4@esO42uZWY.(aH\DH4on+1tr]j*@'J!r6Ip?,b'mGZSZ6F_#mZ>:brgqA-[:WIF(46Mml><H,;3mSo1%1+nD;f54_C#K4smL!Ju=BhdSaOZ]rr'u^2RJu>BfXddl8@<)j>p)$iqJ4NW/ps\!:)1XsL@bY50Ak`?<mgYE\<0h:2[7Fm]T!n<S%gf+s[m.i3.%*5"+:L2'6)acS0T;DS,m#&`R_95e^HC+Z=^PpXjOr.6+:NsEkS@lH/A?/"d:2f%MG%Y3_d?dKJ?(OTWm9'S1iBVa8%C.FkU+Q,.A3(>rlT#8(+[di4Ua.#(.4Q#(Blht+]SNJ7<q(1^a3M1WB1(Dnk4Lf+-CVZ!>>gCqbi2<'Q^RFQ4isflX5+1@?(H3R9%UQuXb4Z513JV"g9,QCEd0L9@@McEpBlXhc`QJC)siNSJa'XJ/,.**"O.elkdFR@P;D;1E?@B$`j\+ndjG>PTG]fg/emYW\k'1r3[%eoNnh-,3m;T!=mA\Z#@GZLc=8la`ST/NdN+[e!_`Y`BFI]J[o#6`8N4K+U+5DprN+mk<7/PYd^Or8BH_I?_en-Tbu/<Zhf^pR9$S%So#N6LZ_(u/6.rh2oh<?jALbn=^Pi>]b!WF[*uXq4N'J*d(l=;,[?hTirg#?VNO%61u5BHN.,TK&-ZdY)(n7ifRQgp'\.(Ik\Pq2%%YTI>3,#LHo8"#V-r!_S`)e"="Ff_TOLRr&QN@?l:72#jb:<5<7>4>b+q>=`>J##2O1\d.>>Q?r`VT3QYCk!m+)ID^F2/.i2?=Go%3mY<'ob&?=-MAuh#\5l-34?5HbP(Wb:R:Z7HRafh=jqc,E3ZQM/`Y]_9'(onqTln-@UQ_O;ejDi:*Lt<m0*dFDsiWp*kQ-5Tr6;+%QIt%6J0$)lbGTtN(X:"J`?1_LE/[+JBl9P/_[,\/kTtXpd-sN:O-N84PObeKaqIVL8$buMMH2sS\eNp$6$*$&C$kXuE4]]CdRUT`%0>IX3*C\'>`@7aSM%!eU_o55=V$2HD">%46QIPC1pCP_>+E4\,<Jq7$R0nDOCI.Jke$(r=h2JB:.`actW3(=KW4#_-SWYJ:oO&PL%%V58+]_6`SZdGZQnD.!.egPBpBDAJkQ_PKW]QBVHorF4@FoiM,D4d]hr^d(gaqWYb-+lde\I-k;_%iK=%p-(k]PcjhZF>EY9Aj@h%3IA[%*l](3D9dfjO)'UC[T'E3m`*e0)'rU$8FB;2\[4sm[DbX!=@P_pceb8FDU3I6H=I@)*mk8[hg3'=_4USnaNRdV"nPS$Qg2#Z%K\NndOE2,%s"J2q@K3b[eFVC8$//S=NO&lAj[ol'Q0?NM.N:IBJ4gE=EKV->hO`>:cZQ[B@gjChe<cMcNAjod&rU91p%;X4E\gY.%&L;kiUb*i;6\Z\reB=(;N645=o(.1,1:.7R3#^V4Wrr4sBr4,sSB0QcQYLKNhL?F99q6VpY2,`8B_9j]I(qaqOQLZT-1t:-If4-*%QEReSOE:?0;Tun(\prVVcLCXdrGe,U@YQ@=!f/1;FBThJ9:QbbGGa"L4S3IfpaJ%n^,FGmn]2WPnoc02Hn&Ot##F!b28;>W:>ZfA%RV.P/Nrd=<[pCD1I.m*Cn9gP._5C*-h0s<3$V<rD.qjUGf^2K0/(2J9Wlg:Xn@_!B^$js%qdN$)C7u3QAQ!-WK*H!OXkk4-hI``+%^^]QV4[is`^IAFe0S'F-i=5mqm6VMASTIKLp.jARo.1\^<mYO0'V?rY@MsXeId=nI17Hn8mCM]\NqT&.o4)uRql1A\C.^j0`k3_$%Tb*'\&-;saV5OX,@C5?tm:!:g8$[p)Q00',[^b#QXfnd&<K/*[HY86ZmspGbpKfb[KL[]A/!#HG)gq5'0CNLUXV2GTDi/LaER))C%g&]bPX6:41?g9Nt6XOHMZ>%mg4M>%'"T8`.e_]:tS+fs3jC*aU>oYG/K<$&)^\+mH\f[J*Y<3ohB^k7bJ&_qF%bAT8>j03^3<EmO%GbraCfh;5';ZF!3rfslXDU&l#]Y;Ve^OPqQn,>'Aqrkrr]>)#Yjis8rY@%>$]:\!\b:i>`F3KMC5QCTJJ)9(rqnjKmV"]?Ws1/%&%QhS8oq2`;'^\d[grqO61`_Y1IY@%=I5Q16>rrBlqRlC~>%AI9_PrivateDataEnd